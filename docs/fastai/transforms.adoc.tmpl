
= fastai.transforms

== Introduction and overview

```
...example...
```


== {{class TfmType:IntEnum}}

== {{class Denormalize}}

=== Arguments
{{arg m,,}}

{{arg s,,}}

=== Methods

{{method __call__,}}

== {{class Normalize}}

=== Arguments
{{arg m,,}}

{{arg s,,}}

{{arg tfm_y,,NO}}

=== Methods

{{method __call__,}}

== {{class ChannelOrder}}

=== Arguments
{{arg tfm_y,,NO}}

=== Methods

{{method __call__,}}

== {{class Transform}}

=== Arguments
{{arg tfm_y,,NO}}

=== Methods

{{method set_state,}}

{{method __call__,}}

{{method transform_coord,}}

{{method transform,}}

{{method do_transform,}}

== {{class CoordTransform:Transform}}

=== Methods

{{method make_square,}}

{{method map_y,}}

{{method transform_coord,}}

== {{class AddPadding:CoordTransform}}

=== Arguments
{{arg pad,,}}

{{arg mode,,BORDER_REFLECT}}

{{arg tfm_y,,NO}}

=== Methods

{{method do_transform,}}

== {{class CenterCrop:CoordTransform}}

=== Arguments
{{arg sz,,}}

{{arg tfm_y,,NO}}

{{arg sz_y,,None}}

=== Methods

{{method do_transform,}}

== {{class RandomCrop:CoordTransform}}

=== Arguments
{{arg targ_sz,,}}

{{arg tfm_y,,NO}}

{{arg sz_y,,None}}

=== Methods

{{method set_state,}}

{{method do_transform,}}

== {{class NoCrop:CoordTransform}}

=== Arguments
{{arg sz,,}}

{{arg tfm_y,,NO}}

{{arg sz_y,,None}}

=== Methods

{{method do_transform,}}

== {{class Scale:CoordTransform}}

=== Arguments
{{arg sz,,}}

{{arg tfm_y,,NO}}

{{arg sz_y,,None}}

=== Methods

{{method do_transform,}}

== {{class RandomScale:CoordTransform}}

=== Arguments
{{arg sz,,}}

{{arg max_zoom,,}}

{{arg p,,0.75}}

{{arg tfm_y,,NO}}

{{arg sz_y,,None}}

=== Methods

{{method set_state,}}

{{method do_transform,}}

== {{class RandomRotate:CoordTransform}}

=== Arguments
{{arg deg,,}}

{{arg p,,0.75}}

{{arg mode,,BORDER_REFLECT}}

{{arg tfm_y,,NO}}

=== Methods

{{method set_state,}}

{{method do_transform,}}

== {{class RandomDihedral:CoordTransform}}

=== Methods

{{method set_state,}}

{{method do_transform,}}

== {{class RandomFlip:CoordTransform}}

=== Arguments
{{arg tfm_y,,NO}}

{{arg p,,0.5}}

=== Methods

{{method set_state,}}

{{method do_transform,}}

== {{class RandomLighting:Transform}}

=== Arguments
{{arg b,,}}

{{arg c,,}}

{{arg tfm_y,,NO}}

=== Methods

{{method set_state,}}

{{method do_transform,}}

== {{class RandomRotateZoom:CoordTransform}}

=== Arguments
{{arg deg,,}}

{{arg zoom,,}}

{{arg stretch,,}}

{{arg ps,,None}}

{{arg mode,,BORDER_REFLECT}}

{{arg tfm_y,,NO}}

=== Methods

{{method set_state,}}

{{method __call__,}}

== {{class RandomZoom:CoordTransform}}

=== Arguments
{{arg zoom_max,,}}

{{arg zoom_min,,0}}

{{arg mode,,BORDER_REFLECT}}

{{arg tfm_y,,NO}}

=== Methods

{{method set_state,}}

{{method do_transform,}}

== {{class RandomStretch:CoordTransform}}

=== Arguments
{{arg max_stretch,,}}

{{arg tfm_y,,NO}}

=== Methods

{{method set_state,}}

{{method do_transform,}}

== {{class PassThru:CoordTransform}}

=== Methods

{{method do_transform,}}

== {{class RandomBlur:Transform}}

=== Arguments
{{arg blur_strengths,,5}}

{{arg probability,,0.5}}

{{arg tfm_y,,NO}}

=== Methods

{{method set_state,}}

{{method do_transform,}}

== {{class Cutout:Transform}}

=== Arguments
{{arg n_holes,,}}

{{arg length,,}}

{{arg tfm_y,,NO}}

=== Methods

{{method do_transform,}}

== {{class GoogleNetResize:CoordTransform}}

=== Arguments
{{arg targ_sz,,}}

{{arg min_area_frac,,0.08}}

{{arg min_aspect_ratio,,0.75}}

{{arg max_aspect_ratio,,1.333}}

{{arg flip_hw_p,,0.5}}

{{arg tfm_y,,NO}}

{{arg sz_y,,None}}

=== Methods

{{method set_state,}}

{{method do_transform,}}

== {{class CropType:IntEnum}}

== {{class Transforms}}

=== Arguments
{{arg sz,,}}

{{arg tfms,,}}

{{arg normalizer,,}}

{{arg denorm,,}}

{{arg crop_type,,CENTER}}

{{arg tfm_y,,NO}}

{{arg sz_y,,None}}

=== Methods

{{method __call__,}}

{{method __repr__,}}

== Module Functions

{{method scale_min,Scales the image so that the smallest axis is of size targ.

Arguments:
    im (array): image
    targ (int): target size}}

{{method zoom_cv,zooms the center of image x, by a factor of z+1 while retaining the origal image size and proportion. }}

{{method stretch_cv,stretches image x horizontally by sr+1, and vertically by sc+1 while retaining the origal image size and proportion.}}

{{method dihedral,performs any of 8 90 rotations or flips for image x.
    }}

{{method lighting,adjusts image's balance and contrast}}

{{method rotate_cv,Rotates an image by deg degrees

Arguments:
    deg (float): degree to rotate.}}

{{method no_crop,Returns a squared resized image }}

{{method center_crop,Returns a center crop of an image}}

{{method googlenet_resize,Randomly crops an image with an aspect ratio and returns a squared resized image of size targ

References:
1. https://arxiv.org/pdf/1409.4842.pdf
2. https://arxiv.org/pdf/1802.07888.pdf}}

{{method cutout,cuts out n_holes number of square holes of size length in image at random locations. holes may be overlapping. }}

{{method scale_to,no clue, does not work.}}

{{method crop,crop image into a square of size sz, }}

{{method det_dihedral,}}

{{method det_stretch,}}

{{method det_lighting,}}

{{method det_rotate,}}

{{method det_zoom,}}

{{method rand0,}}

{{method to_bb,}}

{{method coords2px,Transforming coordinates to pixels.

Arguments:
    y : np array
        vector in which (y[0], y[1]) and (y[2], y[3]) are the
        the corners of a bounding box.
    x : image
        an image
Returns:
    Y : image
        of shape x.shape}}

{{method compose,apply a collection of transformation functions fns to images
    }}

{{method image_gen,Generate a standard set of transformations

Arguments
---------
 normalizer :
     image normalizing function
 denorm :
     image denormalizing function
 sz :
     size, sz_y = sz if not specified.
 tfms :
     iterable collection of transformation functions
 max_zoom : float,
     maximum zoom
 pad : int,
     padding on top, left, right and bottom
 crop_type :
     crop type
 tfm_y :
     y axis specific transformations
 sz_y :
     y size, height
 pad_mode :
     cv2 padding style: repeat, reflect, etc.

Returns
-------
 type : ``Transforms``
     transformer for specified image operations.

See Also
--------
 Transforms: the transformer object returned by this function}}

{{method noop,dummy function for do-nothing.
equivalent to: lambda x: x}}

{{method tfms_from_stats,Given the statistics of the training image sets, returns separate training and validation transform functions
    }}

{{method tfms_from_model,Returns separate transformers of images for training and validation.
Transformers are constructed according to the image statistics given b y the model. (See tfms_from_stats)

Arguments:
    f_model: model, pretrained or not pretrained}}

