
= fastai.core

== Introduction and overview

```
...example...
```


== {{class BasicModel}}

=== Arguments
{{arg model,,}}

{{arg name,,unnamed}}

=== Methods

{{method get_layer_groups,}}

== {{class SingleModel:BasicModel}}

=== Methods

{{method get_layer_groups,}}

== {{class SimpleNet:Module}}

=== Arguments
{{arg layers,,}}

=== Methods

{{method forward,}}

== Module Functions

{{method sum_geom,}}

{{method A,convert iterable object into numpy array}}

{{method T,Convert numpy array into a pytorch tensor. 
if Cuda is available and USE_GPU=ture, store resulting tensor in GPU.}}

{{method create_variable,Wrapper function for creating pytorch tensors
Arguments: 
    x: numpy array or tensor to be converted
    volatile: True if x does not require gradients
    requires_grad: fine grain exclusion of x from gradient computation}}

{{method V_,equivalent to create_variable, which creates a pytorch tensor}}

{{method V,creates a single or a list of pytorch tensors, depending on input x. }}

{{method VV_,creates a volatile tensor, which does not require gradients. }}

{{method VV,creates a single or a list of pytorch tensors, depending on input x. }}

{{method to_np,utility function that converts list, tuple, or pytorch Variable to an numpy array. 
    }}

{{method to_gpu,puts pytorch variable to gpu, if cuda is avaialble and USE_GPU is set to true. }}

{{method noop,}}

{{method split_by_idxs,A generator that returns sequence pieces, seperated by indexes specified in idxs. }}

{{method trainable_params_,Returns a list of trainable parameters in the model m. (i.e., those that require gradients.)}}

{{method chain_params,}}

{{method set_trainable_attr,}}

{{method apply_leaf,}}

{{method set_trainable,}}

{{method SGD_Momentum,}}

{{method one_hot,}}

{{method partition,splits iterables a in equal parts of size sz
    }}

{{method partition_by_cores,}}

{{method num_cpus,}}

{{method save,Utility function that savess model, function, etc as pickle}}

{{method load,Utility function that loads model, function, etc as pickle}}

{{method load2,Utility funciton allowing model piclking across Python2 and Python3}}

{{method load_array,Load array using bcolz, which is based on numpy, for fast array saving and loading operations. 
https://github.com/Blosc/bcolz}}

{{method chunk_iter,A generator that yields chunks of iterable, chunk_size at a time. }}

