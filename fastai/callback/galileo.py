# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/70e_callback.galileo.ipynb (unless otherwise specified).


from __future__ import annotations


__all__ = []

# Cell
#nbdev_comment from __future__ import annotations

import pandas as pd
import numpy as np

from functools import partial

from torch.nn import Module
from typing import Any, Callable, Dict, List

from ..learner import Callback
from ..data.load import DataLoader

# Cell
import dataquality

# Cell

class _PatchDLGetIdxs:
    """
    Patch the DataLoader to store the indices of the batches.
    For example:
    self.dl.get_idxs = _PatchDLGetIdxs(self.dl.get_idxs, self.idx_log)
    """

    def __init__(self, old_func: Callable, store: Dict[str, Any]):
        """
        Patch the DataLoader to store the indices of the batches.
        For example:
        self.dl.get_idxs = IdxLogPatch(self.dl.get_idxs, self.idx_log)
        :param old_func: The original function to patch.
        :param store: The store to store the indices in.
        """
        self.old_func = old_func
        self.store = store
        self.store["dataloader_indices"] = []

    def __call__(self, *args: Any, **kwargs: Any) -> Any:
        """
        Call the original function and store the indices.
        :param args: The arguments to pass to the original function.
        :param kwargs: The keyword arguments to pass to the original function.

        """
        res = self.old_func(*args, **kwargs)
        if res:
            self.store["dataloader_indices"].append(res)
        return res

# Cell
#nbdev_comment _all_ = []