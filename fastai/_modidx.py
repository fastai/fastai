# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/',
                'doc_host': 'https://docs.fast.ai',
                'git_url': 'https://github.com/fastai/fastai',
                'lib_path': 'fastai'},
  'syms': { 'fastai.basics': {},
            'fastai.callback.all': {},
            'fastai.callback.azureml': {},
            'fastai.callback.captum': { 'fastai.callback.captum.CaptumInterpretation': ( 'callback.captum.html#captuminterpretation',
                                                                                         'fastai/callback/captum.py'),
                                        'fastai.callback.captum.CaptumInterpretation.__init__': ( 'callback.captum.html#captuminterpretation.__init__',
                                                                                                  'fastai/callback/captum.py'),
                                        'fastai.callback.captum.CaptumInterpretation._get_attributions': ( 'callback.captum.html#captuminterpretation._get_attributions',
                                                                                                           'fastai/callback/captum.py'),
                                        'fastai.callback.captum.CaptumInterpretation._get_enc_dec_data': ( 'callback.captum.html#captuminterpretation._get_enc_dec_data',
                                                                                                           'fastai/callback/captum.py'),
                                        'fastai.callback.captum.CaptumInterpretation._viz': ( 'callback.captum.html#captuminterpretation._viz',
                                                                                              'fastai/callback/captum.py'),
                                        'fastai.callback.captum.CaptumInterpretation.get_baseline_img': ( 'callback.captum.html#captuminterpretation.get_baseline_img',
                                                                                                          'fastai/callback/captum.py'),
                                        'fastai.callback.captum.CaptumInterpretation.insights': ( 'callback.captum.html#captuminterpretation.insights',
                                                                                                  'fastai/callback/captum.py'),
                                        'fastai.callback.captum.CaptumInterpretation.visualize': ( 'callback.captum.html#captuminterpretation.visualize',
                                                                                                   'fastai/callback/captum.py'),
                                        'fastai.callback.captum.json_clean': ( 'callback.captum.html#json_clean',
                                                                               'fastai/callback/captum.py')},
            'fastai.callback.channelslast': { 'fastai.callback.channelslast.ChannelsLast': ( 'callback.channelslast.html#channelslast',
                                                                                             'fastai/callback/channelslast.py'),
                                              'fastai.callback.channelslast.ChannelsLast.before_fit': ( 'callback.channelslast.html#channelslast.before_fit',
                                                                                                        'fastai/callback/channelslast.py'),
                                              'fastai.callback.channelslast.Learner.to_channelslast': ( 'callback.channelslast.html#learner.to_channelslast',
                                                                                                        'fastai/callback/channelslast.py'),
                                              'fastai.callback.channelslast.Learner.to_contiguous': ( 'callback.channelslast.html#learner.to_contiguous',
                                                                                                      'fastai/callback/channelslast.py')},
            'fastai.callback.comet': { 'fastai.callback.comet.CometCallback': ( 'callback.comet.html#cometcallback',
                                                                                'fastai/callback/comet.py'),
                                       'fastai.callback.comet.CometCallback.__init__': ( 'callback.comet.html#cometcallback.__init__',
                                                                                         'fastai/callback/comet.py'),
                                       'fastai.callback.comet.CometCallback.after_batch': ( 'callback.comet.html#cometcallback.after_batch',
                                                                                            'fastai/callback/comet.py'),
                                       'fastai.callback.comet.CometCallback.after_epoch': ( 'callback.comet.html#cometcallback.after_epoch',
                                                                                            'fastai/callback/comet.py'),
                                       'fastai.callback.comet.CometCallback.after_fit': ( 'callback.comet.html#cometcallback.after_fit',
                                                                                          'fastai/callback/comet.py'),
                                       'fastai.callback.comet.CometCallback.before_fit': ( 'callback.comet.html#cometcallback.before_fit',
                                                                                           'fastai/callback/comet.py')},
            'fastai.callback.core': { 'fastai.callback.core.Callback': ('callback.core.html#callback', 'fastai/callback/core.py'),
                                      'fastai.callback.core.Callback.__call__': ( 'callback.core.html#callback.__call__',
                                                                                  'fastai/callback/core.py'),
                                      'fastai.callback.core.Callback.__init__': ( 'callback.core.html#callback.__init__',
                                                                                  'fastai/callback/core.py'),
                                      'fastai.callback.core.Callback.__repr__': ( 'callback.core.html#callback.__repr__',
                                                                                  'fastai/callback/core.py'),
                                      'fastai.callback.core.Callback.__setattr__': ( 'callback.core.html#callback.__setattr__',
                                                                                     'fastai/callback/core.py'),
                                      'fastai.callback.core.Callback.name': ('callback.core.html#callback.name', 'fastai/callback/core.py'),
                                      'fastai.callback.core.FetchPredsCallback': ( 'callback.core.html#fetchpredscallback',
                                                                                   'fastai/callback/core.py'),
                                      'fastai.callback.core.FetchPredsCallback.__init__': ( 'callback.core.html#fetchpredscallback.__init__',
                                                                                            'fastai/callback/core.py'),
                                      'fastai.callback.core.FetchPredsCallback.after_validate': ( 'callback.core.html#fetchpredscallback.after_validate',
                                                                                                  'fastai/callback/core.py'),
                                      'fastai.callback.core.GatherPredsCallback': ( 'callback.core.html#gatherpredscallback',
                                                                                    'fastai/callback/core.py'),
                                      'fastai.callback.core.GatherPredsCallback.__init__': ( 'callback.core.html#gatherpredscallback.__init__',
                                                                                             'fastai/callback/core.py'),
                                      'fastai.callback.core.GatherPredsCallback.after_batch': ( 'callback.core.html#gatherpredscallback.after_batch',
                                                                                                'fastai/callback/core.py'),
                                      'fastai.callback.core.GatherPredsCallback.after_validate': ( 'callback.core.html#gatherpredscallback.after_validate',
                                                                                                   'fastai/callback/core.py'),
                                      'fastai.callback.core.GatherPredsCallback.all_tensors': ( 'callback.core.html#gatherpredscallback.all_tensors',
                                                                                                'fastai/callback/core.py'),
                                      'fastai.callback.core.GatherPredsCallback.before_batch': ( 'callback.core.html#gatherpredscallback.before_batch',
                                                                                                 'fastai/callback/core.py'),
                                      'fastai.callback.core.GatherPredsCallback.before_validate': ( 'callback.core.html#gatherpredscallback.before_validate',
                                                                                                    'fastai/callback/core.py'),
                                      'fastai.callback.core.TrainEvalCallback': ( 'callback.core.html#trainevalcallback',
                                                                                  'fastai/callback/core.py'),
                                      'fastai.callback.core.TrainEvalCallback.after_batch': ( 'callback.core.html#trainevalcallback.after_batch',
                                                                                              'fastai/callback/core.py'),
                                      'fastai.callback.core.TrainEvalCallback.after_create': ( 'callback.core.html#trainevalcallback.after_create',
                                                                                               'fastai/callback/core.py'),
                                      'fastai.callback.core.TrainEvalCallback.before_fit': ( 'callback.core.html#trainevalcallback.before_fit',
                                                                                             'fastai/callback/core.py'),
                                      'fastai.callback.core.TrainEvalCallback.before_train': ( 'callback.core.html#trainevalcallback.before_train',
                                                                                               'fastai/callback/core.py'),
                                      'fastai.callback.core.TrainEvalCallback.before_validate': ( 'callback.core.html#trainevalcallback.before_validate',
                                                                                                  'fastai/callback/core.py')},
            'fastai.callback.data': { 'fastai.callback.data.CollectDataCallback': ( 'callback.data.html#collectdatacallback',
                                                                                    'fastai/callback/data.py'),
                                      'fastai.callback.data.CollectDataCallback.after_batch': ( 'callback.data.html#collectdatacallback.after_batch',
                                                                                                'fastai/callback/data.py'),
                                      'fastai.callback.data.CollectDataCallback.before_fit': ( 'callback.data.html#collectdatacallback.before_fit',
                                                                                               'fastai/callback/data.py'),
                                      'fastai.callback.data.DataBlock.weighted_dataloaders': ( 'callback.data.html#datablock.weighted_dataloaders',
                                                                                               'fastai/callback/data.py'),
                                      'fastai.callback.data.Datasets.weighted_dataloaders': ( 'callback.data.html#datasets.weighted_dataloaders',
                                                                                              'fastai/callback/data.py'),
                                      'fastai.callback.data.FilteredBase.partial_dataloaders': ( 'callback.data.html#filteredbase.partial_dataloaders',
                                                                                                 'fastai/callback/data.py'),
                                      'fastai.callback.data.PartialDL': ('callback.data.html#partialdl', 'fastai/callback/data.py'),
                                      'fastai.callback.data.PartialDL.__init__': ( 'callback.data.html#partialdl.__init__',
                                                                                   'fastai/callback/data.py'),
                                      'fastai.callback.data.PartialDL.__len__': ( 'callback.data.html#partialdl.__len__',
                                                                                  'fastai/callback/data.py'),
                                      'fastai.callback.data.PartialDL.get_idxs': ( 'callback.data.html#partialdl.get_idxs',
                                                                                   'fastai/callback/data.py'),
                                      'fastai.callback.data.WeightedDL': ('callback.data.html#weighteddl', 'fastai/callback/data.py'),
                                      'fastai.callback.data.WeightedDL.__init__': ( 'callback.data.html#weighteddl.__init__',
                                                                                    'fastai/callback/data.py'),
                                      'fastai.callback.data.WeightedDL.get_idxs': ( 'callback.data.html#weighteddl.get_idxs',
                                                                                    'fastai/callback/data.py')},
            'fastai.callback.fp16': { 'fastai.callback.fp16.AMPMode': ('callback.fp16.html#ampmode', 'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.Learner.to_bf16': ( 'callback.fp16.html#learner.to_bf16',
                                                                                'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.Learner.to_fp16': ( 'callback.fp16.html#learner.to_fp16',
                                                                                'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.Learner.to_fp32': ( 'callback.fp16.html#learner.to_fp32',
                                                                                'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.Learner.to_non_native_fp16': ( 'callback.fp16.html#learner.to_non_native_fp16',
                                                                                           'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.Learner.to_non_native_fp32': ( 'callback.fp16.html#learner.to_non_native_fp32',
                                                                                           'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.MixedPrecision': ( 'callback.fp16.html#mixedprecision',
                                                                               'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.MixedPrecision.__init__': ( 'callback.fp16.html#mixedprecision.__init__',
                                                                                        'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.MixedPrecision.after_fit': ( 'callback.fp16.html#mixedprecision.after_fit',
                                                                                         'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.MixedPrecision.after_loss': ( 'callback.fp16.html#mixedprecision.after_loss',
                                                                                          'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.MixedPrecision.after_pred': ( 'callback.fp16.html#mixedprecision.after_pred',
                                                                                          'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.MixedPrecision.after_step': ( 'callback.fp16.html#mixedprecision.after_step',
                                                                                          'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.MixedPrecision.before_backward': ( 'callback.fp16.html#mixedprecision.before_backward',
                                                                                               'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.MixedPrecision.before_batch': ( 'callback.fp16.html#mixedprecision.before_batch',
                                                                                            'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.MixedPrecision.before_fit': ( 'callback.fp16.html#mixedprecision.before_fit',
                                                                                          'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.MixedPrecision.before_step': ( 'callback.fp16.html#mixedprecision.before_step',
                                                                                           'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.MixedPrecision.param_groups': ( 'callback.fp16.html#mixedprecision.param_groups',
                                                                                            'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.MixedPrecision.step': ( 'callback.fp16.html#mixedprecision.step',
                                                                                    'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.ModelToHalf': ('callback.fp16.html#modeltohalf', 'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.ModelToHalf.after_fit': ( 'callback.fp16.html#modeltohalf.after_fit',
                                                                                      'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.ModelToHalf.before_fit': ( 'callback.fp16.html#modeltohalf.before_fit',
                                                                                       'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.NonNativeMixedPrecision': ( 'callback.fp16.html#nonnativemixedprecision',
                                                                                        'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.NonNativeMixedPrecision.__init__': ( 'callback.fp16.html#nonnativemixedprecision.__init__',
                                                                                                 'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.NonNativeMixedPrecision.after_batch': ( 'callback.fp16.html#nonnativemixedprecision.after_batch',
                                                                                                    'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.NonNativeMixedPrecision.after_fit': ( 'callback.fp16.html#nonnativemixedprecision.after_fit',
                                                                                                  'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.NonNativeMixedPrecision.after_pred': ( 'callback.fp16.html#nonnativemixedprecision.after_pred',
                                                                                                   'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.NonNativeMixedPrecision.after_step': ( 'callback.fp16.html#nonnativemixedprecision.after_step',
                                                                                                   'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.NonNativeMixedPrecision.before_backward': ( 'callback.fp16.html#nonnativemixedprecision.before_backward',
                                                                                                        'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.NonNativeMixedPrecision.before_batch': ( 'callback.fp16.html#nonnativemixedprecision.before_batch',
                                                                                                     'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.NonNativeMixedPrecision.before_fit': ( 'callback.fp16.html#nonnativemixedprecision.before_fit',
                                                                                                   'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.NonNativeMixedPrecision.before_step': ( 'callback.fp16.html#nonnativemixedprecision.before_step',
                                                                                                    'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16._copy_state': ('callback.fp16.html#_copy_state', 'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.copy_clone': ('callback.fp16.html#copy_clone', 'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.get_master': ('callback.fp16.html#get_master', 'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.grad_overflow': ('callback.fp16.html#grad_overflow', 'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.test_overflow': ('callback.fp16.html#test_overflow', 'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.to_master_grads': ( 'callback.fp16.html#to_master_grads',
                                                                                'fastai/callback/fp16.py'),
                                      'fastai.callback.fp16.to_model_params': ( 'callback.fp16.html#to_model_params',
                                                                                'fastai/callback/fp16.py')},
            'fastai.callback.hook': { 'fastai.callback.hook.ActivationStats': ( 'callback.hook.html#activationstats',
                                                                                'fastai/callback/hook.py'),
                                      'fastai.callback.hook.ActivationStats.__init__': ( 'callback.hook.html#activationstats.__init__',
                                                                                         'fastai/callback/hook.py'),
                                      'fastai.callback.hook.ActivationStats._flatten_tuple': ( 'callback.hook.html#activationstats._flatten_tuple',
                                                                                               'fastai/callback/hook.py'),
                                      'fastai.callback.hook.ActivationStats.after_batch': ( 'callback.hook.html#activationstats.after_batch',
                                                                                            'fastai/callback/hook.py'),
                                      'fastai.callback.hook.ActivationStats.before_fit': ( 'callback.hook.html#activationstats.before_fit',
                                                                                           'fastai/callback/hook.py'),
                                      'fastai.callback.hook.ActivationStats.color_dim': ( 'callback.hook.html#activationstats.color_dim',
                                                                                          'fastai/callback/hook.py'),
                                      'fastai.callback.hook.ActivationStats.hist': ( 'callback.hook.html#activationstats.hist',
                                                                                     'fastai/callback/hook.py'),
                                      'fastai.callback.hook.ActivationStats.hook': ( 'callback.hook.html#activationstats.hook',
                                                                                     'fastai/callback/hook.py'),
                                      'fastai.callback.hook.ActivationStats.hook_multi_ouput': ( 'callback.hook.html#activationstats.hook_multi_ouput',
                                                                                                 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.ActivationStats.layer_stats': ( 'callback.hook.html#activationstats.layer_stats',
                                                                                            'fastai/callback/hook.py'),
                                      'fastai.callback.hook.ActivationStats.plot_layer_stats': ( 'callback.hook.html#activationstats.plot_layer_stats',
                                                                                                 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hook': ('callback.hook.html#hook', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hook.__enter__': ( 'callback.hook.html#hook.__enter__',
                                                                               'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hook.__exit__': ('callback.hook.html#hook.__exit__', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hook.__init__': ('callback.hook.html#hook.__init__', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hook.hook_fn': ('callback.hook.html#hook.hook_fn', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hook.remove': ('callback.hook.html#hook.remove', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.HookCallback': ('callback.hook.html#hookcallback', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.HookCallback.__del__': ( 'callback.hook.html#hookcallback.__del__',
                                                                                     'fastai/callback/hook.py'),
                                      'fastai.callback.hook.HookCallback.__init__': ( 'callback.hook.html#hookcallback.__init__',
                                                                                      'fastai/callback/hook.py'),
                                      'fastai.callback.hook.HookCallback._register': ( 'callback.hook.html#hookcallback._register',
                                                                                       'fastai/callback/hook.py'),
                                      'fastai.callback.hook.HookCallback._remove': ( 'callback.hook.html#hookcallback._remove',
                                                                                     'fastai/callback/hook.py'),
                                      'fastai.callback.hook.HookCallback.after_batch': ( 'callback.hook.html#hookcallback.after_batch',
                                                                                         'fastai/callback/hook.py'),
                                      'fastai.callback.hook.HookCallback.after_fit': ( 'callback.hook.html#hookcallback.after_fit',
                                                                                       'fastai/callback/hook.py'),
                                      'fastai.callback.hook.HookCallback.before_batch': ( 'callback.hook.html#hookcallback.before_batch',
                                                                                          'fastai/callback/hook.py'),
                                      'fastai.callback.hook.HookCallback.before_fit': ( 'callback.hook.html#hookcallback.before_fit',
                                                                                        'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hooks': ('callback.hook.html#hooks', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hooks.__enter__': ( 'callback.hook.html#hooks.__enter__',
                                                                                'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hooks.__exit__': ( 'callback.hook.html#hooks.__exit__',
                                                                               'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hooks.__getitem__': ( 'callback.hook.html#hooks.__getitem__',
                                                                                  'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hooks.__init__': ( 'callback.hook.html#hooks.__init__',
                                                                               'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hooks.__iter__': ( 'callback.hook.html#hooks.__iter__',
                                                                               'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hooks.__len__': ('callback.hook.html#hooks.__len__', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hooks.remove': ('callback.hook.html#hooks.remove', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Hooks.stored': ('callback.hook.html#hooks.stored', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.Learner.summary': ( 'callback.hook.html#learner.summary',
                                                                                'fastai/callback/hook.py'),
                                      'fastai.callback.hook._get_shapes': ('callback.hook.html#_get_shapes', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook._hook_inner': ('callback.hook.html#_hook_inner', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook._print_shapes': ('callback.hook.html#_print_shapes', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.dummy_eval': ('callback.hook.html#dummy_eval', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.has_params': ('callback.hook.html#has_params', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.hook_output': ('callback.hook.html#hook_output', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.hook_outputs': ('callback.hook.html#hook_outputs', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.layer_info': ('callback.hook.html#layer_info', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.model_sizes': ('callback.hook.html#model_sizes', 'fastai/callback/hook.py'),
                                      'fastai.callback.hook.module_summary': ( 'callback.hook.html#module_summary',
                                                                               'fastai/callback/hook.py'),
                                      'fastai.callback.hook.num_features_model': ( 'callback.hook.html#num_features_model',
                                                                                   'fastai/callback/hook.py'),
                                      'fastai.callback.hook.total_params': ('callback.hook.html#total_params', 'fastai/callback/hook.py')},
            'fastai.callback.mixup': { 'fastai.callback.mixup.CutMix': ('callback.mixup.html#cutmix', 'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.CutMix.__init__': ( 'callback.mixup.html#cutmix.__init__',
                                                                                  'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.CutMix.before_batch': ( 'callback.mixup.html#cutmix.before_batch',
                                                                                      'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.CutMix.rand_bbox': ( 'callback.mixup.html#cutmix.rand_bbox',
                                                                                   'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.MixHandler': ('callback.mixup.html#mixhandler', 'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.MixHandler.__init__': ( 'callback.mixup.html#mixhandler.__init__',
                                                                                      'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.MixHandler.after_cancel_fit': ( 'callback.mixup.html#mixhandler.after_cancel_fit',
                                                                                              'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.MixHandler.after_cancel_train': ( 'callback.mixup.html#mixhandler.after_cancel_train',
                                                                                                'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.MixHandler.after_train': ( 'callback.mixup.html#mixhandler.after_train',
                                                                                         'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.MixHandler.before_train': ( 'callback.mixup.html#mixhandler.before_train',
                                                                                          'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.MixHandler.lf': ( 'callback.mixup.html#mixhandler.lf',
                                                                                'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.MixUp': ('callback.mixup.html#mixup', 'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.MixUp.__init__': ( 'callback.mixup.html#mixup.__init__',
                                                                                 'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.MixUp.before_batch': ( 'callback.mixup.html#mixup.before_batch',
                                                                                     'fastai/callback/mixup.py'),
                                       'fastai.callback.mixup.reduce_loss': ( 'callback.mixup.html#reduce_loss',
                                                                              'fastai/callback/mixup.py')},
            'fastai.callback.preds': { 'fastai.callback.preds.MCDropoutCallback': ( 'callback.preds.html#mcdropoutcallback',
                                                                                    'fastai/callback/preds.py'),
                                       'fastai.callback.preds.MCDropoutCallback.after_validate': ( 'callback.preds.html#mcdropoutcallback.after_validate',
                                                                                                   'fastai/callback/preds.py'),
                                       'fastai.callback.preds.MCDropoutCallback.before_validate': ( 'callback.preds.html#mcdropoutcallback.before_validate',
                                                                                                    'fastai/callback/preds.py')},
            'fastai.callback.progress': { 'fastai.callback.progress.CSVLogger': ( 'callback.progress.html#csvlogger',
                                                                                  'fastai/callback/progress.py'),
                                          'fastai.callback.progress.CSVLogger.__init__': ( 'callback.progress.html#csvlogger.__init__',
                                                                                           'fastai/callback/progress.py'),
                                          'fastai.callback.progress.CSVLogger._write_line': ( 'callback.progress.html#csvlogger._write_line',
                                                                                              'fastai/callback/progress.py'),
                                          'fastai.callback.progress.CSVLogger.after_fit': ( 'callback.progress.html#csvlogger.after_fit',
                                                                                            'fastai/callback/progress.py'),
                                          'fastai.callback.progress.CSVLogger.before_fit': ( 'callback.progress.html#csvlogger.before_fit',
                                                                                             'fastai/callback/progress.py'),
                                          'fastai.callback.progress.CSVLogger.read_log': ( 'callback.progress.html#csvlogger.read_log',
                                                                                           'fastai/callback/progress.py'),
                                          'fastai.callback.progress.Learner.no_bar': ( 'callback.progress.html#learner.no_bar',
                                                                                       'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ProgressCallback': ( 'callback.progress.html#progresscallback',
                                                                                         'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ProgressCallback._launch_pbar': ( 'callback.progress.html#progresscallback._launch_pbar',
                                                                                                      'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ProgressCallback._write_stats': ( 'callback.progress.html#progresscallback._write_stats',
                                                                                                      'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ProgressCallback.after_batch': ( 'callback.progress.html#progresscallback.after_batch',
                                                                                                     'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ProgressCallback.after_fit': ( 'callback.progress.html#progresscallback.after_fit',
                                                                                                   'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ProgressCallback.after_train': ( 'callback.progress.html#progresscallback.after_train',
                                                                                                     'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ProgressCallback.after_validate': ( 'callback.progress.html#progresscallback.after_validate',
                                                                                                        'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ProgressCallback.before_epoch': ( 'callback.progress.html#progresscallback.before_epoch',
                                                                                                      'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ProgressCallback.before_fit': ( 'callback.progress.html#progresscallback.before_fit',
                                                                                                    'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ProgressCallback.before_train': ( 'callback.progress.html#progresscallback.before_train',
                                                                                                      'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ProgressCallback.before_validate': ( 'callback.progress.html#progresscallback.before_validate',
                                                                                                         'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ShowGraphCallback': ( 'callback.progress.html#showgraphcallback',
                                                                                          'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ShowGraphCallback.after_epoch': ( 'callback.progress.html#showgraphcallback.after_epoch',
                                                                                                      'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ShowGraphCallback.after_train': ( 'callback.progress.html#showgraphcallback.after_train',
                                                                                                      'fastai/callback/progress.py'),
                                          'fastai.callback.progress.ShowGraphCallback.before_fit': ( 'callback.progress.html#showgraphcallback.before_fit',
                                                                                                     'fastai/callback/progress.py')},
            'fastai.callback.rnn': { 'fastai.callback.rnn.ModelResetter': ('callback.rnn.html#modelresetter', 'fastai/callback/rnn.py'),
                                     'fastai.callback.rnn.ModelResetter.after_fit': ( 'callback.rnn.html#modelresetter.after_fit',
                                                                                      'fastai/callback/rnn.py'),
                                     'fastai.callback.rnn.ModelResetter.before_train': ( 'callback.rnn.html#modelresetter.before_train',
                                                                                         'fastai/callback/rnn.py'),
                                     'fastai.callback.rnn.ModelResetter.before_validate': ( 'callback.rnn.html#modelresetter.before_validate',
                                                                                            'fastai/callback/rnn.py'),
                                     'fastai.callback.rnn.RNNCallback': ('callback.rnn.html#rnncallback', 'fastai/callback/rnn.py'),
                                     'fastai.callback.rnn.RNNCallback.after_pred': ( 'callback.rnn.html#rnncallback.after_pred',
                                                                                     'fastai/callback/rnn.py'),
                                     'fastai.callback.rnn.RNNRegularizer': ('callback.rnn.html#rnnregularizer', 'fastai/callback/rnn.py'),
                                     'fastai.callback.rnn.RNNRegularizer.__init__': ( 'callback.rnn.html#rnnregularizer.__init__',
                                                                                      'fastai/callback/rnn.py'),
                                     'fastai.callback.rnn.RNNRegularizer.after_loss': ( 'callback.rnn.html#rnnregularizer.after_loss',
                                                                                        'fastai/callback/rnn.py'),
                                     'fastai.callback.rnn.rnn_cbs': ('callback.rnn.html#rnn_cbs', 'fastai/callback/rnn.py')},
            'fastai.callback.schedule': { 'fastai.callback.schedule.LRFinder': ( 'callback.schedule.html#lrfinder',
                                                                                 'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.LRFinder.__init__': ( 'callback.schedule.html#lrfinder.__init__',
                                                                                          'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.LRFinder.after_batch': ( 'callback.schedule.html#lrfinder.after_batch',
                                                                                             'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.LRFinder.after_fit': ( 'callback.schedule.html#lrfinder.after_fit',
                                                                                           'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.LRFinder.before_batch': ( 'callback.schedule.html#lrfinder.before_batch',
                                                                                              'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.LRFinder.before_fit': ( 'callback.schedule.html#lrfinder.before_fit',
                                                                                            'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.LRFinder.before_validate': ( 'callback.schedule.html#lrfinder.before_validate',
                                                                                                 'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.Learner.fine_tune': ( 'callback.schedule.html#learner.fine_tune',
                                                                                          'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.Learner.fit_flat_cos': ( 'callback.schedule.html#learner.fit_flat_cos',
                                                                                             'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.Learner.fit_one_cycle': ( 'callback.schedule.html#learner.fit_one_cycle',
                                                                                              'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.Learner.fit_sgdr': ( 'callback.schedule.html#learner.fit_sgdr',
                                                                                         'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.Learner.lr_find': ( 'callback.schedule.html#learner.lr_find',
                                                                                        'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.ParamScheduler': ( 'callback.schedule.html#paramscheduler',
                                                                                       'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.ParamScheduler.__init__': ( 'callback.schedule.html#paramscheduler.__init__',
                                                                                                'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.ParamScheduler._update_val': ( 'callback.schedule.html#paramscheduler._update_val',
                                                                                                   'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.ParamScheduler.after_batch': ( 'callback.schedule.html#paramscheduler.after_batch',
                                                                                                   'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.ParamScheduler.after_fit': ( 'callback.schedule.html#paramscheduler.after_fit',
                                                                                                 'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.ParamScheduler.before_batch': ( 'callback.schedule.html#paramscheduler.before_batch',
                                                                                                    'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.ParamScheduler.before_fit': ( 'callback.schedule.html#paramscheduler.before_fit',
                                                                                                  'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.Recorder.plot_lr_find': ( 'callback.schedule.html#recorder.plot_lr_find',
                                                                                              'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.Recorder.plot_sched': ( 'callback.schedule.html#recorder.plot_sched',
                                                                                            'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.SchedCos': ( 'callback.schedule.html#schedcos',
                                                                                 'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.SchedExp': ( 'callback.schedule.html#schedexp',
                                                                                 'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.SchedLin': ( 'callback.schedule.html#schedlin',
                                                                                 'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.SchedNo': ( 'callback.schedule.html#schedno',
                                                                                'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.SchedPoly': ( 'callback.schedule.html#schedpoly',
                                                                                  'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule._Annealer': ( 'callback.schedule.html#_annealer',
                                                                                  'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule._Annealer.__call__': ( 'callback.schedule.html#_annealer.__call__',
                                                                                           'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule._Annealer.__init__': ( 'callback.schedule.html#_annealer.__init__',
                                                                                           'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.annealer': ( 'callback.schedule.html#annealer',
                                                                                 'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.combine_scheds': ( 'callback.schedule.html#combine_scheds',
                                                                                       'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.combined_cos': ( 'callback.schedule.html#combined_cos',
                                                                                     'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.minimum': ( 'callback.schedule.html#minimum',
                                                                                'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.sched_cos': ( 'callback.schedule.html#sched_cos',
                                                                                  'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.sched_exp': ( 'callback.schedule.html#sched_exp',
                                                                                  'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.sched_lin': ( 'callback.schedule.html#sched_lin',
                                                                                  'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.sched_no': ( 'callback.schedule.html#sched_no',
                                                                                 'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.slide': ('callback.schedule.html#slide', 'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.steep': ('callback.schedule.html#steep', 'fastai/callback/schedule.py'),
                                          'fastai.callback.schedule.valley': ( 'callback.schedule.html#valley',
                                                                               'fastai/callback/schedule.py')},
            'fastai.callback.tensorboard': { 'fastai.callback.tensorboard.TensorBoardBaseCallback': ( 'callback.tensorboard.html#tensorboardbasecallback',
                                                                                                      'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardBaseCallback.__del__': ( 'callback.tensorboard.html#tensorboardbasecallback.__del__',
                                                                                                              'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardBaseCallback.__init__': ( 'callback.tensorboard.html#tensorboardbasecallback.__init__',
                                                                                                               'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardBaseCallback._remove': ( 'callback.tensorboard.html#tensorboardbasecallback._remove',
                                                                                                              'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardBaseCallback._setup_projector': ( 'callback.tensorboard.html#tensorboardbasecallback._setup_projector',
                                                                                                                       'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardBaseCallback._setup_writer': ( 'callback.tensorboard.html#tensorboardbasecallback._setup_writer',
                                                                                                                    'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardBaseCallback.after_fit': ( 'callback.tensorboard.html#tensorboardbasecallback.after_fit',
                                                                                                                'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardBaseCallback.after_pred': ( 'callback.tensorboard.html#tensorboardbasecallback.after_pred',
                                                                                                                 'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardBaseCallback.after_validate': ( 'callback.tensorboard.html#tensorboardbasecallback.after_validate',
                                                                                                                     'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardCallback': ( 'callback.tensorboard.html#tensorboardcallback',
                                                                                                  'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardCallback.__init__': ( 'callback.tensorboard.html#tensorboardcallback.__init__',
                                                                                                           'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardCallback.after_batch': ( 'callback.tensorboard.html#tensorboardcallback.after_batch',
                                                                                                              'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardCallback.after_epoch': ( 'callback.tensorboard.html#tensorboardcallback.after_epoch',
                                                                                                              'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardCallback.before_fit': ( 'callback.tensorboard.html#tensorboardcallback.before_fit',
                                                                                                             'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardCallback.before_validate': ( 'callback.tensorboard.html#tensorboardcallback.before_validate',
                                                                                                                  'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardProjectorCallback': ( 'callback.tensorboard.html#tensorboardprojectorcallback',
                                                                                                           'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardProjectorCallback.__init__': ( 'callback.tensorboard.html#tensorboardprojectorcallback.__init__',
                                                                                                                    'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardProjectorCallback.before_fit': ( 'callback.tensorboard.html#tensorboardprojectorcallback.before_fit',
                                                                                                                      'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.TensorBoardProjectorCallback.before_validate': ( 'callback.tensorboard.html#tensorboardprojectorcallback.before_validate',
                                                                                                                           'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard._add_projector_features': ( 'callback.tensorboard.html#_add_projector_features',
                                                                                                      'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard._get_embeddings': ( 'callback.tensorboard.html#_get_embeddings',
                                                                                              'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard._normalize_for_projector': ( 'callback.tensorboard.html#_normalize_for_projector',
                                                                                                       'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard._write_projector_embedding': ( 'callback.tensorboard.html#_write_projector_embedding',
                                                                                                         'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.projector_word_embeddings': ( 'callback.tensorboard.html#projector_word_embeddings',
                                                                                                        'fastai/callback/tensorboard.py'),
                                             'fastai.callback.tensorboard.tensorboard_log': ( 'callback.tensorboard.html#tensorboard_log',
                                                                                              'fastai/callback/tensorboard.py')},
            'fastai.callback.tracker': { 'fastai.callback.tracker.EarlyStoppingCallback': ( 'callback.tracker.html#earlystoppingcallback',
                                                                                            'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.EarlyStoppingCallback.__init__': ( 'callback.tracker.html#earlystoppingcallback.__init__',
                                                                                                     'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.EarlyStoppingCallback.after_epoch': ( 'callback.tracker.html#earlystoppingcallback.after_epoch',
                                                                                                        'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.EarlyStoppingCallback.before_fit': ( 'callback.tracker.html#earlystoppingcallback.before_fit',
                                                                                                       'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.ReduceLROnPlateau': ( 'callback.tracker.html#reducelronplateau',
                                                                                        'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.ReduceLROnPlateau.__init__': ( 'callback.tracker.html#reducelronplateau.__init__',
                                                                                                 'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.ReduceLROnPlateau.after_epoch': ( 'callback.tracker.html#reducelronplateau.after_epoch',
                                                                                                    'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.ReduceLROnPlateau.before_fit': ( 'callback.tracker.html#reducelronplateau.before_fit',
                                                                                                   'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.SaveModelCallback': ( 'callback.tracker.html#savemodelcallback',
                                                                                        'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.SaveModelCallback.__init__': ( 'callback.tracker.html#savemodelcallback.__init__',
                                                                                                 'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.SaveModelCallback._save': ( 'callback.tracker.html#savemodelcallback._save',
                                                                                              'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.SaveModelCallback.after_epoch': ( 'callback.tracker.html#savemodelcallback.after_epoch',
                                                                                                    'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.SaveModelCallback.after_fit': ( 'callback.tracker.html#savemodelcallback.after_fit',
                                                                                                  'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.TerminateOnNaNCallback': ( 'callback.tracker.html#terminateonnancallback',
                                                                                             'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.TerminateOnNaNCallback.after_batch': ( 'callback.tracker.html#terminateonnancallback.after_batch',
                                                                                                         'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.TrackerCallback': ( 'callback.tracker.html#trackercallback',
                                                                                      'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.TrackerCallback.__init__': ( 'callback.tracker.html#trackercallback.__init__',
                                                                                               'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.TrackerCallback.after_epoch': ( 'callback.tracker.html#trackercallback.after_epoch',
                                                                                                  'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.TrackerCallback.after_fit': ( 'callback.tracker.html#trackercallback.after_fit',
                                                                                                'fastai/callback/tracker.py'),
                                         'fastai.callback.tracker.TrackerCallback.before_fit': ( 'callback.tracker.html#trackercallback.before_fit',
                                                                                                 'fastai/callback/tracker.py')},
            'fastai.callback.training': { 'fastai.callback.training.BnFreeze': ( 'callback.training.html#bnfreeze',
                                                                                 'fastai/callback/training.py'),
                                          'fastai.callback.training.BnFreeze.before_train': ( 'callback.training.html#bnfreeze.before_train',
                                                                                              'fastai/callback/training.py'),
                                          'fastai.callback.training.GradientAccumulation': ( 'callback.training.html#gradientaccumulation',
                                                                                             'fastai/callback/training.py'),
                                          'fastai.callback.training.GradientAccumulation.__init__': ( 'callback.training.html#gradientaccumulation.__init__',
                                                                                                      'fastai/callback/training.py'),
                                          'fastai.callback.training.GradientAccumulation.after_loss': ( 'callback.training.html#gradientaccumulation.after_loss',
                                                                                                        'fastai/callback/training.py'),
                                          'fastai.callback.training.GradientAccumulation.before_fit': ( 'callback.training.html#gradientaccumulation.before_fit',
                                                                                                        'fastai/callback/training.py'),
                                          'fastai.callback.training.GradientAccumulation.before_step': ( 'callback.training.html#gradientaccumulation.before_step',
                                                                                                         'fastai/callback/training.py'),
                                          'fastai.callback.training.GradientClip': ( 'callback.training.html#gradientclip',
                                                                                     'fastai/callback/training.py'),
                                          'fastai.callback.training.GradientClip.__init__': ( 'callback.training.html#gradientclip.__init__',
                                                                                              'fastai/callback/training.py'),
                                          'fastai.callback.training.GradientClip.before_step': ( 'callback.training.html#gradientclip.before_step',
                                                                                                 'fastai/callback/training.py'),
                                          'fastai.callback.training.ShortEpochCallback': ( 'callback.training.html#shortepochcallback',
                                                                                           'fastai/callback/training.py'),
                                          'fastai.callback.training.ShortEpochCallback.__init__': ( 'callback.training.html#shortepochcallback.__init__',
                                                                                                    'fastai/callback/training.py'),
                                          'fastai.callback.training.ShortEpochCallback.after_batch': ( 'callback.training.html#shortepochcallback.after_batch',
                                                                                                       'fastai/callback/training.py'),
                                          'fastai.callback.training.set_bn_eval': ( 'callback.training.html#set_bn_eval',
                                                                                    'fastai/callback/training.py')},
            'fastai.callback.wandb': { 'fastai.callback.wandb.Learner.gather_args': ( 'callback.wandb.html#learner.gather_args',
                                                                                      'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb.WandbCallback': ( 'callback.wandb.html#wandbcallback',
                                                                                'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb.WandbCallback.__init__': ( 'callback.wandb.html#wandbcallback.__init__',
                                                                                         'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb.WandbCallback.after_batch': ( 'callback.wandb.html#wandbcallback.after_batch',
                                                                                            'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb.WandbCallback.after_create': ( 'callback.wandb.html#wandbcallback.after_create',
                                                                                             'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb.WandbCallback.after_epoch': ( 'callback.wandb.html#wandbcallback.after_epoch',
                                                                                            'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb.WandbCallback.after_fit': ( 'callback.wandb.html#wandbcallback.after_fit',
                                                                                          'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb.WandbCallback.before_batch': ( 'callback.wandb.html#wandbcallback.before_batch',
                                                                                             'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb.WandbCallback.before_fit': ( 'callback.wandb.html#wandbcallback.before_fit',
                                                                                           'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb.WandbCallback.log_predictions': ( 'callback.wandb.html#wandbcallback.log_predictions',
                                                                                                'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb._format_config': ( 'callback.wandb.html#_format_config',
                                                                                 'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb._format_config_value': ( 'callback.wandb.html#_format_config_value',
                                                                                       'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb._format_metadata': ( 'callback.wandb.html#_format_metadata',
                                                                                   'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb._make_plt': ('callback.wandb.html#_make_plt', 'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb._unlist': ('callback.wandb.html#_unlist', 'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb.log_dataset': ('callback.wandb.html#log_dataset', 'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb.log_model': ('callback.wandb.html#log_model', 'fastai/callback/wandb.py'),
                                       'fastai.callback.wandb.wandb_process': ( 'callback.wandb.html#wandb_process',
                                                                                'fastai/callback/wandb.py')},
            'fastai.collab': { 'fastai.collab.CollabDataLoaders': ('collab.html#collabdataloaders', 'fastai/collab.py'),
                               'fastai.collab.CollabDataLoaders.from_csv': ('collab.html#collabdataloaders.from_csv', 'fastai/collab.py'),
                               'fastai.collab.CollabDataLoaders.from_df': ('collab.html#collabdataloaders.from_df', 'fastai/collab.py'),
                               'fastai.collab.EmbeddingDotBias': ('collab.html#embeddingdotbias', 'fastai/collab.py'),
                               'fastai.collab.EmbeddingDotBias.__init__': ('collab.html#embeddingdotbias.__init__', 'fastai/collab.py'),
                               'fastai.collab.EmbeddingDotBias._get_idx': ('collab.html#embeddingdotbias._get_idx', 'fastai/collab.py'),
                               'fastai.collab.EmbeddingDotBias.bias': ('collab.html#embeddingdotbias.bias', 'fastai/collab.py'),
                               'fastai.collab.EmbeddingDotBias.forward': ('collab.html#embeddingdotbias.forward', 'fastai/collab.py'),
                               'fastai.collab.EmbeddingDotBias.from_classes': ( 'collab.html#embeddingdotbias.from_classes',
                                                                                'fastai/collab.py'),
                               'fastai.collab.EmbeddingDotBias.weight': ('collab.html#embeddingdotbias.weight', 'fastai/collab.py'),
                               'fastai.collab.EmbeddingNN': ('collab.html#embeddingnn', 'fastai/collab.py'),
                               'fastai.collab.EmbeddingNN.__init__': ('collab.html#embeddingnn.__init__', 'fastai/collab.py'),
                               'fastai.collab.TabularCollab': ('collab.html#tabularcollab', 'fastai/collab.py'),
                               'fastai.collab.collab_learner': ('collab.html#collab_learner', 'fastai/collab.py')},
            'fastai.data.all': {},
            'fastai.data.block': { 'fastai.data.block.CategoryBlock': ('data.block.html#categoryblock', 'fastai/data/block.py'),
                                   'fastai.data.block.DataBlock': ('data.block.html#datablock', 'fastai/data/block.py'),
                                   'fastai.data.block.DataBlock.__init__': ('data.block.html#datablock.__init__', 'fastai/data/block.py'),
                                   'fastai.data.block.DataBlock._combine_type_tfms': ( 'data.block.html#datablock._combine_type_tfms',
                                                                                       'fastai/data/block.py'),
                                   'fastai.data.block.DataBlock.dataloaders': ( 'data.block.html#datablock.dataloaders',
                                                                                'fastai/data/block.py'),
                                   'fastai.data.block.DataBlock.datasets': ('data.block.html#datablock.datasets', 'fastai/data/block.py'),
                                   'fastai.data.block.DataBlock.from_columns': ( 'data.block.html#datablock.from_columns',
                                                                                 'fastai/data/block.py'),
                                   'fastai.data.block.DataBlock.new': ('data.block.html#datablock.new', 'fastai/data/block.py'),
                                   'fastai.data.block.DataBlock.summary': ('data.block.html#datablock.summary', 'fastai/data/block.py'),
                                   'fastai.data.block.MultiCategoryBlock': ('data.block.html#multicategoryblock', 'fastai/data/block.py'),
                                   'fastai.data.block.RegressionBlock': ('data.block.html#regressionblock', 'fastai/data/block.py'),
                                   'fastai.data.block.TransformBlock': ('data.block.html#transformblock', 'fastai/data/block.py'),
                                   'fastai.data.block.TransformBlock.__init__': ( 'data.block.html#transformblock.__init__',
                                                                                  'fastai/data/block.py'),
                                   'fastai.data.block._apply_pipeline': ('data.block.html#_apply_pipeline', 'fastai/data/block.py'),
                                   'fastai.data.block._find_fail_collate': ('data.block.html#_find_fail_collate', 'fastai/data/block.py'),
                                   'fastai.data.block._merge_grouper': ('data.block.html#_merge_grouper', 'fastai/data/block.py'),
                                   'fastai.data.block._merge_tfms': ('data.block.html#_merge_tfms', 'fastai/data/block.py'),
                                   'fastai.data.block._short_repr': ('data.block.html#_short_repr', 'fastai/data/block.py'),
                                   'fastai.data.block._zip': ('data.block.html#_zip', 'fastai/data/block.py')},
            'fastai.data.core': { 'fastai.data.core.DataLoaders': ('data.core.html#dataloaders', 'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders.__getitem__': ( 'data.core.html#dataloaders.__getitem__',
                                                                                'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders.__init__': ('data.core.html#dataloaders.__init__', 'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders.__len__': ('data.core.html#dataloaders.__len__', 'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders._add_tfms': ('data.core.html#dataloaders._add_tfms', 'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders._set': ('data.core.html#dataloaders._set', 'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders.add_tfms': ('data.core.html#dataloaders.add_tfms', 'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders.cpu': ('data.core.html#dataloaders.cpu', 'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders.cuda': ('data.core.html#dataloaders.cuda', 'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders.device': ('data.core.html#dataloaders.device', 'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders.from_dblock': ( 'data.core.html#dataloaders.from_dblock',
                                                                                'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders.from_dsets': ( 'data.core.html#dataloaders.from_dsets',
                                                                               'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders.new_empty': ('data.core.html#dataloaders.new_empty', 'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders.test_dl': ('data.core.html#dataloaders.test_dl', 'fastai/data/core.py'),
                                  'fastai.data.core.DataLoaders.to': ('data.core.html#dataloaders.to', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets': ('data.core.html#datasets', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.__dir__': ('data.core.html#datasets.__dir__', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.__getattr__': ('data.core.html#datasets.__getattr__', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.__getitem__': ('data.core.html#datasets.__getitem__', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.__init__': ('data.core.html#datasets.__init__', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.__iter__': ('data.core.html#datasets.__iter__', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.__len__': ('data.core.html#datasets.__len__', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.__repr__': ('data.core.html#datasets.__repr__', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets._new': ('data.core.html#datasets._new', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.decode': ('data.core.html#datasets.decode', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.items': ('data.core.html#datasets.items', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.new_empty': ('data.core.html#datasets.new_empty', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.overlapping_splits': ( 'data.core.html#datasets.overlapping_splits',
                                                                                    'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.set_split_idx': ( 'data.core.html#datasets.set_split_idx',
                                                                               'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.show': ('data.core.html#datasets.show', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.split_idx': ('data.core.html#datasets.split_idx', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.splits': ('data.core.html#datasets.splits', 'fastai/data/core.py'),
                                  'fastai.data.core.Datasets.subset': ('data.core.html#datasets.subset', 'fastai/data/core.py'),
                                  'fastai.data.core.FilteredBase': ('data.core.html#filteredbase', 'fastai/data/core.py'),
                                  'fastai.data.core.FilteredBase.__init__': ('data.core.html#filteredbase.__init__', 'fastai/data/core.py'),
                                  'fastai.data.core.FilteredBase._new': ('data.core.html#filteredbase._new', 'fastai/data/core.py'),
                                  'fastai.data.core.FilteredBase.dataloaders': ( 'data.core.html#filteredbase.dataloaders',
                                                                                 'fastai/data/core.py'),
                                  'fastai.data.core.FilteredBase.n_subsets': ( 'data.core.html#filteredbase.n_subsets',
                                                                               'fastai/data/core.py'),
                                  'fastai.data.core.FilteredBase.subset': ('data.core.html#filteredbase.subset', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdDL': ('data.core.html#tfmddl', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdDL.__init__': ('data.core.html#tfmddl.__init__', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdDL._decode_batch': ('data.core.html#tfmddl._decode_batch', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdDL._one_pass': ('data.core.html#tfmddl._one_pass', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdDL._pre_show_batch': ( 'data.core.html#tfmddl._pre_show_batch',
                                                                               'fastai/data/core.py'),
                                  'fastai.data.core.TfmdDL._retain_dl': ('data.core.html#tfmddl._retain_dl', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdDL.before_iter': ('data.core.html#tfmddl.before_iter', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdDL.decode': ('data.core.html#tfmddl.decode', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdDL.decode_batch': ('data.core.html#tfmddl.decode_batch', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdDL.n_inp': ('data.core.html#tfmddl.n_inp', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdDL.new': ('data.core.html#tfmddl.new', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdDL.show_batch': ('data.core.html#tfmddl.show_batch', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdDL.show_results': ('data.core.html#tfmddl.show_results', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists': ('data.core.html#tfmdlists', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists.__call__': ('data.core.html#tfmdlists.__call__', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists.__getitem__': ('data.core.html#tfmdlists.__getitem__', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists.__init__': ('data.core.html#tfmdlists.__init__', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists.__iter__': ('data.core.html#tfmdlists.__iter__', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists.__repr__': ('data.core.html#tfmdlists.__repr__', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists._after_item': ('data.core.html#tfmdlists._after_item', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists._new': ('data.core.html#tfmdlists._new', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists.decode': ('data.core.html#tfmdlists.decode', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists.infer': ('data.core.html#tfmdlists.infer', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists.infer_idx': ('data.core.html#tfmdlists.infer_idx', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists.new_empty': ('data.core.html#tfmdlists.new_empty', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists.overlapping_splits': ( 'data.core.html#tfmdlists.overlapping_splits',
                                                                                     'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists.setup': ('data.core.html#tfmdlists.setup', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists.show': ('data.core.html#tfmdlists.show', 'fastai/data/core.py'),
                                  'fastai.data.core.TfmdLists.subset': ('data.core.html#tfmdlists.subset', 'fastai/data/core.py'),
                                  'fastai.data.core.decode_at': ('data.core.html#decode_at', 'fastai/data/core.py'),
                                  'fastai.data.core.show_at': ('data.core.html#show_at', 'fastai/data/core.py'),
                                  'fastai.data.core.show_batch': ('data.core.html#show_batch', 'fastai/data/core.py'),
                                  'fastai.data.core.show_results': ('data.core.html#show_results', 'fastai/data/core.py'),
                                  'fastai.data.core.test_set': ('data.core.html#test_set', 'fastai/data/core.py')},
            'fastai.data.download_checks': {},
            'fastai.data.external': { 'fastai.data.external.URLs': ('data.external.html#urls', 'fastai/data/external.py'),
                                      'fastai.data.external.URLs.path': ('data.external.html#urls.path', 'fastai/data/external.py'),
                                      'fastai.data.external.fastai_cfg': ('data.external.html#fastai_cfg', 'fastai/data/external.py'),
                                      'fastai.data.external.fastai_path': ('data.external.html#fastai_path', 'fastai/data/external.py'),
                                      'fastai.data.external.untar_data': ('data.external.html#untar_data', 'fastai/data/external.py')},
            'fastai.data.load': { 'fastai.data.load.DataLoader': ('data.load.html#dataloader', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.__init__': ('data.load.html#dataloader.__init__', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.__iter__': ('data.load.html#dataloader.__iter__', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.__len__': ('data.load.html#dataloader.__len__', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.chunkify': ('data.load.html#dataloader.chunkify', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.create_batch': ( 'data.load.html#dataloader.create_batch',
                                                                                'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.create_batches': ( 'data.load.html#dataloader.create_batches',
                                                                                  'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.create_item': ( 'data.load.html#dataloader.create_item',
                                                                               'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.device': ('data.load.html#dataloader.device', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.do_batch': ('data.load.html#dataloader.do_batch', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.do_item': ('data.load.html#dataloader.do_item', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.get_idxs': ('data.load.html#dataloader.get_idxs', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.new': ('data.load.html#dataloader.new', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.one_batch': ('data.load.html#dataloader.one_batch', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.prebatched': ('data.load.html#dataloader.prebatched', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.randomize': ('data.load.html#dataloader.randomize', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.retain': ('data.load.html#dataloader.retain', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.sample': ('data.load.html#dataloader.sample', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.shuffle_fn': ('data.load.html#dataloader.shuffle_fn', 'fastai/data/load.py'),
                                  'fastai.data.load.DataLoader.to': ('data.load.html#dataloader.to', 'fastai/data/load.py'),
                                  'fastai.data.load.SkipItemException': ('data.load.html#skipitemexception', 'fastai/data/load.py'),
                                  'fastai.data.load._FakeLoader': ('data.load.html#_fakeloader', 'fastai/data/load.py'),
                                  'fastai.data.load._FakeLoader.__init__': ('data.load.html#_fakeloader.__init__', 'fastai/data/load.py'),
                                  'fastai.data.load._FakeLoader.__iter__': ('data.load.html#_fakeloader.__iter__', 'fastai/data/load.py'),
                                  'fastai.data.load._FakeLoader._fn_noops': ('data.load.html#_fakeloader._fn_noops', 'fastai/data/load.py'),
                                  'fastai.data.load._FakeLoader.multiprocessing_context': ( 'data.load.html#_fakeloader.multiprocessing_context',
                                                                                            'fastai/data/load.py'),
                                  'fastai.data.load._FakeLoader.no_multiproc': ( 'data.load.html#_fakeloader.no_multiproc',
                                                                                 'fastai/data/load.py'),
                                  'fastai.data.load._wif': ('data.load.html#_wif', 'fastai/data/load.py'),
                                  'fastai.data.load.collate_error': ('data.load.html#collate_error', 'fastai/data/load.py'),
                                  'fastai.data.load.fa_collate': ('data.load.html#fa_collate', 'fastai/data/load.py'),
                                  'fastai.data.load.fa_convert': ('data.load.html#fa_convert', 'fastai/data/load.py')},
            'fastai.data.transforms': { 'fastai.data.transforms.AttrGetter': ( 'data.transforms.html#attrgetter',
                                                                               'fastai/data/transforms.py'),
                                        'fastai.data.transforms.AttrGetter.__init__': ( 'data.transforms.html#attrgetter.__init__',
                                                                                        'fastai/data/transforms.py'),
                                        'fastai.data.transforms.AttrGetter.encodes': ( 'data.transforms.html#attrgetter.encodes',
                                                                                       'fastai/data/transforms.py'),
                                        'fastai.data.transforms.Categorize': ( 'data.transforms.html#categorize',
                                                                               'fastai/data/transforms.py'),
                                        'fastai.data.transforms.Categorize.__init__': ( 'data.transforms.html#categorize.__init__',
                                                                                        'fastai/data/transforms.py'),
                                        'fastai.data.transforms.Categorize.decodes': ( 'data.transforms.html#categorize.decodes',
                                                                                       'fastai/data/transforms.py'),
                                        'fastai.data.transforms.Categorize.encodes': ( 'data.transforms.html#categorize.encodes',
                                                                                       'fastai/data/transforms.py'),
                                        'fastai.data.transforms.Categorize.setups': ( 'data.transforms.html#categorize.setups',
                                                                                      'fastai/data/transforms.py'),
                                        'fastai.data.transforms.Category': ('data.transforms.html#category', 'fastai/data/transforms.py'),
                                        'fastai.data.transforms.CategoryMap': ( 'data.transforms.html#categorymap',
                                                                                'fastai/data/transforms.py'),
                                        'fastai.data.transforms.CategoryMap.__eq__': ( 'data.transforms.html#categorymap.__eq__',
                                                                                       'fastai/data/transforms.py'),
                                        'fastai.data.transforms.CategoryMap.__init__': ( 'data.transforms.html#categorymap.__init__',
                                                                                         'fastai/data/transforms.py'),
                                        'fastai.data.transforms.CategoryMap.map_ids': ( 'data.transforms.html#categorymap.map_ids',
                                                                                        'fastai/data/transforms.py'),
                                        'fastai.data.transforms.CategoryMap.map_objs': ( 'data.transforms.html#categorymap.map_objs',
                                                                                         'fastai/data/transforms.py'),
                                        'fastai.data.transforms.ColReader': ('data.transforms.html#colreader', 'fastai/data/transforms.py'),
                                        'fastai.data.transforms.ColReader.__call__': ( 'data.transforms.html#colreader.__call__',
                                                                                       'fastai/data/transforms.py'),
                                        'fastai.data.transforms.ColReader.__init__': ( 'data.transforms.html#colreader.__init__',
                                                                                       'fastai/data/transforms.py'),
                                        'fastai.data.transforms.ColReader._do_one': ( 'data.transforms.html#colreader._do_one',
                                                                                      'fastai/data/transforms.py'),
                                        'fastai.data.transforms.ColSplitter': ( 'data.transforms.html#colsplitter',
                                                                                'fastai/data/transforms.py'),
                                        'fastai.data.transforms.EncodedMultiCategorize': ( 'data.transforms.html#encodedmulticategorize',
                                                                                           'fastai/data/transforms.py'),
                                        'fastai.data.transforms.EncodedMultiCategorize.__init__': ( 'data.transforms.html#encodedmulticategorize.__init__',
                                                                                                    'fastai/data/transforms.py'),
                                        'fastai.data.transforms.EncodedMultiCategorize.decodes': ( 'data.transforms.html#encodedmulticategorize.decodes',
                                                                                                   'fastai/data/transforms.py'),
                                        'fastai.data.transforms.EncodedMultiCategorize.encodes': ( 'data.transforms.html#encodedmulticategorize.encodes',
                                                                                                   'fastai/data/transforms.py'),
                                        'fastai.data.transforms.EndSplitter': ( 'data.transforms.html#endsplitter',
                                                                                'fastai/data/transforms.py'),
                                        'fastai.data.transforms.FileGetter': ( 'data.transforms.html#filegetter',
                                                                               'fastai/data/transforms.py'),
                                        'fastai.data.transforms.FileSplitter': ( 'data.transforms.html#filesplitter',
                                                                                 'fastai/data/transforms.py'),
                                        'fastai.data.transforms.FuncSplitter': ( 'data.transforms.html#funcsplitter',
                                                                                 'fastai/data/transforms.py'),
                                        'fastai.data.transforms.GrandparentSplitter': ( 'data.transforms.html#grandparentsplitter',
                                                                                        'fastai/data/transforms.py'),
                                        'fastai.data.transforms.ImageGetter': ( 'data.transforms.html#imagegetter',
                                                                                'fastai/data/transforms.py'),
                                        'fastai.data.transforms.IndexSplitter': ( 'data.transforms.html#indexsplitter',
                                                                                  'fastai/data/transforms.py'),
                                        'fastai.data.transforms.IntToFloatTensor': ( 'data.transforms.html#inttofloattensor',
                                                                                     'fastai/data/transforms.py'),
                                        'fastai.data.transforms.IntToFloatTensor.__init__': ( 'data.transforms.html#inttofloattensor.__init__',
                                                                                              'fastai/data/transforms.py'),
                                        'fastai.data.transforms.IntToFloatTensor.decodes': ( 'data.transforms.html#inttofloattensor.decodes',
                                                                                             'fastai/data/transforms.py'),
                                        'fastai.data.transforms.IntToFloatTensor.encodes': ( 'data.transforms.html#inttofloattensor.encodes',
                                                                                             'fastai/data/transforms.py'),
                                        'fastai.data.transforms.ItemGetter': ( 'data.transforms.html#itemgetter',
                                                                               'fastai/data/transforms.py'),
                                        'fastai.data.transforms.ItemGetter.__init__': ( 'data.transforms.html#itemgetter.__init__',
                                                                                        'fastai/data/transforms.py'),
                                        'fastai.data.transforms.ItemGetter.encodes': ( 'data.transforms.html#itemgetter.encodes',
                                                                                       'fastai/data/transforms.py'),
                                        'fastai.data.transforms.MaskSplitter': ( 'data.transforms.html#masksplitter',
                                                                                 'fastai/data/transforms.py'),
                                        'fastai.data.transforms.MultiCategorize': ( 'data.transforms.html#multicategorize',
                                                                                    'fastai/data/transforms.py'),
                                        'fastai.data.transforms.MultiCategorize.__init__': ( 'data.transforms.html#multicategorize.__init__',
                                                                                             'fastai/data/transforms.py'),
                                        'fastai.data.transforms.MultiCategorize.decodes': ( 'data.transforms.html#multicategorize.decodes',
                                                                                            'fastai/data/transforms.py'),
                                        'fastai.data.transforms.MultiCategorize.encodes': ( 'data.transforms.html#multicategorize.encodes',
                                                                                            'fastai/data/transforms.py'),
                                        'fastai.data.transforms.MultiCategorize.setups': ( 'data.transforms.html#multicategorize.setups',
                                                                                           'fastai/data/transforms.py'),
                                        'fastai.data.transforms.MultiCategory': ( 'data.transforms.html#multicategory',
                                                                                  'fastai/data/transforms.py'),
                                        'fastai.data.transforms.MultiCategory.show': ( 'data.transforms.html#multicategory.show',
                                                                                       'fastai/data/transforms.py'),
                                        'fastai.data.transforms.Normalize': ('data.transforms.html#normalize', 'fastai/data/transforms.py'),
                                        'fastai.data.transforms.Normalize.__init__': ( 'data.transforms.html#normalize.__init__',
                                                                                       'fastai/data/transforms.py'),
                                        'fastai.data.transforms.Normalize.decodes': ( 'data.transforms.html#normalize.decodes',
                                                                                      'fastai/data/transforms.py'),
                                        'fastai.data.transforms.Normalize.encodes': ( 'data.transforms.html#normalize.encodes',
                                                                                      'fastai/data/transforms.py'),
                                        'fastai.data.transforms.Normalize.from_stats': ( 'data.transforms.html#normalize.from_stats',
                                                                                         'fastai/data/transforms.py'),
                                        'fastai.data.transforms.Normalize.setups': ( 'data.transforms.html#normalize.setups',
                                                                                     'fastai/data/transforms.py'),
                                        'fastai.data.transforms.OneHotEncode': ( 'data.transforms.html#onehotencode',
                                                                                 'fastai/data/transforms.py'),
                                        'fastai.data.transforms.OneHotEncode.__init__': ( 'data.transforms.html#onehotencode.__init__',
                                                                                          'fastai/data/transforms.py'),
                                        'fastai.data.transforms.OneHotEncode.decodes': ( 'data.transforms.html#onehotencode.decodes',
                                                                                         'fastai/data/transforms.py'),
                                        'fastai.data.transforms.OneHotEncode.encodes': ( 'data.transforms.html#onehotencode.encodes',
                                                                                         'fastai/data/transforms.py'),
                                        'fastai.data.transforms.OneHotEncode.setups': ( 'data.transforms.html#onehotencode.setups',
                                                                                        'fastai/data/transforms.py'),
                                        'fastai.data.transforms.RandomSplitter': ( 'data.transforms.html#randomsplitter',
                                                                                   'fastai/data/transforms.py'),
                                        'fastai.data.transforms.RandomSubsetSplitter': ( 'data.transforms.html#randomsubsetsplitter',
                                                                                         'fastai/data/transforms.py'),
                                        'fastai.data.transforms.RegexLabeller': ( 'data.transforms.html#regexlabeller',
                                                                                  'fastai/data/transforms.py'),
                                        'fastai.data.transforms.RegexLabeller.__call__': ( 'data.transforms.html#regexlabeller.__call__',
                                                                                           'fastai/data/transforms.py'),
                                        'fastai.data.transforms.RegexLabeller.__init__': ( 'data.transforms.html#regexlabeller.__init__',
                                                                                           'fastai/data/transforms.py'),
                                        'fastai.data.transforms.RegressionSetup': ( 'data.transforms.html#regressionsetup',
                                                                                    'fastai/data/transforms.py'),
                                        'fastai.data.transforms.RegressionSetup.__init__': ( 'data.transforms.html#regressionsetup.__init__',
                                                                                             'fastai/data/transforms.py'),
                                        'fastai.data.transforms.RegressionSetup.decodes': ( 'data.transforms.html#regressionsetup.decodes',
                                                                                            'fastai/data/transforms.py'),
                                        'fastai.data.transforms.RegressionSetup.encodes': ( 'data.transforms.html#regressionsetup.encodes',
                                                                                            'fastai/data/transforms.py'),
                                        'fastai.data.transforms.RegressionSetup.setups': ( 'data.transforms.html#regressionsetup.setups',
                                                                                           'fastai/data/transforms.py'),
                                        'fastai.data.transforms.ToTensor': ('data.transforms.html#totensor', 'fastai/data/transforms.py'),
                                        'fastai.data.transforms.TrainTestSplitter': ( 'data.transforms.html#traintestsplitter',
                                                                                      'fastai/data/transforms.py'),
                                        'fastai.data.transforms._get_files': ( 'data.transforms.html#_get_files',
                                                                               'fastai/data/transforms.py'),
                                        'fastai.data.transforms._grandparent_idxs': ( 'data.transforms.html#_grandparent_idxs',
                                                                                      'fastai/data/transforms.py'),
                                        'fastai.data.transforms.broadcast_vec': ( 'data.transforms.html#broadcast_vec',
                                                                                  'fastai/data/transforms.py'),
                                        'fastai.data.transforms.get_c': ('data.transforms.html#get_c', 'fastai/data/transforms.py'),
                                        'fastai.data.transforms.get_files': ('data.transforms.html#get_files', 'fastai/data/transforms.py'),
                                        'fastai.data.transforms.get_image_files': ( 'data.transforms.html#get_image_files',
                                                                                    'fastai/data/transforms.py'),
                                        'fastai.data.transforms.get_text_files': ( 'data.transforms.html#get_text_files',
                                                                                   'fastai/data/transforms.py'),
                                        'fastai.data.transforms.parent_label': ( 'data.transforms.html#parent_label',
                                                                                 'fastai/data/transforms.py')},
            'fastai.distributed': { 'fastai.distributed.DataParallel.reset': ( 'distributed.html#dataparallel.reset',
                                                                               'fastai/distributed.py'),
                                    'fastai.distributed.DistributedDL': ('distributed.html#distributeddl', 'fastai/distributed.py'),
                                    'fastai.distributed.DistributedDL.__init__': ( 'distributed.html#distributeddl.__init__',
                                                                                   'fastai/distributed.py'),
                                    'fastai.distributed.DistributedDL.__len__': ( 'distributed.html#distributeddl.__len__',
                                                                                  'fastai/distributed.py'),
                                    'fastai.distributed.DistributedDL._broadcast': ( 'distributed.html#distributeddl._broadcast',
                                                                                     'fastai/distributed.py'),
                                    'fastai.distributed.DistributedDL._to_detach': ( 'distributed.html#distributeddl._to_detach',
                                                                                     'fastai/distributed.py'),
                                    'fastai.distributed.DistributedDL.after_batch': ( 'distributed.html#distributeddl.after_batch',
                                                                                      'fastai/distributed.py'),
                                    'fastai.distributed.DistributedDL.after_iter': ( 'distributed.html#distributeddl.after_iter',
                                                                                     'fastai/distributed.py'),
                                    'fastai.distributed.DistributedDL.before_iter': ( 'distributed.html#distributeddl.before_iter',
                                                                                      'fastai/distributed.py'),
                                    'fastai.distributed.DistributedDL.create_batches': ( 'distributed.html#distributeddl.create_batches',
                                                                                         'fastai/distributed.py'),
                                    'fastai.distributed.DistributedDL.get_idxs': ( 'distributed.html#distributeddl.get_idxs',
                                                                                   'fastai/distributed.py'),
                                    'fastai.distributed.DistributedDL.randomize': ( 'distributed.html#distributeddl.randomize',
                                                                                    'fastai/distributed.py'),
                                    'fastai.distributed.DistributedDL.to_detach': ( 'distributed.html#distributeddl.to_detach',
                                                                                    'fastai/distributed.py'),
                                    'fastai.distributed.DistributedDataParallel.reset': ( 'distributed.html#distributeddataparallel.reset',
                                                                                          'fastai/distributed.py'),
                                    'fastai.distributed.DistributedTrainer': ( 'distributed.html#distributedtrainer',
                                                                               'fastai/distributed.py'),
                                    'fastai.distributed.DistributedTrainer.__init__': ( 'distributed.html#distributedtrainer.__init__',
                                                                                        'fastai/distributed.py'),
                                    'fastai.distributed.DistributedTrainer._backward': ( 'distributed.html#distributedtrainer._backward',
                                                                                         'fastai/distributed.py'),
                                    'fastai.distributed.DistributedTrainer._wrap_dl': ( 'distributed.html#distributedtrainer._wrap_dl',
                                                                                        'fastai/distributed.py'),
                                    'fastai.distributed.DistributedTrainer.after_fit': ( 'distributed.html#distributedtrainer.after_fit',
                                                                                         'fastai/distributed.py'),
                                    'fastai.distributed.DistributedTrainer.before_fit': ( 'distributed.html#distributedtrainer.before_fit',
                                                                                          'fastai/distributed.py'),
                                    'fastai.distributed.DistributedTrainer.before_train': ( 'distributed.html#distributedtrainer.before_train',
                                                                                            'fastai/distributed.py'),
                                    'fastai.distributed.DistributedTrainer.before_validate': ( 'distributed.html#distributedtrainer.before_validate',
                                                                                               'fastai/distributed.py'),
                                    'fastai.distributed.Learner.detach_distributed': ( 'distributed.html#learner.detach_distributed',
                                                                                       'fastai/distributed.py'),
                                    'fastai.distributed.Learner.detach_parallel': ( 'distributed.html#learner.detach_parallel',
                                                                                    'fastai/distributed.py'),
                                    'fastai.distributed.Learner.distrib_ctx': ( 'distributed.html#learner.distrib_ctx',
                                                                                'fastai/distributed.py'),
                                    'fastai.distributed.Learner.parallel_ctx': ( 'distributed.html#learner.parallel_ctx',
                                                                                 'fastai/distributed.py'),
                                    'fastai.distributed.Learner.to_distributed': ( 'distributed.html#learner.to_distributed',
                                                                                   'fastai/distributed.py'),
                                    'fastai.distributed.Learner.to_parallel': ( 'distributed.html#learner.to_parallel',
                                                                                'fastai/distributed.py'),
                                    'fastai.distributed.ParallelTrainer': ('distributed.html#paralleltrainer', 'fastai/distributed.py'),
                                    'fastai.distributed.ParallelTrainer.__init__': ( 'distributed.html#paralleltrainer.__init__',
                                                                                     'fastai/distributed.py'),
                                    'fastai.distributed.ParallelTrainer.after_fit': ( 'distributed.html#paralleltrainer.after_fit',
                                                                                      'fastai/distributed.py'),
                                    'fastai.distributed.ParallelTrainer.before_fit': ( 'distributed.html#paralleltrainer.before_fit',
                                                                                       'fastai/distributed.py'),
                                    'fastai.distributed._round_to_multiple': ( 'distributed.html#_round_to_multiple',
                                                                               'fastai/distributed.py'),
                                    'fastai.distributed.rank0_first': ('distributed.html#rank0_first', 'fastai/distributed.py'),
                                    'fastai.distributed.setup_distrib': ('distributed.html#setup_distrib', 'fastai/distributed.py'),
                                    'fastai.distributed.teardown_distrib': ('distributed.html#teardown_distrib', 'fastai/distributed.py')},
            'fastai.fp16_utils': {},
            'fastai.imports': {},
            'fastai.interpret': { 'fastai.interpret.ClassificationInterpretation': ( 'interpret.html#classificationinterpretation',
                                                                                     'fastai/interpret.py'),
                                  'fastai.interpret.ClassificationInterpretation.__init__': ( 'interpret.html#classificationinterpretation.__init__',
                                                                                              'fastai/interpret.py'),
                                  'fastai.interpret.ClassificationInterpretation.confusion_matrix': ( 'interpret.html#classificationinterpretation.confusion_matrix',
                                                                                                      'fastai/interpret.py'),
                                  'fastai.interpret.ClassificationInterpretation.most_confused': ( 'interpret.html#classificationinterpretation.most_confused',
                                                                                                   'fastai/interpret.py'),
                                  'fastai.interpret.ClassificationInterpretation.plot_confusion_matrix': ( 'interpret.html#classificationinterpretation.plot_confusion_matrix',
                                                                                                           'fastai/interpret.py'),
                                  'fastai.interpret.ClassificationInterpretation.print_classification_report': ( 'interpret.html#classificationinterpretation.print_classification_report',
                                                                                                                 'fastai/interpret.py'),
                                  'fastai.interpret.Interpretation': ('interpret.html#interpretation', 'fastai/interpret.py'),
                                  'fastai.interpret.Interpretation.__getitem__': ( 'interpret.html#interpretation.__getitem__',
                                                                                   'fastai/interpret.py'),
                                  'fastai.interpret.Interpretation.__init__': ( 'interpret.html#interpretation.__init__',
                                                                                'fastai/interpret.py'),
                                  'fastai.interpret.Interpretation.from_learner': ( 'interpret.html#interpretation.from_learner',
                                                                                    'fastai/interpret.py'),
                                  'fastai.interpret.Interpretation.plot_top_losses': ( 'interpret.html#interpretation.plot_top_losses',
                                                                                       'fastai/interpret.py'),
                                  'fastai.interpret.Interpretation.show_results': ( 'interpret.html#interpretation.show_results',
                                                                                    'fastai/interpret.py'),
                                  'fastai.interpret.Interpretation.top_losses': ( 'interpret.html#interpretation.top_losses',
                                                                                  'fastai/interpret.py'),
                                  'fastai.interpret.SegmentationInterpretation': ( 'interpret.html#segmentationinterpretation',
                                                                                   'fastai/interpret.py'),
                                  'fastai.interpret.plot_top_losses': ('interpret.html#plot_top_losses', 'fastai/interpret.py')},
            'fastai.layers': { 'fastai.layers.AdaptiveAvgPool': ('layers.html#adaptiveavgpool', 'fastai/layers.py'),
                               'fastai.layers.AdaptiveConcatPool1d': ('layers.html#adaptiveconcatpool1d', 'fastai/layers.py'),
                               'fastai.layers.AdaptiveConcatPool1d.__init__': ( 'layers.html#adaptiveconcatpool1d.__init__',
                                                                                'fastai/layers.py'),
                               'fastai.layers.AdaptiveConcatPool1d.forward': ( 'layers.html#adaptiveconcatpool1d.forward',
                                                                               'fastai/layers.py'),
                               'fastai.layers.AdaptiveConcatPool2d': ('layers.html#adaptiveconcatpool2d', 'fastai/layers.py'),
                               'fastai.layers.AdaptiveConcatPool2d.__init__': ( 'layers.html#adaptiveconcatpool2d.__init__',
                                                                                'fastai/layers.py'),
                               'fastai.layers.AdaptiveConcatPool2d.forward': ( 'layers.html#adaptiveconcatpool2d.forward',
                                                                               'fastai/layers.py'),
                               'fastai.layers.AvgPool': ('layers.html#avgpool', 'fastai/layers.py'),
                               'fastai.layers.BatchNorm': ('layers.html#batchnorm', 'fastai/layers.py'),
                               'fastai.layers.BatchNorm1dFlat': ('layers.html#batchnorm1dflat', 'fastai/layers.py'),
                               'fastai.layers.BatchNorm1dFlat.forward': ('layers.html#batchnorm1dflat.forward', 'fastai/layers.py'),
                               'fastai.layers.Cat': ('layers.html#cat', 'fastai/layers.py'),
                               'fastai.layers.Cat.__init__': ('layers.html#cat.__init__', 'fastai/layers.py'),
                               'fastai.layers.Cat.forward': ('layers.html#cat.forward', 'fastai/layers.py'),
                               'fastai.layers.ConvLayer': ('layers.html#convlayer', 'fastai/layers.py'),
                               'fastai.layers.ConvLayer.__init__': ('layers.html#convlayer.__init__', 'fastai/layers.py'),
                               'fastai.layers.Debugger': ('layers.html#debugger', 'fastai/layers.py'),
                               'fastai.layers.Embedding': ('layers.html#embedding', 'fastai/layers.py'),
                               'fastai.layers.Embedding.__init__': ('layers.html#embedding.__init__', 'fastai/layers.py'),
                               'fastai.layers.Flatten': ('layers.html#flatten', 'fastai/layers.py'),
                               'fastai.layers.Identity': ('layers.html#identity', 'fastai/layers.py'),
                               'fastai.layers.InstanceNorm': ('layers.html#instancenorm', 'fastai/layers.py'),
                               'fastai.layers.Lambda': ('layers.html#lambda', 'fastai/layers.py'),
                               'fastai.layers.LinBnDrop': ('layers.html#linbndrop', 'fastai/layers.py'),
                               'fastai.layers.LinBnDrop.__init__': ('layers.html#linbndrop.__init__', 'fastai/layers.py'),
                               'fastai.layers.MaxPool': ('layers.html#maxpool', 'fastai/layers.py'),
                               'fastai.layers.MergeLayer': ('layers.html#mergelayer', 'fastai/layers.py'),
                               'fastai.layers.MergeLayer.__init__': ('layers.html#mergelayer.__init__', 'fastai/layers.py'),
                               'fastai.layers.MergeLayer.forward': ('layers.html#mergelayer.forward', 'fastai/layers.py'),
                               'fastai.layers.MishJit': ('layers.html#mishjit', 'fastai/layers.py'),
                               'fastai.layers.MishJit.forward': ('layers.html#mishjit.forward', 'fastai/layers.py'),
                               'fastai.layers.MishJitAutoFn': ('layers.html#mishjitautofn', 'fastai/layers.py'),
                               'fastai.layers.MishJitAutoFn.backward': ('layers.html#mishjitautofn.backward', 'fastai/layers.py'),
                               'fastai.layers.MishJitAutoFn.forward': ('layers.html#mishjitautofn.forward', 'fastai/layers.py'),
                               'fastai.layers.NoneReduce': ('layers.html#nonereduce', 'fastai/layers.py'),
                               'fastai.layers.NoneReduce.__enter__': ('layers.html#nonereduce.__enter__', 'fastai/layers.py'),
                               'fastai.layers.NoneReduce.__exit__': ('layers.html#nonereduce.__exit__', 'fastai/layers.py'),
                               'fastai.layers.NoneReduce.__init__': ('layers.html#nonereduce.__init__', 'fastai/layers.py'),
                               'fastai.layers.ParameterModule': ('layers.html#parametermodule', 'fastai/layers.py'),
                               'fastai.layers.ParameterModule.__init__': ('layers.html#parametermodule.__init__', 'fastai/layers.py'),
                               'fastai.layers.ParameterModule.forward': ('layers.html#parametermodule.forward', 'fastai/layers.py'),
                               'fastai.layers.PartialLambda': ('layers.html#partiallambda', 'fastai/layers.py'),
                               'fastai.layers.PartialLambda.__init__': ('layers.html#partiallambda.__init__', 'fastai/layers.py'),
                               'fastai.layers.PartialLambda.__repr__': ('layers.html#partiallambda.__repr__', 'fastai/layers.py'),
                               'fastai.layers.PartialLambda.forward': ('layers.html#partiallambda.forward', 'fastai/layers.py'),
                               'fastai.layers.PixelShuffle_ICNR': ('layers.html#pixelshuffle_icnr', 'fastai/layers.py'),
                               'fastai.layers.PixelShuffle_ICNR.__init__': ('layers.html#pixelshuffle_icnr.__init__', 'fastai/layers.py'),
                               'fastai.layers.PoolFlatten': ('layers.html#poolflatten', 'fastai/layers.py'),
                               'fastai.layers.PoolFlatten.__init__': ('layers.html#poolflatten.__init__', 'fastai/layers.py'),
                               'fastai.layers.PoolType': ('layers.html#pooltype', 'fastai/layers.py'),
                               'fastai.layers.PooledSelfAttention2d': ('layers.html#pooledselfattention2d', 'fastai/layers.py'),
                               'fastai.layers.PooledSelfAttention2d.__init__': ( 'layers.html#pooledselfattention2d.__init__',
                                                                                 'fastai/layers.py'),
                               'fastai.layers.PooledSelfAttention2d._conv': ('layers.html#pooledselfattention2d._conv', 'fastai/layers.py'),
                               'fastai.layers.PooledSelfAttention2d.forward': ( 'layers.html#pooledselfattention2d.forward',
                                                                                'fastai/layers.py'),
                               'fastai.layers.ProdLayer': ('layers.html#prodlayer', 'fastai/layers.py'),
                               'fastai.layers.ProdLayer.forward': ('layers.html#prodlayer.forward', 'fastai/layers.py'),
                               'fastai.layers.ResBlock': ('layers.html#resblock', 'fastai/layers.py'),
                               'fastai.layers.ResBlock.__init__': ('layers.html#resblock.__init__', 'fastai/layers.py'),
                               'fastai.layers.ResBlock.forward': ('layers.html#resblock.forward', 'fastai/layers.py'),
                               'fastai.layers.ResizeBatch': ('layers.html#resizebatch', 'fastai/layers.py'),
                               'fastai.layers.ResizeBatch.__init__': ('layers.html#resizebatch.__init__', 'fastai/layers.py'),
                               'fastai.layers.ResizeBatch.forward': ('layers.html#resizebatch.forward', 'fastai/layers.py'),
                               'fastai.layers.SEBlock': ('layers.html#seblock', 'fastai/layers.py'),
                               'fastai.layers.SEModule': ('layers.html#semodule', 'fastai/layers.py'),
                               'fastai.layers.SEResNeXtBlock': ('layers.html#seresnextblock', 'fastai/layers.py'),
                               'fastai.layers.SelfAttention': ('layers.html#selfattention', 'fastai/layers.py'),
                               'fastai.layers.SelfAttention.__init__': ('layers.html#selfattention.__init__', 'fastai/layers.py'),
                               'fastai.layers.SelfAttention._conv': ('layers.html#selfattention._conv', 'fastai/layers.py'),
                               'fastai.layers.SelfAttention.forward': ('layers.html#selfattention.forward', 'fastai/layers.py'),
                               'fastai.layers.SeparableBlock': ('layers.html#separableblock', 'fastai/layers.py'),
                               'fastai.layers.SequentialEx': ('layers.html#sequentialex', 'fastai/layers.py'),
                               'fastai.layers.SequentialEx.__getitem__': ('layers.html#sequentialex.__getitem__', 'fastai/layers.py'),
                               'fastai.layers.SequentialEx.__init__': ('layers.html#sequentialex.__init__', 'fastai/layers.py'),
                               'fastai.layers.SequentialEx.append': ('layers.html#sequentialex.append', 'fastai/layers.py'),
                               'fastai.layers.SequentialEx.extend': ('layers.html#sequentialex.extend', 'fastai/layers.py'),
                               'fastai.layers.SequentialEx.forward': ('layers.html#sequentialex.forward', 'fastai/layers.py'),
                               'fastai.layers.SequentialEx.insert': ('layers.html#sequentialex.insert', 'fastai/layers.py'),
                               'fastai.layers.SigmoidRange': ('layers.html#sigmoidrange', 'fastai/layers.py'),
                               'fastai.layers.SimpleCNN': ('layers.html#simplecnn', 'fastai/layers.py'),
                               'fastai.layers.SimpleCNN.__init__': ('layers.html#simplecnn.__init__', 'fastai/layers.py'),
                               'fastai.layers.SimpleSelfAttention': ('layers.html#simpleselfattention', 'fastai/layers.py'),
                               'fastai.layers.SimpleSelfAttention.__init__': ( 'layers.html#simpleselfattention.__init__',
                                                                               'fastai/layers.py'),
                               'fastai.layers.SimpleSelfAttention.forward': ('layers.html#simpleselfattention.forward', 'fastai/layers.py'),
                               'fastai.layers.SwishJit': ('layers.html#swishjit', 'fastai/layers.py'),
                               'fastai.layers.SwishJit.forward': ('layers.html#swishjit.forward', 'fastai/layers.py'),
                               'fastai.layers.TimeDistributed': ('layers.html#timedistributed', 'fastai/layers.py'),
                               'fastai.layers.TimeDistributed.__init__': ('layers.html#timedistributed.__init__', 'fastai/layers.py'),
                               'fastai.layers.TimeDistributed.__repr__': ('layers.html#timedistributed.__repr__', 'fastai/layers.py'),
                               'fastai.layers.TimeDistributed.format_output': ( 'layers.html#timedistributed.format_output',
                                                                                'fastai/layers.py'),
                               'fastai.layers.TimeDistributed.forward': ('layers.html#timedistributed.forward', 'fastai/layers.py'),
                               'fastai.layers.TimeDistributed.low_mem_forward': ( 'layers.html#timedistributed.low_mem_forward',
                                                                                  'fastai/layers.py'),
                               'fastai.layers.ToTensorBase': ('layers.html#totensorbase', 'fastai/layers.py'),
                               'fastai.layers.View': ('layers.html#view', 'fastai/layers.py'),
                               'fastai.layers.View.__init__': ('layers.html#view.__init__', 'fastai/layers.py'),
                               'fastai.layers.View.forward': ('layers.html#view.forward', 'fastai/layers.py'),
                               'fastai.layers._SwishJitAutoFn': ('layers.html#_swishjitautofn', 'fastai/layers.py'),
                               'fastai.layers._SwishJitAutoFn.backward': ('layers.html#_swishjitautofn.backward', 'fastai/layers.py'),
                               'fastai.layers._SwishJitAutoFn.forward': ('layers.html#_swishjitautofn.forward', 'fastai/layers.py'),
                               'fastai.layers._conv1d_spect': ('layers.html#_conv1d_spect', 'fastai/layers.py'),
                               'fastai.layers._conv_func': ('layers.html#_conv_func', 'fastai/layers.py'),
                               'fastai.layers._get_norm': ('layers.html#_get_norm', 'fastai/layers.py'),
                               'fastai.layers._mish_jit_bwd': ('layers.html#_mish_jit_bwd', 'fastai/layers.py'),
                               'fastai.layers._mish_jit_fwd': ('layers.html#_mish_jit_fwd', 'fastai/layers.py'),
                               'fastai.layers._stack_tups': ('layers.html#_stack_tups', 'fastai/layers.py'),
                               'fastai.layers._swish_jit_bwd': ('layers.html#_swish_jit_bwd', 'fastai/layers.py'),
                               'fastai.layers._swish_jit_fwd': ('layers.html#_swish_jit_fwd', 'fastai/layers.py'),
                               'fastai.layers.adaptive_pool': ('layers.html#adaptive_pool', 'fastai/layers.py'),
                               'fastai.layers.children_and_parameters': ('layers.html#children_and_parameters', 'fastai/layers.py'),
                               'fastai.layers.flatten_model': ('layers.html#flatten_model', 'fastai/layers.py'),
                               'fastai.layers.has_children': ('layers.html#has_children', 'fastai/layers.py'),
                               'fastai.layers.icnr_init': ('layers.html#icnr_init', 'fastai/layers.py'),
                               'fastai.layers.in_channels': ('layers.html#in_channels', 'fastai/layers.py'),
                               'fastai.layers.init_default': ('layers.html#init_default', 'fastai/layers.py'),
                               'fastai.layers.init_linear': ('layers.html#init_linear', 'fastai/layers.py'),
                               'fastai.layers.mish': ('layers.html#mish', 'fastai/layers.py'),
                               'fastai.layers.module': ('layers.html#module', 'fastai/layers.py'),
                               'fastai.layers.sequential': ('layers.html#sequential', 'fastai/layers.py'),
                               'fastai.layers.sigmoid': ('layers.html#sigmoid', 'fastai/layers.py'),
                               'fastai.layers.sigmoid_': ('layers.html#sigmoid_', 'fastai/layers.py'),
                               'fastai.layers.sigmoid_range': ('layers.html#sigmoid_range', 'fastai/layers.py'),
                               'fastai.layers.swish': ('layers.html#swish', 'fastai/layers.py'),
                               'fastai.layers.trunc_normal_': ('layers.html#trunc_normal_', 'fastai/layers.py'),
                               'fastai.layers.vleaky_relu': ('layers.html#vleaky_relu', 'fastai/layers.py')},
            'fastai.learner': { 'fastai.learner.AvgLoss': ('learner.html#avgloss', 'fastai/learner.py'),
                                'fastai.learner.AvgLoss.accumulate': ('learner.html#avgloss.accumulate', 'fastai/learner.py'),
                                'fastai.learner.AvgLoss.name': ('learner.html#avgloss.name', 'fastai/learner.py'),
                                'fastai.learner.AvgLoss.reset': ('learner.html#avgloss.reset', 'fastai/learner.py'),
                                'fastai.learner.AvgLoss.value': ('learner.html#avgloss.value', 'fastai/learner.py'),
                                'fastai.learner.AvgMetric': ('learner.html#avgmetric', 'fastai/learner.py'),
                                'fastai.learner.AvgMetric.__init__': ('learner.html#avgmetric.__init__', 'fastai/learner.py'),
                                'fastai.learner.AvgMetric.accumulate': ('learner.html#avgmetric.accumulate', 'fastai/learner.py'),
                                'fastai.learner.AvgMetric.name': ('learner.html#avgmetric.name', 'fastai/learner.py'),
                                'fastai.learner.AvgMetric.reset': ('learner.html#avgmetric.reset', 'fastai/learner.py'),
                                'fastai.learner.AvgMetric.value': ('learner.html#avgmetric.value', 'fastai/learner.py'),
                                'fastai.learner.AvgSmoothLoss': ('learner.html#avgsmoothloss', 'fastai/learner.py'),
                                'fastai.learner.AvgSmoothLoss.__init__': ('learner.html#avgsmoothloss.__init__', 'fastai/learner.py'),
                                'fastai.learner.AvgSmoothLoss.accumulate': ('learner.html#avgsmoothloss.accumulate', 'fastai/learner.py'),
                                'fastai.learner.AvgSmoothLoss.reset': ('learner.html#avgsmoothloss.reset', 'fastai/learner.py'),
                                'fastai.learner.AvgSmoothLoss.value': ('learner.html#avgsmoothloss.value', 'fastai/learner.py'),
                                'fastai.learner.CastToTensor': ('learner.html#casttotensor', 'fastai/learner.py'),
                                'fastai.learner.CastToTensor.before_batch': ('learner.html#casttotensor.before_batch', 'fastai/learner.py'),
                                'fastai.learner.Learner': ('learner.html#learner', 'fastai/learner.py'),
                                'fastai.learner.Learner.__call__': ('learner.html#learner.__call__', 'fastai/learner.py'),
                                'fastai.learner.Learner.__enter__': ('learner.html#learner.__enter__', 'fastai/learner.py'),
                                'fastai.learner.Learner.__exit__': ('learner.html#learner.__exit__', 'fastai/learner.py'),
                                'fastai.learner.Learner.__getstate__': ('learner.html#learner.__getstate__', 'fastai/learner.py'),
                                'fastai.learner.Learner.__init__': ('learner.html#learner.__init__', 'fastai/learner.py'),
                                'fastai.learner.Learner.__setstate__': ('learner.html#learner.__setstate__', 'fastai/learner.py'),
                                'fastai.learner.Learner._backward': ('learner.html#learner._backward', 'fastai/learner.py'),
                                'fastai.learner.Learner._bn_bias_state': ('learner.html#learner._bn_bias_state', 'fastai/learner.py'),
                                'fastai.learner.Learner._call_one': ('learner.html#learner._call_one', 'fastai/learner.py'),
                                'fastai.learner.Learner._do_epoch': ('learner.html#learner._do_epoch', 'fastai/learner.py'),
                                'fastai.learner.Learner._do_epoch_train': ('learner.html#learner._do_epoch_train', 'fastai/learner.py'),
                                'fastai.learner.Learner._do_epoch_validate': ( 'learner.html#learner._do_epoch_validate',
                                                                               'fastai/learner.py'),
                                'fastai.learner.Learner._do_fit': ('learner.html#learner._do_fit', 'fastai/learner.py'),
                                'fastai.learner.Learner._do_grad_opt': ('learner.html#learner._do_grad_opt', 'fastai/learner.py'),
                                'fastai.learner.Learner._do_one_batch': ('learner.html#learner._do_one_batch', 'fastai/learner.py'),
                                'fastai.learner.Learner._end_cleanup': ('learner.html#learner._end_cleanup', 'fastai/learner.py'),
                                'fastai.learner.Learner._grab_cbs': ('learner.html#learner._grab_cbs', 'fastai/learner.py'),
                                'fastai.learner.Learner._set_device': ('learner.html#learner._set_device', 'fastai/learner.py'),
                                'fastai.learner.Learner._split': ('learner.html#learner._split', 'fastai/learner.py'),
                                'fastai.learner.Learner._step': ('learner.html#learner._step', 'fastai/learner.py'),
                                'fastai.learner.Learner._with_events': ('learner.html#learner._with_events', 'fastai/learner.py'),
                                'fastai.learner.Learner.add_cb': ('learner.html#learner.add_cb', 'fastai/learner.py'),
                                'fastai.learner.Learner.add_cbs': ('learner.html#learner.add_cbs', 'fastai/learner.py'),
                                'fastai.learner.Learner.added_cbs': ('learner.html#learner.added_cbs', 'fastai/learner.py'),
                                'fastai.learner.Learner.all_batches': ('learner.html#learner.all_batches', 'fastai/learner.py'),
                                'fastai.learner.Learner.create_opt': ('learner.html#learner.create_opt', 'fastai/learner.py'),
                                'fastai.learner.Learner.export': ('learner.html#learner.export', 'fastai/learner.py'),
                                'fastai.learner.Learner.fit': ('learner.html#learner.fit', 'fastai/learner.py'),
                                'fastai.learner.Learner.freeze': ('learner.html#learner.freeze', 'fastai/learner.py'),
                                'fastai.learner.Learner.freeze_to': ('learner.html#learner.freeze_to', 'fastai/learner.py'),
                                'fastai.learner.Learner.get_preds': ('learner.html#learner.get_preds', 'fastai/learner.py'),
                                'fastai.learner.Learner.load': ('learner.html#learner.load', 'fastai/learner.py'),
                                'fastai.learner.Learner.loss_not_reduced': ('learner.html#learner.loss_not_reduced', 'fastai/learner.py'),
                                'fastai.learner.Learner.metrics': ('learner.html#learner.metrics', 'fastai/learner.py'),
                                'fastai.learner.Learner.no_logging': ('learner.html#learner.no_logging', 'fastai/learner.py'),
                                'fastai.learner.Learner.no_mbar': ('learner.html#learner.no_mbar', 'fastai/learner.py'),
                                'fastai.learner.Learner.one_batch': ('learner.html#learner.one_batch', 'fastai/learner.py'),
                                'fastai.learner.Learner.ordered_cbs': ('learner.html#learner.ordered_cbs', 'fastai/learner.py'),
                                'fastai.learner.Learner.predict': ('learner.html#learner.predict', 'fastai/learner.py'),
                                'fastai.learner.Learner.remove_cb': ('learner.html#learner.remove_cb', 'fastai/learner.py'),
                                'fastai.learner.Learner.remove_cbs': ('learner.html#learner.remove_cbs', 'fastai/learner.py'),
                                'fastai.learner.Learner.removed_cbs': ('learner.html#learner.removed_cbs', 'fastai/learner.py'),
                                'fastai.learner.Learner.save': ('learner.html#learner.save', 'fastai/learner.py'),
                                'fastai.learner.Learner.show_results': ('learner.html#learner.show_results', 'fastai/learner.py'),
                                'fastai.learner.Learner.show_training_loop': ( 'learner.html#learner.show_training_loop',
                                                                               'fastai/learner.py'),
                                'fastai.learner.Learner.to_detach': ('learner.html#learner.to_detach', 'fastai/learner.py'),
                                'fastai.learner.Learner.tta': ('learner.html#learner.tta', 'fastai/learner.py'),
                                'fastai.learner.Learner.unfreeze': ('learner.html#learner.unfreeze', 'fastai/learner.py'),
                                'fastai.learner.Learner.validate': ('learner.html#learner.validate', 'fastai/learner.py'),
                                'fastai.learner.Learner.validation_context': ( 'learner.html#learner.validation_context',
                                                                               'fastai/learner.py'),
                                'fastai.learner.Metric': ('learner.html#metric', 'fastai/learner.py'),
                                'fastai.learner.Metric.accumulate': ('learner.html#metric.accumulate', 'fastai/learner.py'),
                                'fastai.learner.Metric.name': ('learner.html#metric.name', 'fastai/learner.py'),
                                'fastai.learner.Metric.reset': ('learner.html#metric.reset', 'fastai/learner.py'),
                                'fastai.learner.Metric.value': ('learner.html#metric.value', 'fastai/learner.py'),
                                'fastai.learner.Recorder': ('learner.html#recorder', 'fastai/learner.py'),
                                'fastai.learner.Recorder.__init__': ('learner.html#recorder.__init__', 'fastai/learner.py'),
                                'fastai.learner.Recorder._train_mets': ('learner.html#recorder._train_mets', 'fastai/learner.py'),
                                'fastai.learner.Recorder._valid_mets': ('learner.html#recorder._valid_mets', 'fastai/learner.py'),
                                'fastai.learner.Recorder.after_batch': ('learner.html#recorder.after_batch', 'fastai/learner.py'),
                                'fastai.learner.Recorder.after_cancel_train': ( 'learner.html#recorder.after_cancel_train',
                                                                                'fastai/learner.py'),
                                'fastai.learner.Recorder.after_cancel_validate': ( 'learner.html#recorder.after_cancel_validate',
                                                                                   'fastai/learner.py'),
                                'fastai.learner.Recorder.after_epoch': ('learner.html#recorder.after_epoch', 'fastai/learner.py'),
                                'fastai.learner.Recorder.after_train': ('learner.html#recorder.after_train', 'fastai/learner.py'),
                                'fastai.learner.Recorder.after_validate': ('learner.html#recorder.after_validate', 'fastai/learner.py'),
                                'fastai.learner.Recorder.before_epoch': ('learner.html#recorder.before_epoch', 'fastai/learner.py'),
                                'fastai.learner.Recorder.before_fit': ('learner.html#recorder.before_fit', 'fastai/learner.py'),
                                'fastai.learner.Recorder.before_train': ('learner.html#recorder.before_train', 'fastai/learner.py'),
                                'fastai.learner.Recorder.before_validate': ('learner.html#recorder.before_validate', 'fastai/learner.py'),
                                'fastai.learner.Recorder.plot_loss': ('learner.html#recorder.plot_loss', 'fastai/learner.py'),
                                'fastai.learner.SkipToEpoch': ('learner.html#skiptoepoch', 'fastai/learner.py'),
                                'fastai.learner.SkipToEpoch.__init__': ('learner.html#skiptoepoch.__init__', 'fastai/learner.py'),
                                'fastai.learner.SkipToEpoch.before_epoch': ('learner.html#skiptoepoch.before_epoch', 'fastai/learner.py'),
                                'fastai.learner.ValueMetric': ('learner.html#valuemetric', 'fastai/learner.py'),
                                'fastai.learner.ValueMetric.__init__': ('learner.html#valuemetric.__init__', 'fastai/learner.py'),
                                'fastai.learner.ValueMetric.name': ('learner.html#valuemetric.name', 'fastai/learner.py'),
                                'fastai.learner.ValueMetric.value': ('learner.html#valuemetric.value', 'fastai/learner.py'),
                                'fastai.learner._ConstantFunc': ('learner.html#_constantfunc', 'fastai/learner.py'),
                                'fastai.learner._ConstantFunc.__call__': ('learner.html#_constantfunc.__call__', 'fastai/learner.py'),
                                'fastai.learner._ConstantFunc.__init__': ('learner.html#_constantfunc.__init__', 'fastai/learner.py'),
                                'fastai.learner._before_batch_cb': ('learner.html#_before_batch_cb', 'fastai/learner.py'),
                                'fastai.learner._cast_tensor': ('learner.html#_cast_tensor', 'fastai/learner.py'),
                                'fastai.learner._maybe_item': ('learner.html#_maybe_item', 'fastai/learner.py'),
                                'fastai.learner._try_concat': ('learner.html#_try_concat', 'fastai/learner.py'),
                                'fastai.learner.before_batch_cb': ('learner.html#before_batch_cb', 'fastai/learner.py'),
                                'fastai.learner.load_learner': ('learner.html#load_learner', 'fastai/learner.py'),
                                'fastai.learner.load_model': ('learner.html#load_model', 'fastai/learner.py'),
                                'fastai.learner.mk_metric': ('learner.html#mk_metric', 'fastai/learner.py'),
                                'fastai.learner.replacing_yield': ('learner.html#replacing_yield', 'fastai/learner.py'),
                                'fastai.learner.save_model': ('learner.html#save_model', 'fastai/learner.py')},
            'fastai.losses': { 'fastai.losses.BCELossFlat': ('losses.html#bcelossflat', 'fastai/losses.py'),
                               'fastai.losses.BCEWithLogitsLossFlat': ('losses.html#bcewithlogitslossflat', 'fastai/losses.py'),
                               'fastai.losses.BCEWithLogitsLossFlat.__init__': ( 'losses.html#bcewithlogitslossflat.__init__',
                                                                                 'fastai/losses.py'),
                               'fastai.losses.BCEWithLogitsLossFlat.activation': ( 'losses.html#bcewithlogitslossflat.activation',
                                                                                   'fastai/losses.py'),
                               'fastai.losses.BCEWithLogitsLossFlat.decodes': ( 'losses.html#bcewithlogitslossflat.decodes',
                                                                                'fastai/losses.py'),
                               'fastai.losses.BaseLoss': ('losses.html#baseloss', 'fastai/losses.py'),
                               'fastai.losses.BaseLoss.__call__': ('losses.html#baseloss.__call__', 'fastai/losses.py'),
                               'fastai.losses.BaseLoss.__init__': ('losses.html#baseloss.__init__', 'fastai/losses.py'),
                               'fastai.losses.BaseLoss.__repr__': ('losses.html#baseloss.__repr__', 'fastai/losses.py'),
                               'fastai.losses.BaseLoss._contiguous': ('losses.html#baseloss._contiguous', 'fastai/losses.py'),
                               'fastai.losses.BaseLoss.reduction': ('losses.html#baseloss.reduction', 'fastai/losses.py'),
                               'fastai.losses.BaseLoss.to': ('losses.html#baseloss.to', 'fastai/losses.py'),
                               'fastai.losses.CrossEntropyLossFlat': ('losses.html#crossentropylossflat', 'fastai/losses.py'),
                               'fastai.losses.CrossEntropyLossFlat.__init__': ( 'losses.html#crossentropylossflat.__init__',
                                                                                'fastai/losses.py'),
                               'fastai.losses.CrossEntropyLossFlat.activation': ( 'losses.html#crossentropylossflat.activation',
                                                                                  'fastai/losses.py'),
                               'fastai.losses.CrossEntropyLossFlat.decodes': ( 'losses.html#crossentropylossflat.decodes',
                                                                               'fastai/losses.py'),
                               'fastai.losses.DiceLoss': ('losses.html#diceloss', 'fastai/losses.py'),
                               'fastai.losses.DiceLoss.__call__': ('losses.html#diceloss.__call__', 'fastai/losses.py'),
                               'fastai.losses.DiceLoss.__init__': ('losses.html#diceloss.__init__', 'fastai/losses.py'),
                               'fastai.losses.DiceLoss._one_hot': ('losses.html#diceloss._one_hot', 'fastai/losses.py'),
                               'fastai.losses.DiceLoss.activation': ('losses.html#diceloss.activation', 'fastai/losses.py'),
                               'fastai.losses.DiceLoss.decodes': ('losses.html#diceloss.decodes', 'fastai/losses.py'),
                               'fastai.losses.FocalLoss': ('losses.html#focalloss', 'fastai/losses.py'),
                               'fastai.losses.FocalLoss.__init__': ('losses.html#focalloss.__init__', 'fastai/losses.py'),
                               'fastai.losses.FocalLoss.forward': ('losses.html#focalloss.forward', 'fastai/losses.py'),
                               'fastai.losses.FocalLossFlat': ('losses.html#focallossflat', 'fastai/losses.py'),
                               'fastai.losses.FocalLossFlat.__init__': ('losses.html#focallossflat.__init__', 'fastai/losses.py'),
                               'fastai.losses.FocalLossFlat.activation': ('losses.html#focallossflat.activation', 'fastai/losses.py'),
                               'fastai.losses.FocalLossFlat.decodes': ('losses.html#focallossflat.decodes', 'fastai/losses.py'),
                               'fastai.losses.L1LossFlat': ('losses.html#l1lossflat', 'fastai/losses.py'),
                               'fastai.losses.LabelSmoothingCrossEntropy': ('losses.html#labelsmoothingcrossentropy', 'fastai/losses.py'),
                               'fastai.losses.LabelSmoothingCrossEntropy.__init__': ( 'losses.html#labelsmoothingcrossentropy.__init__',
                                                                                      'fastai/losses.py'),
                               'fastai.losses.LabelSmoothingCrossEntropy.activation': ( 'losses.html#labelsmoothingcrossentropy.activation',
                                                                                        'fastai/losses.py'),
                               'fastai.losses.LabelSmoothingCrossEntropy.decodes': ( 'losses.html#labelsmoothingcrossentropy.decodes',
                                                                                     'fastai/losses.py'),
                               'fastai.losses.LabelSmoothingCrossEntropy.forward': ( 'losses.html#labelsmoothingcrossentropy.forward',
                                                                                     'fastai/losses.py'),
                               'fastai.losses.LabelSmoothingCrossEntropyFlat': ( 'losses.html#labelsmoothingcrossentropyflat',
                                                                                 'fastai/losses.py'),
                               'fastai.losses.LabelSmoothingCrossEntropyFlat.__init__': ( 'losses.html#labelsmoothingcrossentropyflat.__init__',
                                                                                          'fastai/losses.py'),
                               'fastai.losses.LabelSmoothingCrossEntropyFlat.activation': ( 'losses.html#labelsmoothingcrossentropyflat.activation',
                                                                                            'fastai/losses.py'),
                               'fastai.losses.LabelSmoothingCrossEntropyFlat.decodes': ( 'losses.html#labelsmoothingcrossentropyflat.decodes',
                                                                                         'fastai/losses.py'),
                               'fastai.losses.MSELossFlat': ('losses.html#mselossflat', 'fastai/losses.py')},
            'fastai.medical.imaging': { 'fastai.medical.imaging.DcmDataset.as_dict': ( 'medical.imaging.html#dcmdataset.as_dict',
                                                                                       'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.hist_scaled': ( 'medical.imaging.html#dcmdataset.hist_scaled',
                                                                                           'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.mask_from_blur': ( 'medical.imaging.html#dcmdataset.mask_from_blur',
                                                                                              'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.pct_in_window': ( 'medical.imaging.html#dcmdataset.pct_in_window',
                                                                                             'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.pixels': ( 'medical.imaging.html#dcmdataset.pixels',
                                                                                      'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.save_jpg': ( 'medical.imaging.html#dcmdataset.save_jpg',
                                                                                        'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.save_tif16': ( 'medical.imaging.html#dcmdataset.save_tif16',
                                                                                          'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.scaled_px': ( 'medical.imaging.html#dcmdataset.scaled_px',
                                                                                         'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.set_pixels': ( 'medical.imaging.html#dcmdataset.set_pixels',
                                                                                          'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.shape': ( 'medical.imaging.html#dcmdataset.shape',
                                                                                     'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.show': ( 'medical.imaging.html#dcmdataset.show',
                                                                                    'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.to_3chan': ( 'medical.imaging.html#dcmdataset.to_3chan',
                                                                                        'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.to_nchan': ( 'medical.imaging.html#dcmdataset.to_nchan',
                                                                                        'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.to_uint16': ( 'medical.imaging.html#dcmdataset.to_uint16',
                                                                                         'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.windowed': ( 'medical.imaging.html#dcmdataset.windowed',
                                                                                        'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.zoom': ( 'medical.imaging.html#dcmdataset.zoom',
                                                                                    'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DcmDataset.zoom_to': ( 'medical.imaging.html#dcmdataset.zoom_to',
                                                                                       'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DicomSegmentationDataLoaders': ( 'medical.imaging.html#dicomsegmentationdataloaders',
                                                                                                 'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.DicomSegmentationDataLoaders.from_label_func': ( 'medical.imaging.html#dicomsegmentationdataloaders.from_label_func',
                                                                                                                 'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.PILCTScan': ('medical.imaging.html#pilctscan', 'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.PILDicom': ('medical.imaging.html#pildicom', 'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.PILDicom.create': ( 'medical.imaging.html#pildicom.create',
                                                                                    'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.Path.dcmread': ( 'medical.imaging.html#path.dcmread',
                                                                                 'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.Path.png16read': ( 'medical.imaging.html#path.png16read',
                                                                                   'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.Tensor.freqhist_bins': ( 'medical.imaging.html#tensor.freqhist_bins',
                                                                                         'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.Tensor.hist_scaled': ( 'medical.imaging.html#tensor.hist_scaled',
                                                                                       'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.Tensor.hist_scaled_pt': ( 'medical.imaging.html#tensor.hist_scaled_pt',
                                                                                          'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.Tensor.mask_from_blur': ( 'medical.imaging.html#tensor.mask_from_blur',
                                                                                          'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.Tensor.save_jpg': ( 'medical.imaging.html#tensor.save_jpg',
                                                                                    'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.Tensor.save_tif16': ( 'medical.imaging.html#tensor.save_tif16',
                                                                                      'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.Tensor.to_3chan': ( 'medical.imaging.html#tensor.to_3chan',
                                                                                    'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.Tensor.to_nchan': ( 'medical.imaging.html#tensor.to_nchan',
                                                                                    'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.Tensor.to_uint16': ( 'medical.imaging.html#tensor.to_uint16',
                                                                                     'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.Tensor.windowed': ( 'medical.imaging.html#tensor.windowed',
                                                                                    'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.TensorCTScan': ( 'medical.imaging.html#tensorctscan',
                                                                                 'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.TensorDicom': ( 'medical.imaging.html#tensordicom',
                                                                                'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging._bbs2sizes': ( 'medical.imaging.html#_bbs2sizes',
                                                                               'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging._cast_dicom_special': ( 'medical.imaging.html#_cast_dicom_special',
                                                                                        'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging._dcm2dict': ('medical.imaging.html#_dcm2dict', 'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging._from_dicoms': ( 'medical.imaging.html#_from_dicoms',
                                                                                 'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging._px_bounds': ( 'medical.imaging.html#_px_bounds',
                                                                               'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging._split_elem': ( 'medical.imaging.html#_split_elem',
                                                                                'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.array_freqhist_bins': ( 'medical.imaging.html#array_freqhist_bins',
                                                                                        'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.crop_resize': ( 'medical.imaging.html#crop_resize',
                                                                                'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.gauss_blur2d': ( 'medical.imaging.html#gauss_blur2d',
                                                                                 'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.get_dicom_files': ( 'medical.imaging.html#get_dicom_files',
                                                                                    'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.mask2bbox': ('medical.imaging.html#mask2bbox', 'fastai/medical/imaging.py'),
                                        'fastai.medical.imaging.uniform_blur2d': ( 'medical.imaging.html#uniform_blur2d',
                                                                                   'fastai/medical/imaging.py')},
            'fastai.medical.text': {},
            'fastai.metrics': { 'fastai.metrics.APScoreBinary': ('metrics.html#apscorebinary', 'fastai/metrics.py'),
                                'fastai.metrics.APScoreMulti': ('metrics.html#apscoremulti', 'fastai/metrics.py'),
                                'fastai.metrics.AccumMetric': ('metrics.html#accummetric', 'fastai/metrics.py'),
                                'fastai.metrics.AccumMetric.__call__': ('metrics.html#accummetric.__call__', 'fastai/metrics.py'),
                                'fastai.metrics.AccumMetric.__init__': ('metrics.html#accummetric.__init__', 'fastai/metrics.py'),
                                'fastai.metrics.AccumMetric.accum_values': ('metrics.html#accummetric.accum_values', 'fastai/metrics.py'),
                                'fastai.metrics.AccumMetric.accumulate': ('metrics.html#accummetric.accumulate', 'fastai/metrics.py'),
                                'fastai.metrics.AccumMetric.name': ('metrics.html#accummetric.name', 'fastai/metrics.py'),
                                'fastai.metrics.AccumMetric.reset': ('metrics.html#accummetric.reset', 'fastai/metrics.py'),
                                'fastai.metrics.AccumMetric.value': ('metrics.html#accummetric.value', 'fastai/metrics.py'),
                                'fastai.metrics.BalancedAccuracy': ('metrics.html#balancedaccuracy', 'fastai/metrics.py'),
                                'fastai.metrics.BrierScore': ('metrics.html#brierscore', 'fastai/metrics.py'),
                                'fastai.metrics.BrierScoreMulti': ('metrics.html#brierscoremulti', 'fastai/metrics.py'),
                                'fastai.metrics.CohenKappa': ('metrics.html#cohenkappa', 'fastai/metrics.py'),
                                'fastai.metrics.CorpusBLEUMetric': ('metrics.html#corpusbleumetric', 'fastai/metrics.py'),
                                'fastai.metrics.CorpusBLEUMetric.NGram': ('metrics.html#corpusbleumetric.ngram', 'fastai/metrics.py'),
                                'fastai.metrics.CorpusBLEUMetric.__init__': ('metrics.html#corpusbleumetric.__init__', 'fastai/metrics.py'),
                                'fastai.metrics.CorpusBLEUMetric.accumulate': ( 'metrics.html#corpusbleumetric.accumulate',
                                                                                'fastai/metrics.py'),
                                'fastai.metrics.CorpusBLEUMetric.get_correct_ngrams': ( 'metrics.html#corpusbleumetric.get_correct_ngrams',
                                                                                        'fastai/metrics.py'),
                                'fastai.metrics.CorpusBLEUMetric.get_grams': ( 'metrics.html#corpusbleumetric.get_grams',
                                                                               'fastai/metrics.py'),
                                'fastai.metrics.CorpusBLEUMetric.reset': ('metrics.html#corpusbleumetric.reset', 'fastai/metrics.py'),
                                'fastai.metrics.CorpusBLEUMetric.value': ('metrics.html#corpusbleumetric.value', 'fastai/metrics.py'),
                                'fastai.metrics.Dice': ('metrics.html#dice', 'fastai/metrics.py'),
                                'fastai.metrics.Dice.__init__': ('metrics.html#dice.__init__', 'fastai/metrics.py'),
                                'fastai.metrics.Dice.accumulate': ('metrics.html#dice.accumulate', 'fastai/metrics.py'),
                                'fastai.metrics.Dice.reset': ('metrics.html#dice.reset', 'fastai/metrics.py'),
                                'fastai.metrics.Dice.value': ('metrics.html#dice.value', 'fastai/metrics.py'),
                                'fastai.metrics.DiceMulti': ('metrics.html#dicemulti', 'fastai/metrics.py'),
                                'fastai.metrics.DiceMulti.__init__': ('metrics.html#dicemulti.__init__', 'fastai/metrics.py'),
                                'fastai.metrics.DiceMulti.accumulate': ('metrics.html#dicemulti.accumulate', 'fastai/metrics.py'),
                                'fastai.metrics.DiceMulti.reset': ('metrics.html#dicemulti.reset', 'fastai/metrics.py'),
                                'fastai.metrics.DiceMulti.value': ('metrics.html#dicemulti.value', 'fastai/metrics.py'),
                                'fastai.metrics.ExplainedVariance': ('metrics.html#explainedvariance', 'fastai/metrics.py'),
                                'fastai.metrics.F1Score': ('metrics.html#f1score', 'fastai/metrics.py'),
                                'fastai.metrics.F1ScoreMulti': ('metrics.html#f1scoremulti', 'fastai/metrics.py'),
                                'fastai.metrics.FBeta': ('metrics.html#fbeta', 'fastai/metrics.py'),
                                'fastai.metrics.FBetaMulti': ('metrics.html#fbetamulti', 'fastai/metrics.py'),
                                'fastai.metrics.HammingLoss': ('metrics.html#hammingloss', 'fastai/metrics.py'),
                                'fastai.metrics.HammingLossMulti': ('metrics.html#hamminglossmulti', 'fastai/metrics.py'),
                                'fastai.metrics.Jaccard': ('metrics.html#jaccard', 'fastai/metrics.py'),
                                'fastai.metrics.JaccardCoeff': ('metrics.html#jaccardcoeff', 'fastai/metrics.py'),
                                'fastai.metrics.JaccardCoeff.value': ('metrics.html#jaccardcoeff.value', 'fastai/metrics.py'),
                                'fastai.metrics.JaccardCoeffMulti': ('metrics.html#jaccardcoeffmulti', 'fastai/metrics.py'),
                                'fastai.metrics.JaccardCoeffMulti.value': ('metrics.html#jaccardcoeffmulti.value', 'fastai/metrics.py'),
                                'fastai.metrics.JaccardMulti': ('metrics.html#jaccardmulti', 'fastai/metrics.py'),
                                'fastai.metrics.LossMetric': ('metrics.html#lossmetric', 'fastai/metrics.py'),
                                'fastai.metrics.LossMetric.__init__': ('metrics.html#lossmetric.__init__', 'fastai/metrics.py'),
                                'fastai.metrics.LossMetric.accumulate': ('metrics.html#lossmetric.accumulate', 'fastai/metrics.py'),
                                'fastai.metrics.LossMetric.name': ('metrics.html#lossmetric.name', 'fastai/metrics.py'),
                                'fastai.metrics.LossMetrics': ('metrics.html#lossmetrics', 'fastai/metrics.py'),
                                'fastai.metrics.MatthewsCorrCoef': ('metrics.html#matthewscorrcoef', 'fastai/metrics.py'),
                                'fastai.metrics.MatthewsCorrCoefMulti': ('metrics.html#matthewscorrcoefmulti', 'fastai/metrics.py'),
                                'fastai.metrics.PearsonCorrCoef': ('metrics.html#pearsoncorrcoef', 'fastai/metrics.py'),
                                'fastai.metrics.Perplexity': ('metrics.html#perplexity', 'fastai/metrics.py'),
                                'fastai.metrics.Perplexity.name': ('metrics.html#perplexity.name', 'fastai/metrics.py'),
                                'fastai.metrics.Perplexity.value': ('metrics.html#perplexity.value', 'fastai/metrics.py'),
                                'fastai.metrics.Precision': ('metrics.html#precision', 'fastai/metrics.py'),
                                'fastai.metrics.PrecisionMulti': ('metrics.html#precisionmulti', 'fastai/metrics.py'),
                                'fastai.metrics.R2Score': ('metrics.html#r2score', 'fastai/metrics.py'),
                                'fastai.metrics.Recall': ('metrics.html#recall', 'fastai/metrics.py'),
                                'fastai.metrics.RecallMulti': ('metrics.html#recallmulti', 'fastai/metrics.py'),
                                'fastai.metrics.RocAuc': ('metrics.html#rocauc', 'fastai/metrics.py'),
                                'fastai.metrics.RocAucBinary': ('metrics.html#rocaucbinary', 'fastai/metrics.py'),
                                'fastai.metrics.RocAucMulti': ('metrics.html#rocaucmulti', 'fastai/metrics.py'),
                                'fastai.metrics.SpearmanCorrCoef': ('metrics.html#spearmancorrcoef', 'fastai/metrics.py'),
                                'fastai.metrics._exp_rmspe': ('metrics.html#_exp_rmspe', 'fastai/metrics.py'),
                                'fastai.metrics._rmse': ('metrics.html#_rmse', 'fastai/metrics.py'),
                                'fastai.metrics.accuracy': ('metrics.html#accuracy', 'fastai/metrics.py'),
                                'fastai.metrics.accuracy_multi': ('metrics.html#accuracy_multi', 'fastai/metrics.py'),
                                'fastai.metrics.error_rate': ('metrics.html#error_rate', 'fastai/metrics.py'),
                                'fastai.metrics.foreground_acc': ('metrics.html#foreground_acc', 'fastai/metrics.py'),
                                'fastai.metrics.mae': ('metrics.html#mae', 'fastai/metrics.py'),
                                'fastai.metrics.mse': ('metrics.html#mse', 'fastai/metrics.py'),
                                'fastai.metrics.msle': ('metrics.html#msle', 'fastai/metrics.py'),
                                'fastai.metrics.optim_metric': ('metrics.html#optim_metric', 'fastai/metrics.py'),
                                'fastai.metrics.skm_to_fastai': ('metrics.html#skm_to_fastai', 'fastai/metrics.py'),
                                'fastai.metrics.top_k_accuracy': ('metrics.html#top_k_accuracy', 'fastai/metrics.py')},
            'fastai.optimizer': { 'fastai.optimizer.Adam': ('optimizer.html#adam', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Lamb': ('optimizer.html#lamb', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Larc': ('optimizer.html#larc', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Lookahead': ('optimizer.html#lookahead', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Lookahead.__init__': ('optimizer.html#lookahead.__init__', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Lookahead._copy_weights': ( 'optimizer.html#lookahead._copy_weights',
                                                                                'fastai/optimizer.py'),
                                  'fastai.optimizer.Lookahead._init_state': ('optimizer.html#lookahead._init_state', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Lookahead.clear_state': ('optimizer.html#lookahead.clear_state', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Lookahead.load_state_dict': ( 'optimizer.html#lookahead.load_state_dict',
                                                                                  'fastai/optimizer.py'),
                                  'fastai.optimizer.Lookahead.param_lists': ('optimizer.html#lookahead.param_lists', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Lookahead.state_dict': ('optimizer.html#lookahead.state_dict', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Lookahead.step': ('optimizer.html#lookahead.step', 'fastai/optimizer.py'),
                                  'fastai.optimizer.OptimWrapper': ('optimizer.html#optimwrapper', 'fastai/optimizer.py'),
                                  'fastai.optimizer.OptimWrapper.__init__': ('optimizer.html#optimwrapper.__init__', 'fastai/optimizer.py'),
                                  'fastai.optimizer.OptimWrapper._set_hyper': ( 'optimizer.html#optimwrapper._set_hyper',
                                                                                'fastai/optimizer.py'),
                                  'fastai.optimizer.OptimWrapper.clear_state': ( 'optimizer.html#optimwrapper.clear_state',
                                                                                 'fastai/optimizer.py'),
                                  'fastai.optimizer.OptimWrapper.hypers': ('optimizer.html#optimwrapper.hypers', 'fastai/optimizer.py'),
                                  'fastai.optimizer.OptimWrapper.param_lists': ( 'optimizer.html#optimwrapper.param_lists',
                                                                                 'fastai/optimizer.py'),
                                  'fastai.optimizer.Optimizer': ('optimizer.html#optimizer', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Optimizer.__init__': ('optimizer.html#optimizer.__init__', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Optimizer.clear_state': ('optimizer.html#optimizer.clear_state', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Optimizer.load_state_dict': ( 'optimizer.html#optimizer.load_state_dict',
                                                                                  'fastai/optimizer.py'),
                                  'fastai.optimizer.Optimizer.state_dict': ('optimizer.html#optimizer.state_dict', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Optimizer.step': ('optimizer.html#optimizer.step', 'fastai/optimizer.py'),
                                  'fastai.optimizer.Optimizer.zero_grad': ('optimizer.html#optimizer.zero_grad', 'fastai/optimizer.py'),
                                  'fastai.optimizer.QHAdam': ('optimizer.html#qhadam', 'fastai/optimizer.py'),
                                  'fastai.optimizer.RAdam': ('optimizer.html#radam', 'fastai/optimizer.py'),
                                  'fastai.optimizer.RMSProp': ('optimizer.html#rmsprop', 'fastai/optimizer.py'),
                                  'fastai.optimizer.SGD': ('optimizer.html#sgd', 'fastai/optimizer.py'),
                                  'fastai.optimizer._BaseOptimizer': ('optimizer.html#_baseoptimizer', 'fastai/optimizer.py'),
                                  'fastai.optimizer._BaseOptimizer._set_hyper': ( 'optimizer.html#_baseoptimizer._set_hyper',
                                                                                  'fastai/optimizer.py'),
                                  'fastai.optimizer._BaseOptimizer._set_require_grad': ( 'optimizer.html#_baseoptimizer._set_require_grad',
                                                                                         'fastai/optimizer.py'),
                                  'fastai.optimizer._BaseOptimizer.all_params': ( 'optimizer.html#_baseoptimizer.all_params',
                                                                                  'fastai/optimizer.py'),
                                  'fastai.optimizer._BaseOptimizer.freeze': ('optimizer.html#_baseoptimizer.freeze', 'fastai/optimizer.py'),
                                  'fastai.optimizer._BaseOptimizer.freeze_to': ( 'optimizer.html#_baseoptimizer.freeze_to',
                                                                                 'fastai/optimizer.py'),
                                  'fastai.optimizer._BaseOptimizer.param_groups': ( 'optimizer.html#_baseoptimizer.param_groups',
                                                                                    'fastai/optimizer.py'),
                                  'fastai.optimizer._BaseOptimizer.set_hyper': ( 'optimizer.html#_baseoptimizer.set_hyper',
                                                                                 'fastai/optimizer.py'),
                                  'fastai.optimizer._BaseOptimizer.set_hypers': ( 'optimizer.html#_baseoptimizer.set_hypers',
                                                                                  'fastai/optimizer.py'),
                                  'fastai.optimizer._BaseOptimizer.unfreeze': ( 'optimizer.html#_baseoptimizer.unfreeze',
                                                                                'fastai/optimizer.py'),
                                  'fastai.optimizer._convert_params': ('optimizer.html#_convert_params', 'fastai/optimizer.py'),
                                  'fastai.optimizer._update': ('optimizer.html#_update', 'fastai/optimizer.py'),
                                  'fastai.optimizer.adam_step': ('optimizer.html#adam_step', 'fastai/optimizer.py'),
                                  'fastai.optimizer.average_grad': ('optimizer.html#average_grad', 'fastai/optimizer.py'),
                                  'fastai.optimizer.average_sqr_grad': ('optimizer.html#average_sqr_grad', 'fastai/optimizer.py'),
                                  'fastai.optimizer.debias': ('optimizer.html#debias', 'fastai/optimizer.py'),
                                  'fastai.optimizer.detuplify_pg': ('optimizer.html#detuplify_pg', 'fastai/optimizer.py'),
                                  'fastai.optimizer.l2_reg': ('optimizer.html#l2_reg', 'fastai/optimizer.py'),
                                  'fastai.optimizer.lamb_step': ('optimizer.html#lamb_step', 'fastai/optimizer.py'),
                                  'fastai.optimizer.larc_layer_lr': ('optimizer.html#larc_layer_lr', 'fastai/optimizer.py'),
                                  'fastai.optimizer.larc_step': ('optimizer.html#larc_step', 'fastai/optimizer.py'),
                                  'fastai.optimizer.momentum_step': ('optimizer.html#momentum_step', 'fastai/optimizer.py'),
                                  'fastai.optimizer.qhadam_step': ('optimizer.html#qhadam_step', 'fastai/optimizer.py'),
                                  'fastai.optimizer.radam_step': ('optimizer.html#radam_step', 'fastai/optimizer.py'),
                                  'fastai.optimizer.ranger': ('optimizer.html#ranger', 'fastai/optimizer.py'),
                                  'fastai.optimizer.rms_prop_step': ('optimizer.html#rms_prop_step', 'fastai/optimizer.py'),
                                  'fastai.optimizer.set_item_pg': ('optimizer.html#set_item_pg', 'fastai/optimizer.py'),
                                  'fastai.optimizer.sgd_step': ('optimizer.html#sgd_step', 'fastai/optimizer.py'),
                                  'fastai.optimizer.step_stat': ('optimizer.html#step_stat', 'fastai/optimizer.py'),
                                  'fastai.optimizer.weight_decay': ('optimizer.html#weight_decay', 'fastai/optimizer.py')},
            'fastai.tabular.all': {},
            'fastai.tabular.core': { 'fastai.tabular.core.Categorify': ('tabular.core.html#categorify', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Categorify.__getitem__': ( 'tabular.core.html#categorify.__getitem__',
                                                                                     'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Categorify.decodes': ( 'tabular.core.html#categorify.decodes',
                                                                                 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Categorify.encodes': ( 'tabular.core.html#categorify.encodes',
                                                                                 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Categorify.setups': ( 'tabular.core.html#categorify.setups',
                                                                                'fastai/tabular/core.py'),
                                     'fastai.tabular.core.FillMissing': ('tabular.core.html#fillmissing', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.FillMissing.__init__': ( 'tabular.core.html#fillmissing.__init__',
                                                                                   'fastai/tabular/core.py'),
                                     'fastai.tabular.core.FillMissing.encodes': ( 'tabular.core.html#fillmissing.encodes',
                                                                                  'fastai/tabular/core.py'),
                                     'fastai.tabular.core.FillMissing.setups': ( 'tabular.core.html#fillmissing.setups',
                                                                                 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.FillStrategy': ('tabular.core.html#fillstrategy', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.FillStrategy.constant': ( 'tabular.core.html#fillstrategy.constant',
                                                                                    'fastai/tabular/core.py'),
                                     'fastai.tabular.core.FillStrategy.median': ( 'tabular.core.html#fillstrategy.median',
                                                                                  'fastai/tabular/core.py'),
                                     'fastai.tabular.core.FillStrategy.mode': ( 'tabular.core.html#fillstrategy.mode',
                                                                                'fastai/tabular/core.py'),
                                     'fastai.tabular.core.ReadTabBatch': ('tabular.core.html#readtabbatch', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.ReadTabBatch.__init__': ( 'tabular.core.html#readtabbatch.__init__',
                                                                                    'fastai/tabular/core.py'),
                                     'fastai.tabular.core.ReadTabBatch.decodes': ( 'tabular.core.html#readtabbatch.decodes',
                                                                                   'fastai/tabular/core.py'),
                                     'fastai.tabular.core.ReadTabBatch.encodes': ( 'tabular.core.html#readtabbatch.encodes',
                                                                                   'fastai/tabular/core.py'),
                                     'fastai.tabular.core.TabDataLoader': ('tabular.core.html#tabdataloader', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.TabDataLoader.__init__': ( 'tabular.core.html#tabdataloader.__init__',
                                                                                     'fastai/tabular/core.py'),
                                     'fastai.tabular.core.TabDataLoader.create_batch': ( 'tabular.core.html#tabdataloader.create_batch',
                                                                                         'fastai/tabular/core.py'),
                                     'fastai.tabular.core.TabDataLoader.do_item': ( 'tabular.core.html#tabdataloader.do_item',
                                                                                    'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular': ('tabular.core.html#tabular', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.__init__': ( 'tabular.core.html#tabular.__init__',
                                                                               'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.all_col_names': ( 'tabular.core.html#tabular.all_col_names',
                                                                                    'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.copy': ('tabular.core.html#tabular.copy', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.decode': ('tabular.core.html#tabular.decode', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.decode_row': ( 'tabular.core.html#tabular.decode_row',
                                                                                 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.iloc': ('tabular.core.html#tabular.iloc', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.loc': ('tabular.core.html#tabular.loc', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.n_subsets': ( 'tabular.core.html#tabular.n_subsets',
                                                                                'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.new': ('tabular.core.html#tabular.new', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.new_empty': ( 'tabular.core.html#tabular.new_empty',
                                                                                'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.process': ('tabular.core.html#tabular.process', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.setup': ('tabular.core.html#tabular.setup', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.show': ('tabular.core.html#tabular.show', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.subset': ('tabular.core.html#tabular.subset', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.targ': ('tabular.core.html#tabular.targ', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.to_device': ( 'tabular.core.html#tabular.to_device',
                                                                                'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.x_names': ('tabular.core.html#tabular.x_names', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.Tabular.y': ('tabular.core.html#tabular.y', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.TabularPandas': ('tabular.core.html#tabularpandas', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.TabularPandas.transform': ( 'tabular.core.html#tabularpandas.transform',
                                                                                      'fastai/tabular/core.py'),
                                     'fastai.tabular.core.TabularProc': ('tabular.core.html#tabularproc', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.TabularProc.name': ( 'tabular.core.html#tabularproc.name',
                                                                               'fastai/tabular/core.py'),
                                     'fastai.tabular.core.TabularProc.setup': ( 'tabular.core.html#tabularproc.setup',
                                                                                'fastai/tabular/core.py'),
                                     'fastai.tabular.core._TabIloc': ('tabular.core.html#_tabiloc', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core._TabIloc.__getitem__': ( 'tabular.core.html#_tabiloc.__getitem__',
                                                                                   'fastai/tabular/core.py'),
                                     'fastai.tabular.core._TabIloc.__init__': ( 'tabular.core.html#_tabiloc.__init__',
                                                                                'fastai/tabular/core.py'),
                                     'fastai.tabular.core._add_prop': ('tabular.core.html#_add_prop', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core._apply_cats': ('tabular.core.html#_apply_cats', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core._decode_cats': ('tabular.core.html#_decode_cats', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core._get_elapsed': ('tabular.core.html#_get_elapsed', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core._maybe_expand': ('tabular.core.html#_maybe_expand', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.add_datepart': ('tabular.core.html#add_datepart', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.add_elapsed_times': ( 'tabular.core.html#add_elapsed_times',
                                                                                'fastai/tabular/core.py'),
                                     'fastai.tabular.core.cont_cat_split': ('tabular.core.html#cont_cat_split', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.decodes': ('tabular.core.html#decodes', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.df_shrink': ('tabular.core.html#df_shrink', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.df_shrink_dtypes': ( 'tabular.core.html#df_shrink_dtypes',
                                                                               'fastai/tabular/core.py'),
                                     'fastai.tabular.core.encodes': ('tabular.core.html#encodes', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.make_date': ('tabular.core.html#make_date', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.setups': ('tabular.core.html#setups', 'fastai/tabular/core.py'),
                                     'fastai.tabular.core.show_batch': ('tabular.core.html#show_batch', 'fastai/tabular/core.py')},
            'fastai.tabular.data': { 'fastai.tabular.data.TabularDataLoaders': ( 'tabular.data.html#tabulardataloaders',
                                                                                 'fastai/tabular/data.py'),
                                     'fastai.tabular.data.TabularDataLoaders.from_csv': ( 'tabular.data.html#tabulardataloaders.from_csv',
                                                                                          'fastai/tabular/data.py'),
                                     'fastai.tabular.data.TabularDataLoaders.from_df': ( 'tabular.data.html#tabulardataloaders.from_df',
                                                                                         'fastai/tabular/data.py'),
                                     'fastai.tabular.data.TabularDataLoaders.test_dl': ( 'tabular.data.html#tabulardataloaders.test_dl',
                                                                                         'fastai/tabular/data.py')},
            'fastai.tabular.learner': { 'fastai.tabular.learner.TabularLearner': ( 'tabular.learner.html#tabularlearner',
                                                                                   'fastai/tabular/learner.py'),
                                        'fastai.tabular.learner.TabularLearner.predict': ( 'tabular.learner.html#tabularlearner.predict',
                                                                                           'fastai/tabular/learner.py'),
                                        'fastai.tabular.learner.show_results': ( 'tabular.learner.html#show_results',
                                                                                 'fastai/tabular/learner.py'),
                                        'fastai.tabular.learner.tabular_learner': ( 'tabular.learner.html#tabular_learner',
                                                                                    'fastai/tabular/learner.py')},
            'fastai.tabular.model': { 'fastai.tabular.model.TabularModel': ('tabular.model.html#tabularmodel', 'fastai/tabular/model.py'),
                                      'fastai.tabular.model.TabularModel.__init__': ( 'tabular.model.html#tabularmodel.__init__',
                                                                                      'fastai/tabular/model.py'),
                                      'fastai.tabular.model.TabularModel.forward': ( 'tabular.model.html#tabularmodel.forward',
                                                                                     'fastai/tabular/model.py'),
                                      'fastai.tabular.model._one_emb_sz': ('tabular.model.html#_one_emb_sz', 'fastai/tabular/model.py'),
                                      'fastai.tabular.model.emb_sz_rule': ('tabular.model.html#emb_sz_rule', 'fastai/tabular/model.py'),
                                      'fastai.tabular.model.get_emb_sz': ('tabular.model.html#get_emb_sz', 'fastai/tabular/model.py'),
                                      'fastai.tabular.model.tabular_config': ( 'tabular.model.html#tabular_config',
                                                                               'fastai/tabular/model.py')},
            'fastai.test_utils': { 'fastai.test_utils.RegModel': ('test_utils.html#regmodel', 'fastai/test_utils.py'),
                                   'fastai.test_utils.RegModel.__init__': ('test_utils.html#regmodel.__init__', 'fastai/test_utils.py'),
                                   'fastai.test_utils.RegModel.forward': ('test_utils.html#regmodel.forward', 'fastai/test_utils.py'),
                                   'fastai.test_utils.VerboseCallback': ('test_utils.html#verbosecallback', 'fastai/test_utils.py'),
                                   'fastai.test_utils.VerboseCallback.__call__': ( 'test_utils.html#verbosecallback.__call__',
                                                                                   'fastai/test_utils.py'),
                                   'fastai.test_utils.get_env': ('test_utils.html#get_env', 'fastai/test_utils.py'),
                                   'fastai.test_utils.nvidia_mem': ('test_utils.html#nvidia_mem', 'fastai/test_utils.py'),
                                   'fastai.test_utils.nvidia_smi': ('test_utils.html#nvidia_smi', 'fastai/test_utils.py'),
                                   'fastai.test_utils.show_install': ('test_utils.html#show_install', 'fastai/test_utils.py'),
                                   'fastai.test_utils.synth_dbunch': ('test_utils.html#synth_dbunch', 'fastai/test_utils.py'),
                                   'fastai.test_utils.synth_learner': ('test_utils.html#synth_learner', 'fastai/test_utils.py'),
                                   'fastai.test_utils.try_import': ('test_utils.html#try_import', 'fastai/test_utils.py')},
            'fastai.text.all': {},
            'fastai.text.core': { 'fastai.text.core.BaseTokenizer': ('text.core.html#basetokenizer', 'fastai/text/core.py'),
                                  'fastai.text.core.BaseTokenizer.__call__': ( 'text.core.html#basetokenizer.__call__',
                                                                               'fastai/text/core.py'),
                                  'fastai.text.core.BaseTokenizer.__init__': ( 'text.core.html#basetokenizer.__init__',
                                                                               'fastai/text/core.py'),
                                  'fastai.text.core.SentencePieceTokenizer': ( 'text.core.html#sentencepiecetokenizer',
                                                                               'fastai/text/core.py'),
                                  'fastai.text.core.SentencePieceTokenizer.__call__': ( 'text.core.html#sentencepiecetokenizer.__call__',
                                                                                        'fastai/text/core.py'),
                                  'fastai.text.core.SentencePieceTokenizer.__init__': ( 'text.core.html#sentencepiecetokenizer.__init__',
                                                                                        'fastai/text/core.py'),
                                  'fastai.text.core.SentencePieceTokenizer._get_vocab_sz': ( 'text.core.html#sentencepiecetokenizer._get_vocab_sz',
                                                                                             'fastai/text/core.py'),
                                  'fastai.text.core.SentencePieceTokenizer.setup': ( 'text.core.html#sentencepiecetokenizer.setup',
                                                                                     'fastai/text/core.py'),
                                  'fastai.text.core.SentencePieceTokenizer.train': ( 'text.core.html#sentencepiecetokenizer.train',
                                                                                     'fastai/text/core.py'),
                                  'fastai.text.core.SpacyTokenizer': ('text.core.html#spacytokenizer', 'fastai/text/core.py'),
                                  'fastai.text.core.SpacyTokenizer.__call__': ( 'text.core.html#spacytokenizer.__call__',
                                                                                'fastai/text/core.py'),
                                  'fastai.text.core.SpacyTokenizer.__init__': ( 'text.core.html#spacytokenizer.__init__',
                                                                                'fastai/text/core.py'),
                                  'fastai.text.core.TokenizeWithRules': ('text.core.html#tokenizewithrules', 'fastai/text/core.py'),
                                  'fastai.text.core.TokenizeWithRules.__call__': ( 'text.core.html#tokenizewithrules.__call__',
                                                                                   'fastai/text/core.py'),
                                  'fastai.text.core.TokenizeWithRules.__init__': ( 'text.core.html#tokenizewithrules.__init__',
                                                                                   'fastai/text/core.py'),
                                  'fastai.text.core.Tokenizer': ('text.core.html#tokenizer', 'fastai/text/core.py'),
                                  'fastai.text.core.Tokenizer.__init__': ('text.core.html#tokenizer.__init__', 'fastai/text/core.py'),
                                  'fastai.text.core.Tokenizer._tokenize1': ('text.core.html#tokenizer._tokenize1', 'fastai/text/core.py'),
                                  'fastai.text.core.Tokenizer.decodes': ('text.core.html#tokenizer.decodes', 'fastai/text/core.py'),
                                  'fastai.text.core.Tokenizer.encodes': ('text.core.html#tokenizer.encodes', 'fastai/text/core.py'),
                                  'fastai.text.core.Tokenizer.from_df': ('text.core.html#tokenizer.from_df', 'fastai/text/core.py'),
                                  'fastai.text.core.Tokenizer.from_folder': ('text.core.html#tokenizer.from_folder', 'fastai/text/core.py'),
                                  'fastai.text.core.Tokenizer.get_lengths': ('text.core.html#tokenizer.get_lengths', 'fastai/text/core.py'),
                                  'fastai.text.core.Tokenizer.setups': ('text.core.html#tokenizer.setups', 'fastai/text/core.py'),
                                  'fastai.text.core._join_texts': ('text.core.html#_join_texts', 'fastai/text/core.py'),
                                  'fastai.text.core._tokenize_files': ('text.core.html#_tokenize_files', 'fastai/text/core.py'),
                                  'fastai.text.core.fix_html': ('text.core.html#fix_html', 'fastai/text/core.py'),
                                  'fastai.text.core.load_tokenized_csv': ('text.core.html#load_tokenized_csv', 'fastai/text/core.py'),
                                  'fastai.text.core.lowercase': ('text.core.html#lowercase', 'fastai/text/core.py'),
                                  'fastai.text.core.parallel_tokenize': ('text.core.html#parallel_tokenize', 'fastai/text/core.py'),
                                  'fastai.text.core.replace_all_caps': ('text.core.html#replace_all_caps', 'fastai/text/core.py'),
                                  'fastai.text.core.replace_maj': ('text.core.html#replace_maj', 'fastai/text/core.py'),
                                  'fastai.text.core.replace_rep': ('text.core.html#replace_rep', 'fastai/text/core.py'),
                                  'fastai.text.core.replace_space': ('text.core.html#replace_space', 'fastai/text/core.py'),
                                  'fastai.text.core.replace_wrep': ('text.core.html#replace_wrep', 'fastai/text/core.py'),
                                  'fastai.text.core.rm_useless_spaces': ('text.core.html#rm_useless_spaces', 'fastai/text/core.py'),
                                  'fastai.text.core.spec_add_spaces': ('text.core.html#spec_add_spaces', 'fastai/text/core.py'),
                                  'fastai.text.core.tokenize1': ('text.core.html#tokenize1', 'fastai/text/core.py'),
                                  'fastai.text.core.tokenize_csv': ('text.core.html#tokenize_csv', 'fastai/text/core.py'),
                                  'fastai.text.core.tokenize_df': ('text.core.html#tokenize_df', 'fastai/text/core.py'),
                                  'fastai.text.core.tokenize_files': ('text.core.html#tokenize_files', 'fastai/text/core.py'),
                                  'fastai.text.core.tokenize_folder': ('text.core.html#tokenize_folder', 'fastai/text/core.py'),
                                  'fastai.text.core.tokenize_texts': ('text.core.html#tokenize_texts', 'fastai/text/core.py')},
            'fastai.text.data': { 'fastai.text.data.LMDataLoader': ('text.data.html#lmdataloader', 'fastai/text/data.py'),
                                  'fastai.text.data.LMDataLoader.__init__': ('text.data.html#lmdataloader.__init__', 'fastai/text/data.py'),
                                  'fastai.text.data.LMDataLoader.create_item': ( 'text.data.html#lmdataloader.create_item',
                                                                                 'fastai/text/data.py'),
                                  'fastai.text.data.LMDataLoader.make_chunks': ( 'text.data.html#lmdataloader.make_chunks',
                                                                                 'fastai/text/data.py'),
                                  'fastai.text.data.LMDataLoader.new': ('text.data.html#lmdataloader.new', 'fastai/text/data.py'),
                                  'fastai.text.data.LMDataLoader.shuffle_fn': ( 'text.data.html#lmdataloader.shuffle_fn',
                                                                                'fastai/text/data.py'),
                                  'fastai.text.data.LMTensorText': ('text.data.html#lmtensortext', 'fastai/text/data.py'),
                                  'fastai.text.data.Numericalize': ('text.data.html#numericalize', 'fastai/text/data.py'),
                                  'fastai.text.data.Numericalize.__init__': ('text.data.html#numericalize.__init__', 'fastai/text/data.py'),
                                  'fastai.text.data.Numericalize.decodes': ('text.data.html#numericalize.decodes', 'fastai/text/data.py'),
                                  'fastai.text.data.Numericalize.encodes': ('text.data.html#numericalize.encodes', 'fastai/text/data.py'),
                                  'fastai.text.data.Numericalize.setups': ('text.data.html#numericalize.setups', 'fastai/text/data.py'),
                                  'fastai.text.data.Pad_Chunk': ('text.data.html#pad_chunk', 'fastai/text/data.py'),
                                  'fastai.text.data.Pad_Chunk.__call__': ('text.data.html#pad_chunk.__call__', 'fastai/text/data.py'),
                                  'fastai.text.data.Pad_Chunk.__init__': ('text.data.html#pad_chunk.__init__', 'fastai/text/data.py'),
                                  'fastai.text.data.Pad_Chunk.before_call': ('text.data.html#pad_chunk.before_call', 'fastai/text/data.py'),
                                  'fastai.text.data.Pad_Chunk.decodes': ('text.data.html#pad_chunk.decodes', 'fastai/text/data.py'),
                                  'fastai.text.data.Pad_Chunk.encodes': ('text.data.html#pad_chunk.encodes', 'fastai/text/data.py'),
                                  'fastai.text.data.Pad_Input': ('text.data.html#pad_input', 'fastai/text/data.py'),
                                  'fastai.text.data.Pad_Input.decodes': ('text.data.html#pad_input.decodes', 'fastai/text/data.py'),
                                  'fastai.text.data.Pad_Input.encodes': ('text.data.html#pad_input.encodes', 'fastai/text/data.py'),
                                  'fastai.text.data.SortedDL': ('text.data.html#sorteddl', 'fastai/text/data.py'),
                                  'fastai.text.data.SortedDL.__init__': ('text.data.html#sorteddl.__init__', 'fastai/text/data.py'),
                                  'fastai.text.data.SortedDL.get_idxs': ('text.data.html#sorteddl.get_idxs', 'fastai/text/data.py'),
                                  'fastai.text.data.SortedDL.new': ('text.data.html#sorteddl.new', 'fastai/text/data.py'),
                                  'fastai.text.data.SortedDL.shuffle_fn': ('text.data.html#sorteddl.shuffle_fn', 'fastai/text/data.py'),
                                  'fastai.text.data.TensorText': ('text.data.html#tensortext', 'fastai/text/data.py'),
                                  'fastai.text.data.TextBlock': ('text.data.html#textblock', 'fastai/text/data.py'),
                                  'fastai.text.data.TextBlock.__init__': ('text.data.html#textblock.__init__', 'fastai/text/data.py'),
                                  'fastai.text.data.TextBlock.from_df': ('text.data.html#textblock.from_df', 'fastai/text/data.py'),
                                  'fastai.text.data.TextBlock.from_folder': ('text.data.html#textblock.from_folder', 'fastai/text/data.py'),
                                  'fastai.text.data.TextDataLoaders': ('text.data.html#textdataloaders', 'fastai/text/data.py'),
                                  'fastai.text.data.TextDataLoaders.from_csv': ( 'text.data.html#textdataloaders.from_csv',
                                                                                 'fastai/text/data.py'),
                                  'fastai.text.data.TextDataLoaders.from_df': ( 'text.data.html#textdataloaders.from_df',
                                                                                'fastai/text/data.py'),
                                  'fastai.text.data.TextDataLoaders.from_folder': ( 'text.data.html#textdataloaders.from_folder',
                                                                                    'fastai/text/data.py'),
                                  'fastai.text.data._default_sort': ('text.data.html#_default_sort', 'fastai/text/data.py'),
                                  'fastai.text.data._get_lengths': ('text.data.html#_get_lengths', 'fastai/text/data.py'),
                                  'fastai.text.data._get_tokenizer': ('text.data.html#_get_tokenizer', 'fastai/text/data.py'),
                                  'fastai.text.data._maybe_first': ('text.data.html#_maybe_first', 'fastai/text/data.py'),
                                  'fastai.text.data.make_vocab': ('text.data.html#make_vocab', 'fastai/text/data.py'),
                                  'fastai.text.data.pad_chunk': ('text.data.html#pad_chunk', 'fastai/text/data.py'),
                                  'fastai.text.data.pad_input_chunk': ('text.data.html#pad_input_chunk', 'fastai/text/data.py'),
                                  'fastai.text.data.reverse_text': ('text.data.html#reverse_text', 'fastai/text/data.py'),
                                  'fastai.text.data.show_batch': ('text.data.html#show_batch', 'fastai/text/data.py')},
            'fastai.text.learner': { 'fastai.text.learner.LMLearner': ('text.learner.html#lmlearner', 'fastai/text/learner.py'),
                                     'fastai.text.learner.LMLearner.get_preds': ( 'text.learner.html#lmlearner.get_preds',
                                                                                  'fastai/text/learner.py'),
                                     'fastai.text.learner.LMLearner.predict': ( 'text.learner.html#lmlearner.predict',
                                                                                'fastai/text/learner.py'),
                                     'fastai.text.learner.TextLearner': ('text.learner.html#textlearner', 'fastai/text/learner.py'),
                                     'fastai.text.learner.TextLearner.__init__': ( 'text.learner.html#textlearner.__init__',
                                                                                   'fastai/text/learner.py'),
                                     'fastai.text.learner.TextLearner.load': ( 'text.learner.html#textlearner.load',
                                                                               'fastai/text/learner.py'),
                                     'fastai.text.learner.TextLearner.load_encoder': ( 'text.learner.html#textlearner.load_encoder',
                                                                                       'fastai/text/learner.py'),
                                     'fastai.text.learner.TextLearner.load_pretrained': ( 'text.learner.html#textlearner.load_pretrained',
                                                                                          'fastai/text/learner.py'),
                                     'fastai.text.learner.TextLearner.save_encoder': ( 'text.learner.html#textlearner.save_encoder',
                                                                                       'fastai/text/learner.py'),
                                     'fastai.text.learner._get_text_vocab': ('text.learner.html#_get_text_vocab', 'fastai/text/learner.py'),
                                     'fastai.text.learner._rm_module': ('text.learner.html#_rm_module', 'fastai/text/learner.py'),
                                     'fastai.text.learner.clean_raw_keys': ('text.learner.html#clean_raw_keys', 'fastai/text/learner.py'),
                                     'fastai.text.learner.decode_spec_tokens': ( 'text.learner.html#decode_spec_tokens',
                                                                                 'fastai/text/learner.py'),
                                     'fastai.text.learner.language_model_learner': ( 'text.learner.html#language_model_learner',
                                                                                     'fastai/text/learner.py'),
                                     'fastai.text.learner.load_ignore_keys': ( 'text.learner.html#load_ignore_keys',
                                                                               'fastai/text/learner.py'),
                                     'fastai.text.learner.load_model_text': ('text.learner.html#load_model_text', 'fastai/text/learner.py'),
                                     'fastai.text.learner.match_embeds': ('text.learner.html#match_embeds', 'fastai/text/learner.py'),
                                     'fastai.text.learner.plot_top_losses': ('text.learner.html#plot_top_losses', 'fastai/text/learner.py'),
                                     'fastai.text.learner.show_results': ('text.learner.html#show_results', 'fastai/text/learner.py'),
                                     'fastai.text.learner.text_classifier_learner': ( 'text.learner.html#text_classifier_learner',
                                                                                      'fastai/text/learner.py')},
            'fastai.text.models.awdlstm': { 'fastai.text.models.awdlstm.AWD_LSTM': ( 'text.models.awdlstm.html#awd_lstm',
                                                                                     'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.AWD_LSTM.__init__': ( 'text.models.awdlstm.html#awd_lstm.__init__',
                                                                                              'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.AWD_LSTM._change_hidden': ( 'text.models.awdlstm.html#awd_lstm._change_hidden',
                                                                                                    'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.AWD_LSTM._change_one_hidden': ( 'text.models.awdlstm.html#awd_lstm._change_one_hidden',
                                                                                                        'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.AWD_LSTM._one_hidden': ( 'text.models.awdlstm.html#awd_lstm._one_hidden',
                                                                                                 'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.AWD_LSTM._one_rnn': ( 'text.models.awdlstm.html#awd_lstm._one_rnn',
                                                                                              'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.AWD_LSTM.forward': ( 'text.models.awdlstm.html#awd_lstm.forward',
                                                                                             'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.AWD_LSTM.reset': ( 'text.models.awdlstm.html#awd_lstm.reset',
                                                                                           'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.EmbeddingDropout': ( 'text.models.awdlstm.html#embeddingdropout',
                                                                                             'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.EmbeddingDropout.__init__': ( 'text.models.awdlstm.html#embeddingdropout.__init__',
                                                                                                      'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.EmbeddingDropout.forward': ( 'text.models.awdlstm.html#embeddingdropout.forward',
                                                                                                     'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.RNNDropout': ( 'text.models.awdlstm.html#rnndropout',
                                                                                       'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.RNNDropout.__init__': ( 'text.models.awdlstm.html#rnndropout.__init__',
                                                                                                'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.RNNDropout.forward': ( 'text.models.awdlstm.html#rnndropout.forward',
                                                                                               'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.WeightDropout': ( 'text.models.awdlstm.html#weightdropout',
                                                                                          'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.WeightDropout.__init__': ( 'text.models.awdlstm.html#weightdropout.__init__',
                                                                                                   'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.WeightDropout._do_nothing': ( 'text.models.awdlstm.html#weightdropout._do_nothing',
                                                                                                      'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.WeightDropout._setweights': ( 'text.models.awdlstm.html#weightdropout._setweights',
                                                                                                      'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.WeightDropout.forward': ( 'text.models.awdlstm.html#weightdropout.forward',
                                                                                                  'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.WeightDropout.reset': ( 'text.models.awdlstm.html#weightdropout.reset',
                                                                                                'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.awd_lstm_clas_split': ( 'text.models.awdlstm.html#awd_lstm_clas_split',
                                                                                                'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.awd_lstm_lm_split': ( 'text.models.awdlstm.html#awd_lstm_lm_split',
                                                                                              'fastai/text/models/awdlstm.py'),
                                            'fastai.text.models.awdlstm.dropout_mask': ( 'text.models.awdlstm.html#dropout_mask',
                                                                                         'fastai/text/models/awdlstm.py')},
            'fastai.text.models.core': { 'fastai.text.models.core.LinearDecoder': ( 'text.models.core.html#lineardecoder',
                                                                                    'fastai/text/models/core.py'),
                                         'fastai.text.models.core.LinearDecoder.__init__': ( 'text.models.core.html#lineardecoder.__init__',
                                                                                             'fastai/text/models/core.py'),
                                         'fastai.text.models.core.LinearDecoder.forward': ( 'text.models.core.html#lineardecoder.forward',
                                                                                            'fastai/text/models/core.py'),
                                         'fastai.text.models.core.PoolingLinearClassifier': ( 'text.models.core.html#poolinglinearclassifier',
                                                                                              'fastai/text/models/core.py'),
                                         'fastai.text.models.core.PoolingLinearClassifier.__init__': ( 'text.models.core.html#poolinglinearclassifier.__init__',
                                                                                                       'fastai/text/models/core.py'),
                                         'fastai.text.models.core.PoolingLinearClassifier.forward': ( 'text.models.core.html#poolinglinearclassifier.forward',
                                                                                                      'fastai/text/models/core.py'),
                                         'fastai.text.models.core.SentenceEncoder': ( 'text.models.core.html#sentenceencoder',
                                                                                      'fastai/text/models/core.py'),
                                         'fastai.text.models.core.SentenceEncoder.__init__': ( 'text.models.core.html#sentenceencoder.__init__',
                                                                                               'fastai/text/models/core.py'),
                                         'fastai.text.models.core.SentenceEncoder.forward': ( 'text.models.core.html#sentenceencoder.forward',
                                                                                              'fastai/text/models/core.py'),
                                         'fastai.text.models.core.SentenceEncoder.reset': ( 'text.models.core.html#sentenceencoder.reset',
                                                                                            'fastai/text/models/core.py'),
                                         'fastai.text.models.core.SequentialRNN': ( 'text.models.core.html#sequentialrnn',
                                                                                    'fastai/text/models/core.py'),
                                         'fastai.text.models.core.SequentialRNN.reset': ( 'text.models.core.html#sequentialrnn.reset',
                                                                                          'fastai/text/models/core.py'),
                                         'fastai.text.models.core._pad_tensor': ( 'text.models.core.html#_pad_tensor',
                                                                                  'fastai/text/models/core.py'),
                                         'fastai.text.models.core.get_language_model': ( 'text.models.core.html#get_language_model',
                                                                                         'fastai/text/models/core.py'),
                                         'fastai.text.models.core.get_text_classifier': ( 'text.models.core.html#get_text_classifier',
                                                                                          'fastai/text/models/core.py'),
                                         'fastai.text.models.core.masked_concat_pool': ( 'text.models.core.html#masked_concat_pool',
                                                                                         'fastai/text/models/core.py')},
            'fastai.torch_basics': {},
            'fastai.torch_core': { 'fastai.torch_core.ArrayBase': ('torch_core.html#arraybase', 'fastai/torch_core.py'),
                                   'fastai.torch_core.ArrayBase._before_cast': ( 'torch_core.html#arraybase._before_cast',
                                                                                 'fastai/torch_core.py'),
                                   'fastai.torch_core.ArrayImage': ('torch_core.html#arrayimage', 'fastai/torch_core.py'),
                                   'fastai.torch_core.ArrayImageBW': ('torch_core.html#arrayimagebw', 'fastai/torch_core.py'),
                                   'fastai.torch_core.ArrayImageBase': ('torch_core.html#arrayimagebase', 'fastai/torch_core.py'),
                                   'fastai.torch_core.ArrayImageBase.show': ('torch_core.html#arrayimagebase.show', 'fastai/torch_core.py'),
                                   'fastai.torch_core.ArrayMask': ('torch_core.html#arraymask', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Chunks': ('torch_core.html#chunks', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Chunks.__getitem__': ('torch_core.html#chunks.__getitem__', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Chunks.__init__': ('torch_core.html#chunks.__init__', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Chunks.doc_idx': ('torch_core.html#chunks.doc_idx', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Chunks.getslice': ('torch_core.html#chunks.getslice', 'fastai/torch_core.py'),
                                   'fastai.torch_core.L.cat': ('torch_core.html#l.cat', 'fastai/torch_core.py'),
                                   'fastai.torch_core.L.stack': ('torch_core.html#l.stack', 'fastai/torch_core.py'),
                                   'fastai.torch_core.L.tensored': ('torch_core.html#l.tensored', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Module': ('torch_core.html#module', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Module.__init__': ('torch_core.html#module.__init__', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Module.__pre_init__': ('torch_core.html#module.__pre_init__', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Path.load_array': ('torch_core.html#path.load_array', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Path.save_array': ('torch_core.html#path.save_array', 'fastai/torch_core.py'),
                                   'fastai.torch_core.ShowTitle': ('torch_core.html#showtitle', 'fastai/torch_core.py'),
                                   'fastai.torch_core.ShowTitle.show': ('torch_core.html#showtitle.show', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Tensor.__array_eq__': ('torch_core.html#tensor.__array_eq__', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Tensor.as_subclass': ('torch_core.html#tensor.as_subclass', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Tensor.interp_1d': ('torch_core.html#tensor.interp_1d', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Tensor.pca': ('torch_core.html#tensor.pca', 'fastai/torch_core.py'),
                                   'fastai.torch_core.Tensor.set_meta': ('torch_core.html#tensor.set_meta', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorBase': ('torch_core.html#tensorbase', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorBase.__new__': ('torch_core.html#tensorbase.__new__', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorBase.__reduce_ex__': ( 'torch_core.html#tensorbase.__reduce_ex__',
                                                                                   'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorBase.__repr__': ('torch_core.html#tensorbase.__repr__', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorBase.__torch_function__': ( 'torch_core.html#tensorbase.__torch_function__',
                                                                                        'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorBase._before_cast': ( 'torch_core.html#tensorbase._before_cast',
                                                                                  'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorBase.clone': ('torch_core.html#tensorbase.clone', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorBase.new': ('torch_core.html#tensorbase.new', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorBase.new_empty': ( 'torch_core.html#tensorbase.new_empty',
                                                                               'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorBase.new_ones': ('torch_core.html#tensorbase.new_ones', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorBase.new_tensor': ( 'torch_core.html#tensorbase.new_tensor',
                                                                                'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorBase.register_func': ( 'torch_core.html#tensorbase.register_func',
                                                                                   'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorBase.requires_grad_': ( 'torch_core.html#tensorbase.requires_grad_',
                                                                                    'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorCategory': ('torch_core.html#tensorcategory', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorFlowField': ('torch_core.html#tensorflowfield', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorImage': ('torch_core.html#tensorimage', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorImageBW': ('torch_core.html#tensorimagebw', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorImageBase': ('torch_core.html#tensorimagebase', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorImageBase.show': ( 'torch_core.html#tensorimagebase.show',
                                                                               'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorMask': ('torch_core.html#tensormask', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorMask.show': ('torch_core.html#tensormask.show', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TensorMultiCategory': ('torch_core.html#tensormulticategory', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TitledFloat': ('torch_core.html#titledfloat', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TitledFloat.show': ('torch_core.html#titledfloat.show', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TitledInt': ('torch_core.html#titledint', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TitledInt.show': ('torch_core.html#titledint.show', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TitledStr': ('torch_core.html#titledstr', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TitledStr.show': ('torch_core.html#titledstr.show', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TitledStr.truncate': ('torch_core.html#titledstr.truncate', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TitledTensorScalar': ('torch_core.html#titledtensorscalar', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TitledTensorScalar.show': ( 'torch_core.html#titledtensorscalar.show',
                                                                                  'fastai/torch_core.py'),
                                   'fastai.torch_core.TitledTuple': ('torch_core.html#titledtuple', 'fastai/torch_core.py'),
                                   'fastai.torch_core.TitledTuple.show': ('torch_core.html#titledtuple.show', 'fastai/torch_core.py'),
                                   'fastai.torch_core._array2tensor': ('torch_core.html#_array2tensor', 'fastai/torch_core.py'),
                                   'fastai.torch_core._comp_filter': ('torch_core.html#_comp_filter', 'fastai/torch_core.py'),
                                   'fastai.torch_core._fa_rebuild_qtensor': ('torch_core.html#_fa_rebuild_qtensor', 'fastai/torch_core.py'),
                                   'fastai.torch_core._fa_rebuild_tensor': ('torch_core.html#_fa_rebuild_tensor', 'fastai/torch_core.py'),
                                   'fastai.torch_core._fig_bounds': ('torch_core.html#_fig_bounds', 'fastai/torch_core.py'),
                                   'fastai.torch_core._find_args': ('torch_core.html#_find_args', 'fastai/torch_core.py'),
                                   'fastai.torch_core._has_mps': ('torch_core.html#_has_mps', 'fastai/torch_core.py'),
                                   'fastai.torch_core._rebuild_from_type': ('torch_core.html#_rebuild_from_type', 'fastai/torch_core.py'),
                                   'fastai.torch_core._torch_handled': ('torch_core.html#_torch_handled', 'fastai/torch_core.py'),
                                   'fastai.torch_core.apply': ('torch_core.html#apply', 'fastai/torch_core.py'),
                                   'fastai.torch_core.apply_init': ('torch_core.html#apply_init', 'fastai/torch_core.py'),
                                   'fastai.torch_core.apply_leaf': ('torch_core.html#apply_leaf', 'fastai/torch_core.py'),
                                   'fastai.torch_core.base_doc': ('torch_core.html#base_doc', 'fastai/torch_core.py'),
                                   'fastai.torch_core.batch_to_samples': ('torch_core.html#batch_to_samples', 'fastai/torch_core.py'),
                                   'fastai.torch_core.concat': ('torch_core.html#concat', 'fastai/torch_core.py'),
                                   'fastai.torch_core.cond_init': ('torch_core.html#cond_init', 'fastai/torch_core.py'),
                                   'fastai.torch_core.default_device': ('torch_core.html#default_device', 'fastai/torch_core.py'),
                                   'fastai.torch_core.display_df': ('torch_core.html#display_df', 'fastai/torch_core.py'),
                                   'fastai.torch_core.distrib_barrier': ('torch_core.html#distrib_barrier', 'fastai/torch_core.py'),
                                   'fastai.torch_core.doc': ('torch_core.html#doc', 'fastai/torch_core.py'),
                                   'fastai.torch_core.find_bs': ('torch_core.html#find_bs', 'fastai/torch_core.py'),
                                   'fastai.torch_core.find_device': ('torch_core.html#find_device', 'fastai/torch_core.py'),
                                   'fastai.torch_core.flatten_check': ('torch_core.html#flatten_check', 'fastai/torch_core.py'),
                                   'fastai.torch_core.get_empty_df': ('torch_core.html#get_empty_df', 'fastai/torch_core.py'),
                                   'fastai.torch_core.get_first': ('torch_core.html#get_first', 'fastai/torch_core.py'),
                                   'fastai.torch_core.get_model': ('torch_core.html#get_model', 'fastai/torch_core.py'),
                                   'fastai.torch_core.get_random_states': ('torch_core.html#get_random_states', 'fastai/torch_core.py'),
                                   'fastai.torch_core.grad_module': ('torch_core.html#grad_module', 'fastai/torch_core.py'),
                                   'fastai.torch_core.init_default': ('torch_core.html#init_default', 'fastai/torch_core.py'),
                                   'fastai.torch_core.ismin_torch': ('torch_core.html#ismin_torch', 'fastai/torch_core.py'),
                                   'fastai.torch_core.item_find': ('torch_core.html#item_find', 'fastai/torch_core.py'),
                                   'fastai.torch_core.logit': ('torch_core.html#logit', 'fastai/torch_core.py'),
                                   'fastai.torch_core.make_cross_image': ('torch_core.html#make_cross_image', 'fastai/torch_core.py'),
                                   'fastai.torch_core.maybe_gather': ('torch_core.html#maybe_gather', 'fastai/torch_core.py'),
                                   'fastai.torch_core.nested_reorder': ('torch_core.html#nested_reorder', 'fastai/torch_core.py'),
                                   'fastai.torch_core.no_random': ('torch_core.html#no_random', 'fastai/torch_core.py'),
                                   'fastai.torch_core.norm_bias_params': ('torch_core.html#norm_bias_params', 'fastai/torch_core.py'),
                                   'fastai.torch_core.notmax_torch': ('torch_core.html#notmax_torch', 'fastai/torch_core.py'),
                                   'fastai.torch_core.np_func': ('torch_core.html#np_func', 'fastai/torch_core.py'),
                                   'fastai.torch_core.num_distrib': ('torch_core.html#num_distrib', 'fastai/torch_core.py'),
                                   'fastai.torch_core.one_hot': ('torch_core.html#one_hot', 'fastai/torch_core.py'),
                                   'fastai.torch_core.one_hot_decode': ('torch_core.html#one_hot_decode', 'fastai/torch_core.py'),
                                   'fastai.torch_core.one_param': ('torch_core.html#one_param', 'fastai/torch_core.py'),
                                   'fastai.torch_core.params': ('torch_core.html#params', 'fastai/torch_core.py'),
                                   'fastai.torch_core.pd.DataFrame.__init__': ( 'torch_core.html#pd.dataframe.__init__',
                                                                                'fastai/torch_core.py'),
                                   'fastai.torch_core.rank_distrib': ('torch_core.html#rank_distrib', 'fastai/torch_core.py'),
                                   'fastai.torch_core.requires_grad': ('torch_core.html#requires_grad', 'fastai/torch_core.py'),
                                   'fastai.torch_core.script_bwd': ('torch_core.html#script_bwd', 'fastai/torch_core.py'),
                                   'fastai.torch_core.script_fwd': ('torch_core.html#script_fwd', 'fastai/torch_core.py'),
                                   'fastai.torch_core.script_save_ctx': ('torch_core.html#script_save_ctx', 'fastai/torch_core.py'),
                                   'fastai.torch_core.script_use_ctx': ('torch_core.html#script_use_ctx', 'fastai/torch_core.py'),
                                   'fastai.torch_core.set_random_states': ('torch_core.html#set_random_states', 'fastai/torch_core.py'),
                                   'fastai.torch_core.set_seed': ('torch_core.html#set_seed', 'fastai/torch_core.py'),
                                   'fastai.torch_core.setup_cuda': ('torch_core.html#setup_cuda', 'fastai/torch_core.py'),
                                   'fastai.torch_core.show_image': ('torch_core.html#show_image', 'fastai/torch_core.py'),
                                   'fastai.torch_core.show_image_batch': ('torch_core.html#show_image_batch', 'fastai/torch_core.py'),
                                   'fastai.torch_core.show_images': ('torch_core.html#show_images', 'fastai/torch_core.py'),
                                   'fastai.torch_core.show_title': ('torch_core.html#show_title', 'fastai/torch_core.py'),
                                   'fastai.torch_core.show_titled_image': ('torch_core.html#show_titled_image', 'fastai/torch_core.py'),
                                   'fastai.torch_core.subplots': ('torch_core.html#subplots', 'fastai/torch_core.py'),
                                   'fastai.torch_core.tensor': ('torch_core.html#tensor', 'fastai/torch_core.py'),
                                   'fastai.torch_core.to_concat': ('torch_core.html#to_concat', 'fastai/torch_core.py'),
                                   'fastai.torch_core.to_cpu': ('torch_core.html#to_cpu', 'fastai/torch_core.py'),
                                   'fastai.torch_core.to_detach': ('torch_core.html#to_detach', 'fastai/torch_core.py'),
                                   'fastai.torch_core.to_device': ('torch_core.html#to_device', 'fastai/torch_core.py'),
                                   'fastai.torch_core.to_float': ('torch_core.html#to_float', 'fastai/torch_core.py'),
                                   'fastai.torch_core.to_half': ('torch_core.html#to_half', 'fastai/torch_core.py'),
                                   'fastai.torch_core.to_np': ('torch_core.html#to_np', 'fastai/torch_core.py'),
                                   'fastai.torch_core.trainable_params': ('torch_core.html#trainable_params', 'fastai/torch_core.py'),
                                   'fastai.torch_core.unsqueeze': ('torch_core.html#unsqueeze', 'fastai/torch_core.py'),
                                   'fastai.torch_core.unsqueeze_': ('torch_core.html#unsqueeze_', 'fastai/torch_core.py')},
            'fastai.torch_imports': {},
            'fastai.vision.all': {},
            'fastai.vision.augment': { 'fastai.vision.augment.AffineCoordTfm': ( 'vision.augment.html#affinecoordtfm',
                                                                                 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.AffineCoordTfm.__init__': ( 'vision.augment.html#affinecoordtfm.__init__',
                                                                                          'fastai/vision/augment.py'),
                                       'fastai.vision.augment.AffineCoordTfm._encode': ( 'vision.augment.html#affinecoordtfm._encode',
                                                                                         'fastai/vision/augment.py'),
                                       'fastai.vision.augment.AffineCoordTfm._get_affine_mat': ( 'vision.augment.html#affinecoordtfm._get_affine_mat',
                                                                                                 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.AffineCoordTfm.before_call': ( 'vision.augment.html#affinecoordtfm.before_call',
                                                                                             'fastai/vision/augment.py'),
                                       'fastai.vision.augment.AffineCoordTfm.compose': ( 'vision.augment.html#affinecoordtfm.compose',
                                                                                         'fastai/vision/augment.py'),
                                       'fastai.vision.augment.AffineCoordTfm.encodes': ( 'vision.augment.html#affinecoordtfm.encodes',
                                                                                         'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Brightness': ('vision.augment.html#brightness', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Brightness.__init__': ( 'vision.augment.html#brightness.__init__',
                                                                                      'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Contrast': ('vision.augment.html#contrast', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Contrast.__init__': ( 'vision.augment.html#contrast.__init__',
                                                                                    'fastai/vision/augment.py'),
                                       'fastai.vision.augment.CropPad': ('vision.augment.html#croppad', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.CropPad.__init__': ( 'vision.augment.html#croppad.__init__',
                                                                                   'fastai/vision/augment.py'),
                                       'fastai.vision.augment.CropPad.encodes': ( 'vision.augment.html#croppad.encodes',
                                                                                  'fastai/vision/augment.py'),
                                       'fastai.vision.augment.DeterministicDihedral': ( 'vision.augment.html#deterministicdihedral',
                                                                                        'fastai/vision/augment.py'),
                                       'fastai.vision.augment.DeterministicDihedral.__init__': ( 'vision.augment.html#deterministicdihedral.__init__',
                                                                                                 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.DeterministicDraw': ( 'vision.augment.html#deterministicdraw',
                                                                                    'fastai/vision/augment.py'),
                                       'fastai.vision.augment.DeterministicDraw.__call__': ( 'vision.augment.html#deterministicdraw.__call__',
                                                                                             'fastai/vision/augment.py'),
                                       'fastai.vision.augment.DeterministicDraw.__init__': ( 'vision.augment.html#deterministicdraw.__init__',
                                                                                             'fastai/vision/augment.py'),
                                       'fastai.vision.augment.DeterministicFlip': ( 'vision.augment.html#deterministicflip',
                                                                                    'fastai/vision/augment.py'),
                                       'fastai.vision.augment.DeterministicFlip.__init__': ( 'vision.augment.html#deterministicflip.__init__',
                                                                                             'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Dihedral': ('vision.augment.html#dihedral', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Dihedral.__init__': ( 'vision.augment.html#dihedral.__init__',
                                                                                    'fastai/vision/augment.py'),
                                       'fastai.vision.augment.DihedralItem': ( 'vision.augment.html#dihedralitem',
                                                                               'fastai/vision/augment.py'),
                                       'fastai.vision.augment.DihedralItem.before_call': ( 'vision.augment.html#dihedralitem.before_call',
                                                                                           'fastai/vision/augment.py'),
                                       'fastai.vision.augment.DihedralItem.encodes': ( 'vision.augment.html#dihedralitem.encodes',
                                                                                       'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Flip': ('vision.augment.html#flip', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Flip.__init__': ( 'vision.augment.html#flip.__init__',
                                                                                'fastai/vision/augment.py'),
                                       'fastai.vision.augment.FlipItem': ('vision.augment.html#flipitem', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.FlipItem.__init__': ( 'vision.augment.html#flipitem.__init__',
                                                                                    'fastai/vision/augment.py'),
                                       'fastai.vision.augment.FlipItem.encodes': ( 'vision.augment.html#flipitem.encodes',
                                                                                   'fastai/vision/augment.py'),
                                       'fastai.vision.augment.HSVTfm': ('vision.augment.html#hsvtfm', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.HSVTfm.__init__': ( 'vision.augment.html#hsvtfm.__init__',
                                                                                  'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Hue': ('vision.augment.html#hue', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Hue.__init__': ( 'vision.augment.html#hue.__init__',
                                                                               'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Image.Image._do_crop_pad': ( 'vision.augment.html#image.image._do_crop_pad',
                                                                                           'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Image.Image.crop_pad': ( 'vision.augment.html#image.image.crop_pad',
                                                                                       'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Image.Image.flip_lr': ( 'vision.augment.html#image.image.flip_lr',
                                                                                      'fastai/vision/augment.py'),
                                       'fastai.vision.augment.LightingTfm': ('vision.augment.html#lightingtfm', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.LightingTfm.__init__': ( 'vision.augment.html#lightingtfm.__init__',
                                                                                       'fastai/vision/augment.py'),
                                       'fastai.vision.augment.OldRandomCrop': ( 'vision.augment.html#oldrandomcrop',
                                                                                'fastai/vision/augment.py'),
                                       'fastai.vision.augment.OldRandomCrop.before_call': ( 'vision.augment.html#oldrandomcrop.before_call',
                                                                                            'fastai/vision/augment.py'),
                                       'fastai.vision.augment.PILImage.dihedral': ( 'vision.augment.html#pilimage.dihedral',
                                                                                    'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandTransform': ( 'vision.augment.html#randtransform',
                                                                                'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandTransform.__call__': ( 'vision.augment.html#randtransform.__call__',
                                                                                         'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandTransform.__init__': ( 'vision.augment.html#randtransform.__init__',
                                                                                         'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandTransform.before_call': ( 'vision.augment.html#randtransform.before_call',
                                                                                            'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomCrop': ('vision.augment.html#randomcrop', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomCrop.__init__': ( 'vision.augment.html#randomcrop.__init__',
                                                                                      'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomCrop.before_call': ( 'vision.augment.html#randomcrop.before_call',
                                                                                         'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomCrop.encodes': ( 'vision.augment.html#randomcrop.encodes',
                                                                                     'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomErasing': ( 'vision.augment.html#randomerasing',
                                                                                'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomErasing.__init__': ( 'vision.augment.html#randomerasing.__init__',
                                                                                         'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomErasing._bounds': ( 'vision.augment.html#randomerasing._bounds',
                                                                                        'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomErasing.encodes': ( 'vision.augment.html#randomerasing.encodes',
                                                                                        'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomResizedCrop': ( 'vision.augment.html#randomresizedcrop',
                                                                                    'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomResizedCrop.__init__': ( 'vision.augment.html#randomresizedcrop.__init__',
                                                                                             'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomResizedCrop.before_call': ( 'vision.augment.html#randomresizedcrop.before_call',
                                                                                                'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomResizedCrop.encodes': ( 'vision.augment.html#randomresizedcrop.encodes',
                                                                                            'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomResizedCropGPU': ( 'vision.augment.html#randomresizedcropgpu',
                                                                                       'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomResizedCropGPU.__init__': ( 'vision.augment.html#randomresizedcropgpu.__init__',
                                                                                                'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomResizedCropGPU._encode': ( 'vision.augment.html#randomresizedcropgpu._encode',
                                                                                               'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomResizedCropGPU.before_call': ( 'vision.augment.html#randomresizedcropgpu.before_call',
                                                                                                   'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RandomResizedCropGPU.encodes': ( 'vision.augment.html#randomresizedcropgpu.encodes',
                                                                                               'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RatioResize': ('vision.augment.html#ratioresize', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RatioResize.__init__': ( 'vision.augment.html#ratioresize.__init__',
                                                                                       'fastai/vision/augment.py'),
                                       'fastai.vision.augment.RatioResize.encodes': ( 'vision.augment.html#ratioresize.encodes',
                                                                                      'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Resize': ('vision.augment.html#resize', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Resize.__init__': ( 'vision.augment.html#resize.__init__',
                                                                                  'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Resize.before_call': ( 'vision.augment.html#resize.before_call',
                                                                                     'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Resize.encodes': ( 'vision.augment.html#resize.encodes',
                                                                                 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Rotate': ('vision.augment.html#rotate', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Rotate.__init__': ( 'vision.augment.html#rotate.__init__',
                                                                                  'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Saturation': ('vision.augment.html#saturation', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Saturation.__init__': ( 'vision.augment.html#saturation.__init__',
                                                                                      'fastai/vision/augment.py'),
                                       'fastai.vision.augment.SpaceTfm': ('vision.augment.html#spacetfm', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.SpaceTfm.__init__': ( 'vision.augment.html#spacetfm.__init__',
                                                                                    'fastai/vision/augment.py'),
                                       'fastai.vision.augment.SpaceTfm.before_call': ( 'vision.augment.html#spacetfm.before_call',
                                                                                       'fastai/vision/augment.py'),
                                       'fastai.vision.augment.SpaceTfm.compose': ( 'vision.augment.html#spacetfm.compose',
                                                                                   'fastai/vision/augment.py'),
                                       'fastai.vision.augment.SpaceTfm.encodes': ( 'vision.augment.html#spacetfm.encodes',
                                                                                   'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorBBox._do_crop_pad': ( 'vision.augment.html#tensorbbox._do_crop_pad',
                                                                                          'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorBBox.affine_coord': ( 'vision.augment.html#tensorbbox.affine_coord',
                                                                                          'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorBBox.crop_pad': ( 'vision.augment.html#tensorbbox.crop_pad',
                                                                                      'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorBBox.dihedral': ( 'vision.augment.html#tensorbbox.dihedral',
                                                                                      'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorBBox.dihedral_batch': ( 'vision.augment.html#tensorbbox.dihedral_batch',
                                                                                            'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorBBox.flip_batch': ( 'vision.augment.html#tensorbbox.flip_batch',
                                                                                        'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorBBox.flip_lr': ( 'vision.augment.html#tensorbbox.flip_lr',
                                                                                     'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorBBox.rotate': ( 'vision.augment.html#tensorbbox.rotate',
                                                                                    'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorBBox.warp': ( 'vision.augment.html#tensorbbox.warp',
                                                                                  'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorBBox.zoom': ( 'vision.augment.html#tensorbbox.zoom',
                                                                                  'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImage.affine_coord': ( 'vision.augment.html#tensorimage.affine_coord',
                                                                                           'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImage.brightness': ( 'vision.augment.html#tensorimage.brightness',
                                                                                         'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImage.contrast': ( 'vision.augment.html#tensorimage.contrast',
                                                                                       'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImage.dihedral': ( 'vision.augment.html#tensorimage.dihedral',
                                                                                       'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImage.dihedral_batch': ( 'vision.augment.html#tensorimage.dihedral_batch',
                                                                                             'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImage.flip_batch': ( 'vision.augment.html#tensorimage.flip_batch',
                                                                                         'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImage.hsv': ( 'vision.augment.html#tensorimage.hsv',
                                                                                  'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImage.hue': ( 'vision.augment.html#tensorimage.hue',
                                                                                  'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImage.lighting': ( 'vision.augment.html#tensorimage.lighting',
                                                                                       'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImage.rotate': ( 'vision.augment.html#tensorimage.rotate',
                                                                                     'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImage.saturation': ( 'vision.augment.html#tensorimage.saturation',
                                                                                         'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImage.warp': ( 'vision.augment.html#tensorimage.warp',
                                                                                   'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImage.zoom': ( 'vision.augment.html#tensorimage.zoom',
                                                                                   'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorImageBase.flip_lr': ( 'vision.augment.html#tensorimagebase.flip_lr',
                                                                                          'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorMask.affine_coord': ( 'vision.augment.html#tensormask.affine_coord',
                                                                                          'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorMask.dihedral_batch': ( 'vision.augment.html#tensormask.dihedral_batch',
                                                                                            'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorMask.flip_batch': ( 'vision.augment.html#tensormask.flip_batch',
                                                                                        'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorMask.rotate': ( 'vision.augment.html#tensormask.rotate',
                                                                                    'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorMask.warp': ( 'vision.augment.html#tensormask.warp',
                                                                                  'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorMask.zoom': ( 'vision.augment.html#tensormask.zoom',
                                                                                  'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorPoint._do_crop_pad': ( 'vision.augment.html#tensorpoint._do_crop_pad',
                                                                                           'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorPoint.affine_coord': ( 'vision.augment.html#tensorpoint.affine_coord',
                                                                                           'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorPoint.crop_pad': ( 'vision.augment.html#tensorpoint.crop_pad',
                                                                                       'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorPoint.dihedral': ( 'vision.augment.html#tensorpoint.dihedral',
                                                                                       'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorPoint.dihedral_batch': ( 'vision.augment.html#tensorpoint.dihedral_batch',
                                                                                             'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorPoint.flip_batch': ( 'vision.augment.html#tensorpoint.flip_batch',
                                                                                         'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorPoint.flip_lr': ( 'vision.augment.html#tensorpoint.flip_lr',
                                                                                      'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorPoint.rotate': ( 'vision.augment.html#tensorpoint.rotate',
                                                                                     'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorPoint.warp': ( 'vision.augment.html#tensorpoint.warp',
                                                                                   'fastai/vision/augment.py'),
                                       'fastai.vision.augment.TensorPoint.zoom': ( 'vision.augment.html#tensorpoint.zoom',
                                                                                   'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Warp': ('vision.augment.html#warp', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Warp.__init__': ( 'vision.augment.html#warp.__init__',
                                                                                'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Zoom': ('vision.augment.html#zoom', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.Zoom.__init__': ( 'vision.augment.html#zoom.__init__',
                                                                                'fastai/vision/augment.py'),
                                       'fastai.vision.augment._BrightnessLogit': ( 'vision.augment.html#_brightnesslogit',
                                                                                   'fastai/vision/augment.py'),
                                       'fastai.vision.augment._BrightnessLogit.__call__': ( 'vision.augment.html#_brightnesslogit.__call__',
                                                                                            'fastai/vision/augment.py'),
                                       'fastai.vision.augment._BrightnessLogit.__init__': ( 'vision.augment.html#_brightnesslogit.__init__',
                                                                                            'fastai/vision/augment.py'),
                                       'fastai.vision.augment._BrightnessLogit._def_draw': ( 'vision.augment.html#_brightnesslogit._def_draw',
                                                                                             'fastai/vision/augment.py'),
                                       'fastai.vision.augment._BrightnessLogit.before_call': ( 'vision.augment.html#_brightnesslogit.before_call',
                                                                                               'fastai/vision/augment.py'),
                                       'fastai.vision.augment._ContrastLogit': ( 'vision.augment.html#_contrastlogit',
                                                                                 'fastai/vision/augment.py'),
                                       'fastai.vision.augment._ContrastLogit.__call__': ( 'vision.augment.html#_contrastlogit.__call__',
                                                                                          'fastai/vision/augment.py'),
                                       'fastai.vision.augment._ContrastLogit.__init__': ( 'vision.augment.html#_contrastlogit.__init__',
                                                                                          'fastai/vision/augment.py'),
                                       'fastai.vision.augment._ContrastLogit._def_draw': ( 'vision.augment.html#_contrastlogit._def_draw',
                                                                                           'fastai/vision/augment.py'),
                                       'fastai.vision.augment._ContrastLogit.before_call': ( 'vision.augment.html#_contrastlogit.before_call',
                                                                                             'fastai/vision/augment.py'),
                                       'fastai.vision.augment._Hue': ('vision.augment.html#_hue', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment._Hue.__call__': ( 'vision.augment.html#_hue.__call__',
                                                                                'fastai/vision/augment.py'),
                                       'fastai.vision.augment._Hue.__init__': ( 'vision.augment.html#_hue.__init__',
                                                                                'fastai/vision/augment.py'),
                                       'fastai.vision.augment._Hue._def_draw': ( 'vision.augment.html#_hue._def_draw',
                                                                                 'fastai/vision/augment.py'),
                                       'fastai.vision.augment._Hue.before_call': ( 'vision.augment.html#_hue.before_call',
                                                                                   'fastai/vision/augment.py'),
                                       'fastai.vision.augment._SaturationLogit': ( 'vision.augment.html#_saturationlogit',
                                                                                   'fastai/vision/augment.py'),
                                       'fastai.vision.augment._SaturationLogit.__call__': ( 'vision.augment.html#_saturationlogit.__call__',
                                                                                            'fastai/vision/augment.py'),
                                       'fastai.vision.augment._SaturationLogit.__init__': ( 'vision.augment.html#_saturationlogit.__init__',
                                                                                            'fastai/vision/augment.py'),
                                       'fastai.vision.augment._SaturationLogit._def_draw': ( 'vision.augment.html#_saturationlogit._def_draw',
                                                                                             'fastai/vision/augment.py'),
                                       'fastai.vision.augment._SaturationLogit.before_call': ( 'vision.augment.html#_saturationlogit.before_call',
                                                                                               'fastai/vision/augment.py'),
                                       'fastai.vision.augment._WarpCoord': ('vision.augment.html#_warpcoord', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment._WarpCoord.__call__': ( 'vision.augment.html#_warpcoord.__call__',
                                                                                      'fastai/vision/augment.py'),
                                       'fastai.vision.augment._WarpCoord.__init__': ( 'vision.augment.html#_warpcoord.__init__',
                                                                                      'fastai/vision/augment.py'),
                                       'fastai.vision.augment._WarpCoord._def_draw': ( 'vision.augment.html#_warpcoord._def_draw',
                                                                                       'fastai/vision/augment.py'),
                                       'fastai.vision.augment._WarpCoord.before_call': ( 'vision.augment.html#_warpcoord.before_call',
                                                                                         'fastai/vision/augment.py'),
                                       'fastai.vision.augment._compose_same_tfms': ( 'vision.augment.html#_compose_same_tfms',
                                                                                     'fastai/vision/augment.py'),
                                       'fastai.vision.augment._draw_mask': ('vision.augment.html#_draw_mask', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment._get_default': ( 'vision.augment.html#_get_default',
                                                                               'fastai/vision/augment.py'),
                                       'fastai.vision.augment._get_sz': ('vision.augment.html#_get_sz', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment._grid_sample': ( 'vision.augment.html#_grid_sample',
                                                                               'fastai/vision/augment.py'),
                                       'fastai.vision.augment._init_mat': ('vision.augment.html#_init_mat', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment._neg_axis': ('vision.augment.html#_neg_axis', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment._prepare_mat': ( 'vision.augment.html#_prepare_mat',
                                                                               'fastai/vision/augment.py'),
                                       'fastai.vision.augment._process_sz': ('vision.augment.html#_process_sz', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment._slice': ('vision.augment.html#_slice', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.affine_grid': ('vision.augment.html#affine_grid', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.affine_mat': ('vision.augment.html#affine_mat', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.apply_perspective': ( 'vision.augment.html#apply_perspective',
                                                                                    'fastai/vision/augment.py'),
                                       'fastai.vision.augment.aug_transforms': ( 'vision.augment.html#aug_transforms',
                                                                                 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.cutout_gaussian': ( 'vision.augment.html#cutout_gaussian',
                                                                                  'fastai/vision/augment.py'),
                                       'fastai.vision.augment.dihedral_mat': ( 'vision.augment.html#dihedral_mat',
                                                                               'fastai/vision/augment.py'),
                                       'fastai.vision.augment.find_coeffs': ('vision.augment.html#find_coeffs', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.flip_mat': ('vision.augment.html#flip_mat', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.grayscale': ('vision.augment.html#grayscale', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.hsv2rgb': ('vision.augment.html#hsv2rgb', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.mask_tensor': ('vision.augment.html#mask_tensor', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.norm_apply_denorm': ( 'vision.augment.html#norm_apply_denorm',
                                                                                    'fastai/vision/augment.py'),
                                       'fastai.vision.augment.rgb2hsv': ('vision.augment.html#rgb2hsv', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.rotate_mat': ('vision.augment.html#rotate_mat', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.setup_aug_tfms': ( 'vision.augment.html#setup_aug_tfms',
                                                                                 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.solve': ('vision.augment.html#solve', 'fastai/vision/augment.py'),
                                       'fastai.vision.augment.zoom_mat': ('vision.augment.html#zoom_mat', 'fastai/vision/augment.py')},
            'fastai.vision.core': { 'fastai.vision.core.AddMaskCodes': ('vision.core.html#addmaskcodes', 'fastai/vision/core.py'),
                                    'fastai.vision.core.AddMaskCodes.__init__': ( 'vision.core.html#addmaskcodes.__init__',
                                                                                  'fastai/vision/core.py'),
                                    'fastai.vision.core.AddMaskCodes.decodes': ( 'vision.core.html#addmaskcodes.decodes',
                                                                                 'fastai/vision/core.py'),
                                    'fastai.vision.core.BBoxLabeler': ('vision.core.html#bboxlabeler', 'fastai/vision/core.py'),
                                    'fastai.vision.core.BBoxLabeler.decode': ( 'vision.core.html#bboxlabeler.decode',
                                                                               'fastai/vision/core.py'),
                                    'fastai.vision.core.BBoxLabeler.decodes': ( 'vision.core.html#bboxlabeler.decodes',
                                                                                'fastai/vision/core.py'),
                                    'fastai.vision.core.BBoxLabeler.setups': ( 'vision.core.html#bboxlabeler.setups',
                                                                               'fastai/vision/core.py'),
                                    'fastai.vision.core.Image.Image.__repr__': ( 'vision.core.html#image.image.__repr__',
                                                                                 'fastai/vision/core.py'),
                                    'fastai.vision.core.Image.Image.aspect': ( 'vision.core.html#image.image.aspect',
                                                                               'fastai/vision/core.py'),
                                    'fastai.vision.core.Image.Image.n_px': ('vision.core.html#image.image.n_px', 'fastai/vision/core.py'),
                                    'fastai.vision.core.Image.Image.reshape': ( 'vision.core.html#image.image.reshape',
                                                                                'fastai/vision/core.py'),
                                    'fastai.vision.core.Image.Image.resize_max': ( 'vision.core.html#image.image.resize_max',
                                                                                   'fastai/vision/core.py'),
                                    'fastai.vision.core.Image.Image.shape': ('vision.core.html#image.image.shape', 'fastai/vision/core.py'),
                                    'fastai.vision.core.Image.Image.to_bytes_format': ( 'vision.core.html#image.image.to_bytes_format',
                                                                                        'fastai/vision/core.py'),
                                    'fastai.vision.core.Image.Image.to_thumb': ( 'vision.core.html#image.image.to_thumb',
                                                                                 'fastai/vision/core.py'),
                                    'fastai.vision.core.LabeledBBox': ('vision.core.html#labeledbbox', 'fastai/vision/core.py'),
                                    'fastai.vision.core.LabeledBBox.show': ('vision.core.html#labeledbbox.show', 'fastai/vision/core.py'),
                                    'fastai.vision.core.PILBase': ('vision.core.html#pilbase', 'fastai/vision/core.py'),
                                    'fastai.vision.core.PILBase.__repr__': ('vision.core.html#pilbase.__repr__', 'fastai/vision/core.py'),
                                    'fastai.vision.core.PILBase.create': ('vision.core.html#pilbase.create', 'fastai/vision/core.py'),
                                    'fastai.vision.core.PILBase.show': ('vision.core.html#pilbase.show', 'fastai/vision/core.py'),
                                    'fastai.vision.core.PILImage': ('vision.core.html#pilimage', 'fastai/vision/core.py'),
                                    'fastai.vision.core.PILImageBW': ('vision.core.html#pilimagebw', 'fastai/vision/core.py'),
                                    'fastai.vision.core.PILMask': ('vision.core.html#pilmask', 'fastai/vision/core.py'),
                                    'fastai.vision.core.PointScaler': ('vision.core.html#pointscaler', 'fastai/vision/core.py'),
                                    'fastai.vision.core.PointScaler.__init__': ( 'vision.core.html#pointscaler.__init__',
                                                                                 'fastai/vision/core.py'),
                                    'fastai.vision.core.PointScaler._get_sz': ( 'vision.core.html#pointscaler._get_sz',
                                                                                'fastai/vision/core.py'),
                                    'fastai.vision.core.PointScaler._grab_sz': ( 'vision.core.html#pointscaler._grab_sz',
                                                                                 'fastai/vision/core.py'),
                                    'fastai.vision.core.PointScaler.decodes': ( 'vision.core.html#pointscaler.decodes',
                                                                                'fastai/vision/core.py'),
                                    'fastai.vision.core.PointScaler.encodes': ( 'vision.core.html#pointscaler.encodes',
                                                                                'fastai/vision/core.py'),
                                    'fastai.vision.core.PointScaler.setups': ( 'vision.core.html#pointscaler.setups',
                                                                               'fastai/vision/core.py'),
                                    'fastai.vision.core.TensorBBox': ('vision.core.html#tensorbbox', 'fastai/vision/core.py'),
                                    'fastai.vision.core.TensorBBox.create': ('vision.core.html#tensorbbox.create', 'fastai/vision/core.py'),
                                    'fastai.vision.core.TensorBBox.show': ('vision.core.html#tensorbbox.show', 'fastai/vision/core.py'),
                                    'fastai.vision.core.TensorPoint': ('vision.core.html#tensorpoint', 'fastai/vision/core.py'),
                                    'fastai.vision.core.TensorPoint.create': ( 'vision.core.html#tensorpoint.create',
                                                                               'fastai/vision/core.py'),
                                    'fastai.vision.core.TensorPoint.show': ('vision.core.html#tensorpoint.show', 'fastai/vision/core.py'),
                                    'fastai.vision.core._draw_outline': ('vision.core.html#_draw_outline', 'fastai/vision/core.py'),
                                    'fastai.vision.core._draw_rect': ('vision.core.html#_draw_rect', 'fastai/vision/core.py'),
                                    'fastai.vision.core._scale_pnts': ('vision.core.html#_scale_pnts', 'fastai/vision/core.py'),
                                    'fastai.vision.core._unscale_pnts': ('vision.core.html#_unscale_pnts', 'fastai/vision/core.py'),
                                    'fastai.vision.core.decodes': ('vision.core.html#decodes', 'fastai/vision/core.py'),
                                    'fastai.vision.core.encodes': ('vision.core.html#encodes', 'fastai/vision/core.py'),
                                    'fastai.vision.core.get_annotations': ('vision.core.html#get_annotations', 'fastai/vision/core.py'),
                                    'fastai.vision.core.image2tensor': ('vision.core.html#image2tensor', 'fastai/vision/core.py'),
                                    'fastai.vision.core.load_image': ('vision.core.html#load_image', 'fastai/vision/core.py'),
                                    'fastai.vision.core.to_image': ('vision.core.html#to_image', 'fastai/vision/core.py')},
            'fastai.vision.data': { 'fastai.vision.data.BBoxLblBlock': ('vision.data.html#bboxlblblock', 'fastai/vision/data.py'),
                                    'fastai.vision.data.ImageBlock': ('vision.data.html#imageblock', 'fastai/vision/data.py'),
                                    'fastai.vision.data.ImageDataLoaders': ('vision.data.html#imagedataloaders', 'fastai/vision/data.py'),
                                    'fastai.vision.data.ImageDataLoaders.from_csv': ( 'vision.data.html#imagedataloaders.from_csv',
                                                                                      'fastai/vision/data.py'),
                                    'fastai.vision.data.ImageDataLoaders.from_df': ( 'vision.data.html#imagedataloaders.from_df',
                                                                                     'fastai/vision/data.py'),
                                    'fastai.vision.data.ImageDataLoaders.from_folder': ( 'vision.data.html#imagedataloaders.from_folder',
                                                                                         'fastai/vision/data.py'),
                                    'fastai.vision.data.ImageDataLoaders.from_lists': ( 'vision.data.html#imagedataloaders.from_lists',
                                                                                        'fastai/vision/data.py'),
                                    'fastai.vision.data.ImageDataLoaders.from_name_func': ( 'vision.data.html#imagedataloaders.from_name_func',
                                                                                            'fastai/vision/data.py'),
                                    'fastai.vision.data.ImageDataLoaders.from_name_re': ( 'vision.data.html#imagedataloaders.from_name_re',
                                                                                          'fastai/vision/data.py'),
                                    'fastai.vision.data.ImageDataLoaders.from_path_func': ( 'vision.data.html#imagedataloaders.from_path_func',
                                                                                            'fastai/vision/data.py'),
                                    'fastai.vision.data.ImageDataLoaders.from_path_re': ( 'vision.data.html#imagedataloaders.from_path_re',
                                                                                          'fastai/vision/data.py'),
                                    'fastai.vision.data.MaskBlock': ('vision.data.html#maskblock', 'fastai/vision/data.py'),
                                    'fastai.vision.data.SegmentationDataLoaders': ( 'vision.data.html#segmentationdataloaders',
                                                                                    'fastai/vision/data.py'),
                                    'fastai.vision.data.SegmentationDataLoaders.from_label_func': ( 'vision.data.html#segmentationdataloaders.from_label_func',
                                                                                                    'fastai/vision/data.py'),
                                    'fastai.vision.data.bb_pad': ('vision.data.html#bb_pad', 'fastai/vision/data.py'),
                                    'fastai.vision.data.clip_remove_empty': ('vision.data.html#clip_remove_empty', 'fastai/vision/data.py'),
                                    'fastai.vision.data.get_grid': ('vision.data.html#get_grid', 'fastai/vision/data.py'),
                                    'fastai.vision.data.show_batch': ('vision.data.html#show_batch', 'fastai/vision/data.py')},
            'fastai.vision.gan': { 'fastai.vision.gan.AdaptiveGANSwitcher': ('vision.gan.html#adaptiveganswitcher', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.AdaptiveGANSwitcher.__init__': ( 'vision.gan.html#adaptiveganswitcher.__init__',
                                                                                       'fastai/vision/gan.py'),
                                   'fastai.vision.gan.AdaptiveGANSwitcher.after_batch': ( 'vision.gan.html#adaptiveganswitcher.after_batch',
                                                                                          'fastai/vision/gan.py'),
                                   'fastai.vision.gan.AdaptiveLoss': ('vision.gan.html#adaptiveloss', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.AdaptiveLoss.__init__': ( 'vision.gan.html#adaptiveloss.__init__',
                                                                                'fastai/vision/gan.py'),
                                   'fastai.vision.gan.AdaptiveLoss.forward': ( 'vision.gan.html#adaptiveloss.forward',
                                                                               'fastai/vision/gan.py'),
                                   'fastai.vision.gan.AddChannels': ('vision.gan.html#addchannels', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.AddChannels.__init__': ( 'vision.gan.html#addchannels.__init__',
                                                                               'fastai/vision/gan.py'),
                                   'fastai.vision.gan.AddChannels.forward': ('vision.gan.html#addchannels.forward', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.DenseResBlock': ('vision.gan.html#denseresblock', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.FixedGANSwitcher': ('vision.gan.html#fixedganswitcher', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.FixedGANSwitcher.__init__': ( 'vision.gan.html#fixedganswitcher.__init__',
                                                                                    'fastai/vision/gan.py'),
                                   'fastai.vision.gan.FixedGANSwitcher.after_batch': ( 'vision.gan.html#fixedganswitcher.after_batch',
                                                                                       'fastai/vision/gan.py'),
                                   'fastai.vision.gan.FixedGANSwitcher.before_train': ( 'vision.gan.html#fixedganswitcher.before_train',
                                                                                        'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANDiscriminativeLR': ('vision.gan.html#gandiscriminativelr', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANDiscriminativeLR.__init__': ( 'vision.gan.html#gandiscriminativelr.__init__',
                                                                                       'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANDiscriminativeLR.after_batch': ( 'vision.gan.html#gandiscriminativelr.after_batch',
                                                                                          'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANDiscriminativeLR.before_batch': ( 'vision.gan.html#gandiscriminativelr.before_batch',
                                                                                           'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANLearner': ('vision.gan.html#ganlearner', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANLearner.__init__': ('vision.gan.html#ganlearner.__init__', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANLearner.from_learners': ( 'vision.gan.html#ganlearner.from_learners',
                                                                                   'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANLearner.wgan': ('vision.gan.html#ganlearner.wgan', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANLoss': ('vision.gan.html#ganloss', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANLoss.__init__': ('vision.gan.html#ganloss.__init__', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANLoss.critic': ('vision.gan.html#ganloss.critic', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANLoss.generator': ('vision.gan.html#ganloss.generator', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANModule': ('vision.gan.html#ganmodule', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANModule.__init__': ('vision.gan.html#ganmodule.__init__', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANModule.forward': ('vision.gan.html#ganmodule.forward', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANModule.switch': ('vision.gan.html#ganmodule.switch', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANTrainer': ('vision.gan.html#gantrainer', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANTrainer.__init__': ('vision.gan.html#gantrainer.__init__', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANTrainer._set_trainable': ( 'vision.gan.html#gantrainer._set_trainable',
                                                                                    'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANTrainer.after_batch': ( 'vision.gan.html#gantrainer.after_batch',
                                                                                 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANTrainer.before_batch': ( 'vision.gan.html#gantrainer.before_batch',
                                                                                  'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANTrainer.before_epoch': ( 'vision.gan.html#gantrainer.before_epoch',
                                                                                  'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANTrainer.before_fit': ( 'vision.gan.html#gantrainer.before_fit',
                                                                                'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANTrainer.before_validate': ( 'vision.gan.html#gantrainer.before_validate',
                                                                                     'fastai/vision/gan.py'),
                                   'fastai.vision.gan.GANTrainer.switch': ('vision.gan.html#gantrainer.switch', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.InvisibleTensor': ('vision.gan.html#invisibletensor', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.InvisibleTensor.show': ( 'vision.gan.html#invisibletensor.show',
                                                                               'fastai/vision/gan.py'),
                                   'fastai.vision.gan._conv': ('vision.gan.html#_conv', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan._tk_diff': ('vision.gan.html#_tk_diff', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan._tk_mean': ('vision.gan.html#_tk_mean', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.accuracy_thresh_expand': ( 'vision.gan.html#accuracy_thresh_expand',
                                                                                 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.basic_critic': ('vision.gan.html#basic_critic', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.basic_generator': ('vision.gan.html#basic_generator', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.gan_critic': ('vision.gan.html#gan_critic', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.gan_loss_from_func': ('vision.gan.html#gan_loss_from_func', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.generate_noise': ('vision.gan.html#generate_noise', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.set_freeze_model': ('vision.gan.html#set_freeze_model', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.show_batch': ('vision.gan.html#show_batch', 'fastai/vision/gan.py'),
                                   'fastai.vision.gan.show_results': ('vision.gan.html#show_results', 'fastai/vision/gan.py')},
            'fastai.vision.learner': { 'fastai.vision.learner.TimmBody': ('vision.learner.html#timmbody', 'fastai/vision/learner.py'),
                                       'fastai.vision.learner.TimmBody.__init__': ( 'vision.learner.html#timmbody.__init__',
                                                                                    'fastai/vision/learner.py'),
                                       'fastai.vision.learner.TimmBody.forward': ( 'vision.learner.html#timmbody.forward',
                                                                                   'fastai/vision/learner.py'),
                                       'fastai.vision.learner._add_norm': ('vision.learner.html#_add_norm', 'fastai/vision/learner.py'),
                                       'fastai.vision.learner._alexnet_split': ( 'vision.learner.html#_alexnet_split',
                                                                                 'fastai/vision/learner.py'),
                                       'fastai.vision.learner._densenet_split': ( 'vision.learner.html#_densenet_split',
                                                                                  'fastai/vision/learner.py'),
                                       'fastai.vision.learner._get_first_layer': ( 'vision.learner.html#_get_first_layer',
                                                                                   'fastai/vision/learner.py'),
                                       'fastai.vision.learner._is_pool_type': ( 'vision.learner.html#_is_pool_type',
                                                                                'fastai/vision/learner.py'),
                                       'fastai.vision.learner._load_pretrained_weights': ( 'vision.learner.html#_load_pretrained_weights',
                                                                                           'fastai/vision/learner.py'),
                                       'fastai.vision.learner._resnet_split': ( 'vision.learner.html#_resnet_split',
                                                                                'fastai/vision/learner.py'),
                                       'fastai.vision.learner._squeezenet_split': ( 'vision.learner.html#_squeezenet_split',
                                                                                    'fastai/vision/learner.py'),
                                       'fastai.vision.learner._timm_norm': ('vision.learner.html#_timm_norm', 'fastai/vision/learner.py'),
                                       'fastai.vision.learner._update_first_layer': ( 'vision.learner.html#_update_first_layer',
                                                                                      'fastai/vision/learner.py'),
                                       'fastai.vision.learner._vgg_split': ('vision.learner.html#_vgg_split', 'fastai/vision/learner.py'),
                                       'fastai.vision.learner._xresnet_split': ( 'vision.learner.html#_xresnet_split',
                                                                                 'fastai/vision/learner.py'),
                                       'fastai.vision.learner.add_head': ('vision.learner.html#add_head', 'fastai/vision/learner.py'),
                                       'fastai.vision.learner.cnn_learner': ('vision.learner.html#cnn_learner', 'fastai/vision/learner.py'),
                                       'fastai.vision.learner.create_body': ('vision.learner.html#create_body', 'fastai/vision/learner.py'),
                                       'fastai.vision.learner.create_cnn_model': ( 'vision.learner.html#create_cnn_model',
                                                                                   'fastai/vision/learner.py'),
                                       'fastai.vision.learner.create_head': ('vision.learner.html#create_head', 'fastai/vision/learner.py'),
                                       'fastai.vision.learner.create_timm_model': ( 'vision.learner.html#create_timm_model',
                                                                                    'fastai/vision/learner.py'),
                                       'fastai.vision.learner.create_unet_model': ( 'vision.learner.html#create_unet_model',
                                                                                    'fastai/vision/learner.py'),
                                       'fastai.vision.learner.create_vision_model': ( 'vision.learner.html#create_vision_model',
                                                                                      'fastai/vision/learner.py'),
                                       'fastai.vision.learner.cut_model': ('vision.learner.html#cut_model', 'fastai/vision/learner.py'),
                                       'fastai.vision.learner.default_split': ( 'vision.learner.html#default_split',
                                                                                'fastai/vision/learner.py'),
                                       'fastai.vision.learner.has_pool_type': ( 'vision.learner.html#has_pool_type',
                                                                                'fastai/vision/learner.py'),
                                       'fastai.vision.learner.plot_top_losses': ( 'vision.learner.html#plot_top_losses',
                                                                                  'fastai/vision/learner.py'),
                                       'fastai.vision.learner.show_results': ( 'vision.learner.html#show_results',
                                                                               'fastai/vision/learner.py'),
                                       'fastai.vision.learner.unet_learner': ( 'vision.learner.html#unet_learner',
                                                                               'fastai/vision/learner.py'),
                                       'fastai.vision.learner.vision_learner': ( 'vision.learner.html#vision_learner',
                                                                                 'fastai/vision/learner.py')},
            'fastai.vision.models.all': {},
            'fastai.vision.models.tvm': {},
            'fastai.vision.models.unet': { 'fastai.vision.models.unet.DynamicUnet': ( 'vision.models.unet.html#dynamicunet',
                                                                                      'fastai/vision/models/unet.py'),
                                           'fastai.vision.models.unet.DynamicUnet.__del__': ( 'vision.models.unet.html#dynamicunet.__del__',
                                                                                              'fastai/vision/models/unet.py'),
                                           'fastai.vision.models.unet.DynamicUnet.__init__': ( 'vision.models.unet.html#dynamicunet.__init__',
                                                                                               'fastai/vision/models/unet.py'),
                                           'fastai.vision.models.unet.ResizeToOrig': ( 'vision.models.unet.html#resizetoorig',
                                                                                       'fastai/vision/models/unet.py'),
                                           'fastai.vision.models.unet.ResizeToOrig.__init__': ( 'vision.models.unet.html#resizetoorig.__init__',
                                                                                                'fastai/vision/models/unet.py'),
                                           'fastai.vision.models.unet.ResizeToOrig.forward': ( 'vision.models.unet.html#resizetoorig.forward',
                                                                                               'fastai/vision/models/unet.py'),
                                           'fastai.vision.models.unet.UnetBlock': ( 'vision.models.unet.html#unetblock',
                                                                                    'fastai/vision/models/unet.py'),
                                           'fastai.vision.models.unet.UnetBlock.__init__': ( 'vision.models.unet.html#unetblock.__init__',
                                                                                             'fastai/vision/models/unet.py'),
                                           'fastai.vision.models.unet.UnetBlock.forward': ( 'vision.models.unet.html#unetblock.forward',
                                                                                            'fastai/vision/models/unet.py'),
                                           'fastai.vision.models.unet._get_sz_change_idxs': ( 'vision.models.unet.html#_get_sz_change_idxs',
                                                                                              'fastai/vision/models/unet.py')},
            'fastai.vision.models.xresnet': { 'fastai.vision.models.xresnet.XResNet': ( 'vision.models.xresnet.html#xresnet',
                                                                                        'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.XResNet.__init__': ( 'vision.models.xresnet.html#xresnet.__init__',
                                                                                                 'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.XResNet._make_blocks': ( 'vision.models.xresnet.html#xresnet._make_blocks',
                                                                                                     'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.XResNet._make_layer': ( 'vision.models.xresnet.html#xresnet._make_layer',
                                                                                                    'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet._xresnet': ( 'vision.models.xresnet.html#_xresnet',
                                                                                         'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.init_cnn': ( 'vision.models.xresnet.html#init_cnn',
                                                                                         'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnet101': ( 'vision.models.xresnet.html#xresnet101',
                                                                                           'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnet152': ( 'vision.models.xresnet.html#xresnet152',
                                                                                           'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnet18': ( 'vision.models.xresnet.html#xresnet18',
                                                                                          'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnet18_deep': ( 'vision.models.xresnet.html#xresnet18_deep',
                                                                                               'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnet18_deeper': ( 'vision.models.xresnet.html#xresnet18_deeper',
                                                                                                 'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnet34': ( 'vision.models.xresnet.html#xresnet34',
                                                                                          'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnet34_deep': ( 'vision.models.xresnet.html#xresnet34_deep',
                                                                                               'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnet34_deeper': ( 'vision.models.xresnet.html#xresnet34_deeper',
                                                                                                 'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnet50': ( 'vision.models.xresnet.html#xresnet50',
                                                                                          'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnet50_deep': ( 'vision.models.xresnet.html#xresnet50_deep',
                                                                                               'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnet50_deeper': ( 'vision.models.xresnet.html#xresnet50_deeper',
                                                                                                 'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnext101': ( 'vision.models.xresnet.html#xresnext101',
                                                                                            'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnext18': ( 'vision.models.xresnet.html#xresnext18',
                                                                                           'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnext34': ( 'vision.models.xresnet.html#xresnext34',
                                                                                           'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xresnext50': ( 'vision.models.xresnet.html#xresnext50',
                                                                                           'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnet101': ( 'vision.models.xresnet.html#xse_resnet101',
                                                                                              'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnet152': ( 'vision.models.xresnet.html#xse_resnet152',
                                                                                              'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnet18': ( 'vision.models.xresnet.html#xse_resnet18',
                                                                                             'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnet34': ( 'vision.models.xresnet.html#xse_resnet34',
                                                                                             'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnet50': ( 'vision.models.xresnet.html#xse_resnet50',
                                                                                             'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnext101': ( 'vision.models.xresnet.html#xse_resnext101',
                                                                                               'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnext18': ( 'vision.models.xresnet.html#xse_resnext18',
                                                                                              'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnext18_deep': ( 'vision.models.xresnet.html#xse_resnext18_deep',
                                                                                                   'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnext18_deeper': ( 'vision.models.xresnet.html#xse_resnext18_deeper',
                                                                                                     'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnext34': ( 'vision.models.xresnet.html#xse_resnext34',
                                                                                              'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnext34_deep': ( 'vision.models.xresnet.html#xse_resnext34_deep',
                                                                                                   'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnext34_deeper': ( 'vision.models.xresnet.html#xse_resnext34_deeper',
                                                                                                     'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnext50': ( 'vision.models.xresnet.html#xse_resnext50',
                                                                                              'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnext50_deep': ( 'vision.models.xresnet.html#xse_resnext50_deep',
                                                                                                   'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xse_resnext50_deeper': ( 'vision.models.xresnet.html#xse_resnext50_deeper',
                                                                                                     'fastai/vision/models/xresnet.py'),
                                              'fastai.vision.models.xresnet.xsenet154': ( 'vision.models.xresnet.html#xsenet154',
                                                                                          'fastai/vision/models/xresnet.py')},
            'fastai.vision.utils': { 'fastai.vision.utils._download_image_inner': ( 'vision.utils.html#_download_image_inner',
                                                                                    'fastai/vision/utils.py'),
                                     'fastai.vision.utils._get_downloaded_image_filename': ( 'vision.utils.html#_get_downloaded_image_filename',
                                                                                             'fastai/vision/utils.py'),
                                     'fastai.vision.utils.download_images': ('vision.utils.html#download_images', 'fastai/vision/utils.py'),
                                     'fastai.vision.utils.resize_image': ('vision.utils.html#resize_image', 'fastai/vision/utils.py'),
                                     'fastai.vision.utils.resize_images': ('vision.utils.html#resize_images', 'fastai/vision/utils.py'),
                                     'fastai.vision.utils.resize_to': ('vision.utils.html#resize_to', 'fastai/vision/utils.py'),
                                     'fastai.vision.utils.verify_image': ('vision.utils.html#verify_image', 'fastai/vision/utils.py'),
                                     'fastai.vision.utils.verify_images': ('vision.utils.html#verify_images', 'fastai/vision/utils.py')},
            'fastai.vision.widgets': { 'fastai.vision.widgets.Box.__getitem__': ( 'vision.widgets.html#box.__getitem__',
                                                                                  'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets.ImageClassifierCleaner': ( 'vision.widgets.html#imageclassifiercleaner',
                                                                                         'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets.ImageClassifierCleaner.__init__': ( 'vision.widgets.html#imageclassifiercleaner.__init__',
                                                                                                  'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets.ImageClassifierCleaner._ipython_display_': ( 'vision.widgets.html#imageclassifiercleaner._ipython_display_',
                                                                                                           'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets.ImageClassifierCleaner.on_change_ds': ( 'vision.widgets.html#imageclassifiercleaner.on_change_ds',
                                                                                                      'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets.ImagesCleaner': ( 'vision.widgets.html#imagescleaner',
                                                                                'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets.ImagesCleaner.__init__': ( 'vision.widgets.html#imagescleaner.__init__',
                                                                                         'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets.ImagesCleaner._ipython_display_': ( 'vision.widgets.html#imagescleaner._ipython_display_',
                                                                                                  'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets.ImagesCleaner.change': ( 'vision.widgets.html#imagescleaner.change',
                                                                                       'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets.ImagesCleaner.delete': ( 'vision.widgets.html#imagescleaner.delete',
                                                                                       'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets.ImagesCleaner.set_fns': ( 'vision.widgets.html#imagescleaner.set_fns',
                                                                                        'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets.ImagesCleaner.values': ( 'vision.widgets.html#imagescleaner.values',
                                                                                       'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets._get_iw_info': ( 'vision.widgets.html#_get_iw_info',
                                                                               'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets._open_thumb': ('vision.widgets.html#_open_thumb', 'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets._update_children': ( 'vision.widgets.html#_update_children',
                                                                                   'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets.carousel': ('vision.widgets.html#carousel', 'fastai/vision/widgets.py'),
                                       'fastai.vision.widgets.widget': ('vision.widgets.html#widget', 'fastai/vision/widgets.py')}}}
