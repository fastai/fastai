name: CI
on: 
  workflow_dispatch: #allows repo admins to trigger this workflow from the Actions tab
  pull_request:
  push:
    branches: 
      - master
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/main.yml'
      - 'docs/**'
      - '*.md'
      - '.git*'

jobs: 
  debug:
    runs-on: ubuntu-latest
    steps:

    - name: see payload
      run: |
        echo "$PAYLOAD"
      env:
        PAYLOAD: ${{ toJSON(github.event) }}
    
    - name: store payload
      uses: actions/upload-artifact@v2
      with:
        name: payload.json
        path: ${{ github.event_path }}
        
  filter:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "passed filter"
          echo "event_name: ${{ github.event_name }}"
          echo "head_commit.author.username: ${{ github.event.head_commit.author.username }}"
 
  test-nbdev-sync:
    needs: filter
    runs-on: ubuntu-latest
    container: fastai/jekyll
    steps:
    - name: checkout contents of PR
      uses: actions/checkout@v2
    - name: Install libraries
      run: |
        pip install -Uqq nbdev
        pip install -Uqe .
    - name: check if notebooks are synced and cleaned
      uses: fastai/workflows/nb@master

  test-notebooks:
    needs: filter
    runs-on: ubuntu-latest
    env:
      download: "true"
      caching: "true"
    strategy:
      matrix:
        py:  ["3.7", "3.8", "3.9"]
        nb_dec : ['[0-2]','[3-5]','[6-9]']
        nb_unit: ['[0-2]','[3-5]','[6-9]']
    steps: 
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.py }}
    - name: checkout contents of PR
      uses: actions/checkout@v3
    - name: Install libraries
      run: |
        pip install git+https://github.com/fastai/fastcore.git
        pip install -Uq fastprogress
        pip install -Uqe .[dev]
    
    - name: check for cache hit
      uses: actions/cache@v3
      if: env.caching == 'true'
      id: cache
      with:
        path: ~/.fastai/data
        key: 'fastai-test-data-v3'

    - name: download data
      if: env.download == 'true' && steps.cache.outputs.cache-hit != 'true'
      run: |
        wget https://raw.githubusercontent.com/fastai/docker-containers/master/fastai/tmp_scripts/download_testdata.py
        ipython download_testdata.py
        mkdir -p $HOME/.fastai/data
        find $HOME/.fastai/archive/ -name "*.tgz" -exec tar -xzvf {} -C $HOME/.fastai/data \;
    - name: Test notebooks batch ${{matrix.nb_dec}}${{matrix.nb_unit}}
      run: nbdev_test_nbs --flags '' --n_workers 3 --pause 1.0 --fname "nbs/${{matrix.nb_dec}}${{matrix.nb_unit}}*.ipynb"
  
